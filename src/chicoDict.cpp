//
// File generated by rootcint at Thu Sep  8 12:06:24 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIchicoDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "chicoDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void CHICOFull_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CHICOFull(void *p = 0);
   static void *newArray_CHICOFull(Long_t size, void *p);
   static void delete_CHICOFull(void *p);
   static void deleteArray_CHICOFull(void *p);
   static void destruct_CHICOFull(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CHICOFull*)
   {
      ::CHICOFull *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CHICOFull >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CHICOFull", ::CHICOFull::Class_Version(), "./src/CHICO.h", 80,
                  typeid(::CHICOFull), DefineBehavior(ptr, ptr),
                  &::CHICOFull::Dictionary, isa_proxy, 4,
                  sizeof(::CHICOFull) );
      instance.SetNew(&new_CHICOFull);
      instance.SetNewArray(&newArray_CHICOFull);
      instance.SetDelete(&delete_CHICOFull);
      instance.SetDeleteArray(&deleteArray_CHICOFull);
      instance.SetDestructor(&destruct_CHICOFull);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CHICOFull*)
   {
      return GenerateInitInstanceLocal((::CHICOFull*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CHICOFull*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CHICORaw_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CHICORaw(void *p = 0);
   static void *newArray_CHICORaw(Long_t size, void *p);
   static void delete_CHICORaw(void *p);
   static void deleteArray_CHICORaw(void *p);
   static void destruct_CHICORaw(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CHICORaw*)
   {
      ::CHICORaw *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CHICORaw >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CHICORaw", ::CHICORaw::Class_Version(), "./src/CHICO.h", 27,
                  typeid(::CHICORaw), DefineBehavior(ptr, ptr),
                  &::CHICORaw::Dictionary, isa_proxy, 4,
                  sizeof(::CHICORaw) );
      instance.SetNew(&new_CHICORaw);
      instance.SetNewArray(&newArray_CHICORaw);
      instance.SetDelete(&delete_CHICORaw);
      instance.SetDeleteArray(&deleteArray_CHICORaw);
      instance.SetDestructor(&destruct_CHICORaw);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CHICORaw*)
   {
      return GenerateInitInstanceLocal((::CHICORaw*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CHICORaw*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CHICOParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CHICOParticle(void *p = 0);
   static void *newArray_CHICOParticle(Long_t size, void *p);
   static void delete_CHICOParticle(void *p);
   static void deleteArray_CHICOParticle(void *p);
   static void destruct_CHICOParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CHICOParticle*)
   {
      ::CHICOParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CHICOParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CHICOParticle", ::CHICOParticle::Class_Version(), "./src/CHICO.h", 52,
                  typeid(::CHICOParticle), DefineBehavior(ptr, ptr),
                  &::CHICOParticle::Dictionary, isa_proxy, 4,
                  sizeof(::CHICOParticle) );
      instance.SetNew(&new_CHICOParticle);
      instance.SetNewArray(&newArray_CHICOParticle);
      instance.SetDelete(&delete_CHICOParticle);
      instance.SetDeleteArray(&deleteArray_CHICOParticle);
      instance.SetDestructor(&destruct_CHICOParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CHICOParticle*)
   {
      return GenerateInitInstanceLocal((::CHICOParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CHICOParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *CHICOFull::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CHICOFull::Class_Name()
{
   return "CHICOFull";
}

//______________________________________________________________________________
const char *CHICOFull::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CHICOFull*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CHICOFull::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CHICOFull*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CHICOFull::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CHICOFull*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CHICOFull::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CHICOFull*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CHICORaw::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CHICORaw::Class_Name()
{
   return "CHICORaw";
}

//______________________________________________________________________________
const char *CHICORaw::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CHICORaw*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CHICORaw::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CHICORaw*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CHICORaw::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CHICORaw*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CHICORaw::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CHICORaw*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CHICOParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CHICOParticle::Class_Name()
{
   return "CHICOParticle";
}

//______________________________________________________________________________
const char *CHICOParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CHICOParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CHICOParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CHICOParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CHICOParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CHICOParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CHICOParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CHICOParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void CHICORaw::Streamer(TBuffer &R__b)
{
   // Stream an object of class CHICORaw.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CHICORaw::Class(),this);
   } else {
      R__b.WriteClassBuffer(CHICORaw::Class(),this);
   }
}

//______________________________________________________________________________
void CHICORaw::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CHICORaw.
      TClass *R__cl = ::CHICORaw::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_top", &m_top);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LEDts", &LEDts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cathode_tdc_num", &cathode_tdc_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cathode_tdc_val[128]", cathode_tdc_val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cathode_tdc_ch[128]", cathode_tdc_ch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "anode_tdc_num", &anode_tdc_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "anode_tdc_val[128]", anode_tdc_val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "anode_tdc_ch[128]", anode_tdc_ch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "anode_qdc_num", &anode_qdc_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "anode_qdc_val[32]", anode_qdc_val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "anode_qdc_ch[32]", anode_qdc_ch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status", &status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RF", &RF);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CHICORaw(void *p) {
      return  p ? new(p) ::CHICORaw : new ::CHICORaw;
   }
   static void *newArray_CHICORaw(Long_t nElements, void *p) {
      return p ? new(p) ::CHICORaw[nElements] : new ::CHICORaw[nElements];
   }
   // Wrapper around operator delete
   static void delete_CHICORaw(void *p) {
      delete ((::CHICORaw*)p);
   }
   static void deleteArray_CHICORaw(void *p) {
      delete [] ((::CHICORaw*)p);
   }
   static void destruct_CHICORaw(void *p) {
      typedef ::CHICORaw current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CHICORaw

//______________________________________________________________________________
void CHICOParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class CHICOParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CHICOParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(CHICOParticle::Class(),this);
   }
}

//______________________________________________________________________________
void CHICOParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CHICOParticle.
      TClass *R__cl = ::CHICOParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_top", &m_top);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t", &t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof", &tof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass", &mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaL", &thetaL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiL", &phiL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaR", &thetaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiR", &phiR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaL", &fThetaL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiL", &fPhiL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaR", &fThetaR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiR", &fPhiR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eL", &eL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eR", &eR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rf", &rf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pgCosL", &pgCosL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pgCosR", &pgCosR);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CHICOParticle(void *p) {
      return  p ? new(p) ::CHICOParticle : new ::CHICOParticle;
   }
   static void *newArray_CHICOParticle(Long_t nElements, void *p) {
      return p ? new(p) ::CHICOParticle[nElements] : new ::CHICOParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_CHICOParticle(void *p) {
      delete ((::CHICOParticle*)p);
   }
   static void deleteArray_CHICOParticle(void *p) {
      delete [] ((::CHICOParticle*)p);
   }
   static void destruct_CHICOParticle(void *p) {
      typedef ::CHICOParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CHICOParticle

//______________________________________________________________________________
void CHICOFull::Streamer(TBuffer &R__b)
{
   // Stream an object of class CHICOFull.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CHICOFull::Class(),this);
   } else {
      R__b.WriteClassBuffer(CHICOFull::Class(),this);
   }
}

//______________________________________________________________________________
void CHICOFull::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CHICOFull.
      TClass *R__cl = ::CHICOFull::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "raw", &raw);
      R__insp.InspectMember(raw, "raw.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particle", &particle);
      R__insp.InspectMember(particle, "particle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gotParticle", &gotParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "multiAnodeTDCNum", &multiAnodeTDCNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "multiCathodeTDCNum", &multiCathodeTDCNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaOffset[20]", thetaOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaGain[20]", thetaGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaQuad[20]", thetaQuad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiOffset[20]", phiOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiGain[20]", phiGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaT[160]", betaT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaP[160]", betaP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rawCHICO[8192]", rawCHICO);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "offsetTarget", &offsetTarget);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CHICOFull(void *p) {
      return  p ? new(p) ::CHICOFull : new ::CHICOFull;
   }
   static void *newArray_CHICOFull(Long_t nElements, void *p) {
      return p ? new(p) ::CHICOFull[nElements] : new ::CHICOFull[nElements];
   }
   // Wrapper around operator delete
   static void delete_CHICOFull(void *p) {
      delete ((::CHICOFull*)p);
   }
   static void deleteArray_CHICOFull(void *p) {
      delete [] ((::CHICOFull*)p);
   }
   static void destruct_CHICOFull(void *p) {
      typedef ::CHICOFull current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CHICOFull

/********************************************************
* src/chicoDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablechicoDict();

extern "C" void G__set_cpp_environmentchicoDict() {
  G__cpp_reset_tagtablechicoDict();
}
#include <new>
extern "C" int G__cpp_dllrevchicoDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CHICOFull */
static int G__chicoDict_184_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CHICOFull* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CHICOFull[n];
     } else {
       p = new((void*) gvp) CHICOFull[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CHICOFull;
     } else {
       p = new((void*) gvp) CHICOFull;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__chicoDictLN_CHICOFull));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICOFull*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICOFull*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICOFull*) G__getstructoffset())->InitializeCHICOVariables(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICOFull*) G__getstructoffset())->ReadThetaCalibration(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICOFull*) G__getstructoffset())->ReadPhiCalibration(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICOFull*) G__getstructoffset())->ReadBetaCalibration(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CHICOFull*) G__getstructoffset())->getAndUnpackCHICO((FILE*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICOFull*) G__getstructoffset())->GetParticle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((CHICOFull*) G__getstructoffset())->calcCos((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CHICOFull::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CHICOFull::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CHICOFull::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CHICOFull::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICOFull*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CHICOFull::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CHICOFull::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CHICOFull::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_184_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CHICOFull::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__chicoDict_184_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CHICOFull* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CHICOFull(*(CHICOFull*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__chicoDictLN_CHICOFull));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CHICOFull G__TCHICOFull;
static int G__chicoDict_184_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CHICOFull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CHICOFull*) (soff+(sizeof(CHICOFull)*i)))->~G__TCHICOFull();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CHICOFull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CHICOFull*) (soff))->~G__TCHICOFull();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__chicoDict_184_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CHICOFull* dest = (CHICOFull*) G__getstructoffset();
   *dest = *(CHICOFull*) libp->para[0].ref;
   const CHICOFull& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CHICORaw */
static int G__chicoDict_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICORaw*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICORaw*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CHICORaw::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CHICORaw::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CHICORaw::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CHICORaw::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_185_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICORaw*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_185_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CHICORaw::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_185_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CHICORaw::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_185_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CHICORaw::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_185_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CHICORaw::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__chicoDict_185_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CHICORaw *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CHICORaw[n];
     } else {
       p = new((void*) gvp) CHICORaw[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CHICORaw;
     } else {
       p = new((void*) gvp) CHICORaw;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__chicoDictLN_CHICORaw));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__chicoDict_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CHICORaw* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CHICORaw(*(CHICORaw*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__chicoDictLN_CHICORaw));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CHICORaw G__TCHICORaw;
static int G__chicoDict_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CHICORaw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CHICORaw*) (soff+(sizeof(CHICORaw)*i)))->~G__TCHICORaw();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CHICORaw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CHICORaw*) (soff))->~G__TCHICORaw();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__chicoDict_185_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CHICORaw* dest = (CHICORaw*) G__getstructoffset();
   *dest = *(CHICORaw*) libp->para[0].ref;
   const CHICORaw& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CHICOParticle */
static int G__chicoDict_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICOParticle*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICOParticle*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_186_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CHICOParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_186_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CHICOParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_186_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CHICOParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_186_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CHICOParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_186_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CHICOParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_186_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CHICOParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_186_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CHICOParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_186_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CHICOParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__chicoDict_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CHICOParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__chicoDict_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CHICOParticle *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CHICOParticle[n];
     } else {
       p = new((void*) gvp) CHICOParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CHICOParticle;
     } else {
       p = new((void*) gvp) CHICOParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__chicoDictLN_CHICOParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__chicoDict_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CHICOParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CHICOParticle(*(CHICOParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__chicoDictLN_CHICOParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CHICOParticle G__TCHICOParticle;
static int G__chicoDict_186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CHICOParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CHICOParticle*) (soff+(sizeof(CHICOParticle)*i)))->~G__TCHICOParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CHICOParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CHICOParticle*) (soff))->~G__TCHICOParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__chicoDict_186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CHICOParticle* dest = (CHICOParticle*) G__getstructoffset();
   *dest = *(CHICOParticle*) libp->para[0].ref;
   const CHICOParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CHICOFull */

/* CHICORaw */

/* CHICOParticle */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncchicoDict {
 public:
  G__Sizep2memfuncchicoDict(): p(&G__Sizep2memfuncchicoDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncchicoDict::*p)();
};

size_t G__get_sizep2memfuncchicoDict()
{
  G__Sizep2memfuncchicoDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancechicoDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__chicoDictLN_CHICOFull))) {
     CHICOFull *G__Lderived;
     G__Lderived=(CHICOFull*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__chicoDictLN_CHICOFull),G__get_linked_tagnum(&G__chicoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__chicoDictLN_CHICORaw))) {
     CHICORaw *G__Lderived;
     G__Lderived=(CHICORaw*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__chicoDictLN_CHICORaw),G__get_linked_tagnum(&G__chicoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__chicoDictLN_CHICOParticle))) {
     CHICOParticle *G__Lderived;
     G__Lderived=(CHICOParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__chicoDictLN_CHICOParticle),G__get_linked_tagnum(&G__chicoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablechicoDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__chicoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__chicoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__chicoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__chicoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__chicoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__chicoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__chicoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__chicoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__chicoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__chicoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CHICOFull */
static void G__setup_memvarCHICOFull(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__chicoDictLN_CHICOFull));
   { CHICOFull *p; p=(CHICOFull*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->raw)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__chicoDictLN_CHICORaw),-1,-1,1,"raw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__chicoDictLN_CHICOParticle),-1,-1,1,"particle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gotParticle)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"gotParticle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->multiAnodeTDCNum)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"multiAnodeTDCNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->multiCathodeTDCNum)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"multiCathodeTDCNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thetaOffset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"thetaOffset[20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thetaGain)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"thetaGain[20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thetaQuad)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"thetaQuad[20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phiOffset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"phiOffset[20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phiGain)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"phiGain[20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->betaT)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"betaT[160]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->betaP)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"betaP[160]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rawCHICO)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"rawCHICO[8192]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->offsetTarget)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"offsetTarget=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__chicoDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CHICORaw */
static void G__setup_memvarCHICORaw(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__chicoDictLN_CHICORaw));
   { CHICORaw *p; p=(CHICORaw*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__chicoDictLN_CHICOFull),-1,-1,4,"m_top=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LEDts)-(long)(p)),109,0,0,-1,-1,-1,1,"LEDts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cathode_tdc_num)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"cathode_tdc_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cathode_tdc_val)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"cathode_tdc_val[128]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cathode_tdc_ch)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"cathode_tdc_ch[128]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->anode_tdc_num)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"anode_tdc_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->anode_tdc_val)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"anode_tdc_val[128]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->anode_tdc_ch)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"anode_tdc_ch[128]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->anode_qdc_num)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"anode_qdc_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->anode_qdc_val)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"anode_qdc_val[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->anode_qdc_ch)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"anode_qdc_ch[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->status)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RF)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"RF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__chicoDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CHICOParticle */
static void G__setup_memvarCHICOParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__chicoDictLN_CHICOParticle));
   { CHICOParticle *p; p=(CHICOParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__chicoDictLN_CHICOFull),-1,-1,4,"m_top=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->t)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"t=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tof)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tof=",0,"left - right */");
   G__memvar_setup((void*)((long)(&p->mass)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thetaL)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"thetaL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phiL)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"phiL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thetaR)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"thetaR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phiR)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"phiR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fThetaL)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fThetaL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPhiL)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fPhiL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fThetaR)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fThetaR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPhiR)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fPhiR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eL)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eR)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rf)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"rf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pgCosL)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pgCosL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pgCosR)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pgCosR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__chicoDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarchicoDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCHICOFull(void) {
   /* CHICOFull */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__chicoDictLN_CHICOFull));
   G__memfunc_setup("CHICOFull",761,G__chicoDict_184_0_1, 105, G__get_linked_tagnum(&G__chicoDictLN_CHICOFull), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__chicoDict_184_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__chicoDict_184_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCHICOVariables",2321,G__chicoDict_184_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - thetaCalFile u 'TString' - 0 - phiCalFile "
"u 'TString' - 0 - betaCalFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadThetaCalibration",2010,G__chicoDict_184_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - thetaCalFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadPhiCalibration",1797,G__chicoDict_184_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - phiCalFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadBetaCalibration",1888,G__chicoDict_184_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - betaCalFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAndUnpackCHICO",1563,G__chicoDict_184_0_8, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"E - - 0 - inf i - 'Int_t' 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticle",1108,G__chicoDict_184_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcCos",696,G__chicoDict_184_0_10, 102, -1, G__defined_typename("Float_t"), 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - pTheta f - 'Float_t' 0 - pPhi "
"f - 'Float_t' 0 - gTheta f - 'Float_t' 0 - gPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__chicoDict_184_0_11, 85, G__get_linked_tagnum(&G__chicoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CHICOFull::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__chicoDict_184_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CHICOFull::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__chicoDict_184_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CHICOFull::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__chicoDict_184_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CHICOFull::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__chicoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__chicoDict_184_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__chicoDict_184_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CHICOFull::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__chicoDict_184_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CHICOFull::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__chicoDict_184_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CHICOFull::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__chicoDict_184_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CHICOFull::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CHICOFull", 761, G__chicoDict_184_0_23, (int) ('i'), G__get_linked_tagnum(&G__chicoDictLN_CHICOFull), -1, 0, 1, 1, 1, 0, "u 'CHICOFull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CHICOFull", 887, G__chicoDict_184_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__chicoDict_184_0_25, (int) ('u'), G__get_linked_tagnum(&G__chicoDictLN_CHICOFull), -1, 1, 1, 1, 1, 0, "u 'CHICOFull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCHICORaw(void) {
   /* CHICORaw */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__chicoDictLN_CHICORaw));
   G__memfunc_setup("Initialize",1042,G__chicoDict_185_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__chicoDict_185_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__chicoDict_185_0_3, 85, G__get_linked_tagnum(&G__chicoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CHICORaw::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__chicoDict_185_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CHICORaw::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__chicoDict_185_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CHICORaw::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__chicoDict_185_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CHICORaw::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__chicoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__chicoDict_185_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__chicoDict_185_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CHICORaw::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__chicoDict_185_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CHICORaw::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__chicoDict_185_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CHICORaw::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__chicoDict_185_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CHICORaw::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("CHICORaw", 656, G__chicoDict_185_0_15, (int) ('i'), G__get_linked_tagnum(&G__chicoDictLN_CHICORaw), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CHICORaw", 656, G__chicoDict_185_0_16, (int) ('i'), G__get_linked_tagnum(&G__chicoDictLN_CHICORaw), -1, 0, 1, 1, 1, 0, "u 'CHICORaw' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CHICORaw", 782, G__chicoDict_185_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__chicoDict_185_0_18, (int) ('u'), G__get_linked_tagnum(&G__chicoDictLN_CHICORaw), -1, 1, 1, 1, 1, 0, "u 'CHICORaw' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCHICOParticle(void) {
   /* CHICOParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__chicoDictLN_CHICOParticle));
   G__memfunc_setup("Initialize",1042,G__chicoDict_186_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__chicoDict_186_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__chicoDict_186_0_3, 85, G__get_linked_tagnum(&G__chicoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CHICOParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__chicoDict_186_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CHICOParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__chicoDict_186_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CHICOParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__chicoDict_186_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CHICOParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__chicoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__chicoDict_186_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__chicoDict_186_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CHICOParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__chicoDict_186_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CHICOParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__chicoDict_186_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CHICOParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__chicoDict_186_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CHICOParticle::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("CHICOParticle", 1178, G__chicoDict_186_0_15, (int) ('i'), G__get_linked_tagnum(&G__chicoDictLN_CHICOParticle), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CHICOParticle", 1178, G__chicoDict_186_0_16, (int) ('i'), G__get_linked_tagnum(&G__chicoDictLN_CHICOParticle), -1, 0, 1, 1, 1, 0, "u 'CHICOParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CHICOParticle", 1304, G__chicoDict_186_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__chicoDict_186_0_18, (int) ('u'), G__get_linked_tagnum(&G__chicoDictLN_CHICOParticle), -1, 1, 1, 1, 1, 0, "u 'CHICOParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncchicoDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalchicoDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcchicoDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__chicoDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__chicoDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__chicoDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__chicoDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__chicoDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__chicoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__chicoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__chicoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__chicoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__chicoDictLN_CHICOFull = { "CHICOFull" , 99 , -1 };
G__linked_taginfo G__chicoDictLN_CHICORaw = { "CHICORaw" , 99 , -1 };
G__linked_taginfo G__chicoDictLN_CHICOParticle = { "CHICOParticle" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablechicoDict() {
  G__chicoDictLN_TClass.tagnum = -1 ;
  G__chicoDictLN_TBuffer.tagnum = -1 ;
  G__chicoDictLN_TMemberInspector.tagnum = -1 ;
  G__chicoDictLN_TObject.tagnum = -1 ;
  G__chicoDictLN_TString.tagnum = -1 ;
  G__chicoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__chicoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__chicoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__chicoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__chicoDictLN_CHICOFull.tagnum = -1 ;
  G__chicoDictLN_CHICORaw.tagnum = -1 ;
  G__chicoDictLN_CHICOParticle.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablechicoDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__chicoDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__chicoDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__chicoDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__chicoDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__chicoDictLN_TString);
   G__get_linked_tagnum_fwd(&G__chicoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__chicoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__chicoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__chicoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__chicoDictLN_CHICOFull),sizeof(CHICOFull),-1,291072,(char*)NULL,G__setup_memvarCHICOFull,G__setup_memfuncCHICOFull);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__chicoDictLN_CHICORaw),sizeof(CHICORaw),-1,290816,(char*)NULL,G__setup_memvarCHICORaw,G__setup_memfuncCHICORaw);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__chicoDictLN_CHICOParticle),sizeof(CHICOParticle),-1,290816,(char*)NULL,G__setup_memvarCHICOParticle,G__setup_memfuncCHICOParticle);
}
extern "C" void G__cpp_setupchicoDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupchicoDict()");
  G__set_cpp_environmentchicoDict();
  G__cpp_setup_tagtablechicoDict();

  G__cpp_setup_inheritancechicoDict();

  G__cpp_setup_typetablechicoDict();

  G__cpp_setup_memvarchicoDict();

  G__cpp_setup_memfuncchicoDict();
  G__cpp_setup_globalchicoDict();
  G__cpp_setup_funcchicoDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncchicoDict();
  return;
}
class G__cpp_setup_initchicoDict {
  public:
    G__cpp_setup_initchicoDict() { G__add_setup_func("chicoDict",(G__incsetup)(&G__cpp_setupchicoDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initchicoDict() { G__remove_setup_func("chicoDict"); }
};
G__cpp_setup_initchicoDict G__cpp_setup_initializerchicoDict;

