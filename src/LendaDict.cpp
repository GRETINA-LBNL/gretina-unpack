//
// File generated by rootcint at Fri Sep  9 15:56:54 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdILendaDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "LendaDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef mapInfo mapInfo;
      #else
      class mapInfo  {
         public:
         //friend XX;
         double EnergySlope; //
         double EnergyIntercept; //
         double TOFOffset; //
         string FullName; //
         string BarName; //
         string ReferenceName; //
         double BarAngle; //
         bool HasCorrections; //
         bool IsAReferenceChannel; //
         int GlobalID; //
         int ReferenceGlobalID; //
         int FL; //Timing filter Rise length */
         int FG; //Timing filter Gap Length */
         int d; //Timing filter CFD delay */
         int w; //Timing filter CFD scale factor */
         bool DontTraceAnalyze; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::lendaPacker lendaPacker;
      #else
      class lendaPacker  {
         public:
         //friend XX;
         ::lendaSettings* theSettings; //
         ::lendaFilter theFilter; //
         int already_called; //
         string mapFileName; //
         string correctionsFileName; //
         bool saveTraces; //
         double lg; //
         double sg; //
         double lg2; //
         double sg2; //
         int traceDelay; //
         G__int64 jentry; //
         int thisChannelsNumZeroCrossings; //
         vector< Double_t > thisChannelsEnergies; //
         vector< Int_t > thisChannelsPulseHeights; //
         vector< Double_t > thisChannelsSoftwareCFDs; //
         vector< Double_t > thisChannelsCubicCFDs; //
         vector< Int_t > thisChannelsPeakSpots; //
         vector< Double_t > thisChannelsUnderShoots; //
         vector< Double_t > thisEventsFF; //
         vector< Double_t > thisEventsCFD; //
         map< Int_t, ::string > GlobalIDToFullLocal; //
         map< ::string, Int_t > FullLocalToGlobalID; //
         map< Int_t, ::string > GlobalIDToBar; //
         map< ::string, Int_t > BarNameToUniqueBarNumber; //
         map< ::string, Double_t > BarNameToBarAngle; //
         map< Int_t, mapInfo > GlobalIDToMapInfo; //
         int thisEventsFilterHeight; //
         double longGate; //
         double shortGate; //
         double cubicFitCFD; //
         double start; //
         double thisChannelsCFDResidual; //
         string referenceChannelPattern; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ddasChannel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ddasChannel(void *p = 0);
   static void *newArray_ddasChannel(Long_t size, void *p);
   static void delete_ddasChannel(void *p);
   static void deleteArray_ddasChannel(void *p);
   static void destruct_ddasChannel(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ddasChannel*)
   {
      ::ddasChannel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ddasChannel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ddasChannel", ::ddasChannel::Class_Version(), "./src/ddasChannel.h", 45,
                  typeid(::ddasChannel), DefineBehavior(ptr, ptr),
                  &::ddasChannel::Dictionary, isa_proxy, 4,
                  sizeof(::ddasChannel) );
      instance.SetNew(&new_ddasChannel);
      instance.SetNewArray(&newArray_ddasChannel);
      instance.SetDelete(&delete_ddasChannel);
      instance.SetDeleteArray(&deleteArray_ddasChannel);
      instance.SetDestructor(&destruct_ddasChannel);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ddasChannel*)
   {
      return GenerateInitInstanceLocal((::ddasChannel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ddasChannel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ddasEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ddasEvent(void *p = 0);
   static void *newArray_ddasEvent(Long_t size, void *p);
   static void delete_ddasEvent(void *p);
   static void deleteArray_ddasEvent(void *p);
   static void destruct_ddasEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ddasEvent*)
   {
      ::ddasEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ddasEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ddasEvent", ::ddasEvent::Class_Version(), "./src/LENDA-DDAS.h", 23,
                  typeid(::ddasEvent), DefineBehavior(ptr, ptr),
                  &::ddasEvent::Dictionary, isa_proxy, 4,
                  sizeof(::ddasEvent) );
      instance.SetNew(&new_ddasEvent);
      instance.SetNewArray(&newArray_ddasEvent);
      instance.SetDelete(&delete_ddasEvent);
      instance.SetDeleteArray(&deleteArray_ddasEvent);
      instance.SetDestructor(&destruct_ddasEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ddasEvent*)
   {
      return GenerateInitInstanceLocal((::ddasEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ddasEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void lendaChannel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_lendaChannel(void *p = 0);
   static void *newArray_lendaChannel(Long_t size, void *p);
   static void delete_lendaChannel(void *p);
   static void deleteArray_lendaChannel(void *p);
   static void destruct_lendaChannel(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lendaChannel*)
   {
      ::lendaChannel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::lendaChannel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("lendaChannel", ::lendaChannel::Class_Version(), "./src/LENDA-DDAS.h", 55,
                  typeid(::lendaChannel), DefineBehavior(ptr, ptr),
                  &::lendaChannel::Dictionary, isa_proxy, 4,
                  sizeof(::lendaChannel) );
      instance.SetNew(&new_lendaChannel);
      instance.SetNewArray(&newArray_lendaChannel);
      instance.SetDelete(&delete_lendaChannel);
      instance.SetDeleteArray(&deleteArray_lendaChannel);
      instance.SetDestructor(&destruct_lendaChannel);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lendaChannel*)
   {
      return GenerateInitInstanceLocal((::lendaChannel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lendaChannel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void lendaBar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_lendaBar(void *p = 0);
   static void *newArray_lendaBar(Long_t size, void *p);
   static void delete_lendaBar(void *p);
   static void deleteArray_lendaBar(void *p);
   static void destruct_lendaBar(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lendaBar*)
   {
      ::lendaBar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::lendaBar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("lendaBar", ::lendaBar::Class_Version(), "./src/LENDA-DDAS.h", 263,
                  typeid(::lendaBar), DefineBehavior(ptr, ptr),
                  &::lendaBar::Dictionary, isa_proxy, 4,
                  sizeof(::lendaBar) );
      instance.SetNew(&new_lendaBar);
      instance.SetNewArray(&newArray_lendaBar);
      instance.SetDelete(&delete_lendaBar);
      instance.SetDeleteArray(&deleteArray_lendaBar);
      instance.SetDestructor(&destruct_lendaBar);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lendaBar*)
   {
      return GenerateInitInstanceLocal((::lendaBar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lendaBar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void lendaEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_lendaEvent(void *p = 0);
   static void *newArray_lendaEvent(Long_t size, void *p);
   static void delete_lendaEvent(void *p);
   static void deleteArray_lendaEvent(void *p);
   static void destruct_lendaEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lendaEvent*)
   {
      ::lendaEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::lendaEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("lendaEvent", ::lendaEvent::Class_Version(), "./src/LENDA-DDAS.h", 371,
                  typeid(::lendaEvent), DefineBehavior(ptr, ptr),
                  &::lendaEvent::Dictionary, isa_proxy, 4,
                  sizeof(::lendaEvent) );
      instance.SetNew(&new_lendaEvent);
      instance.SetNewArray(&newArray_lendaEvent);
      instance.SetDelete(&delete_lendaEvent);
      instance.SetDeleteArray(&deleteArray_lendaEvent);
      instance.SetDestructor(&destruct_lendaEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lendaEvent*)
   {
      return GenerateInitInstanceLocal((::lendaEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lendaEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void lendaFilter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_lendaFilter(void *p = 0);
   static void *newArray_lendaFilter(Long_t size, void *p);
   static void delete_lendaFilter(void *p);
   static void deleteArray_lendaFilter(void *p);
   static void destruct_lendaFilter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lendaFilter*)
   {
      ::lendaFilter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::lendaFilter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("lendaFilter", ::lendaFilter::Class_Version(), "./src/LENDA-DDAS.h", 419,
                  typeid(::lendaFilter), DefineBehavior(ptr, ptr),
                  &::lendaFilter::Dictionary, isa_proxy, 4,
                  sizeof(::lendaFilter) );
      instance.SetNew(&new_lendaFilter);
      instance.SetNewArray(&newArray_lendaFilter);
      instance.SetDelete(&delete_lendaFilter);
      instance.SetDeleteArray(&deleteArray_lendaFilter);
      instance.SetDestructor(&destruct_lendaFilter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lendaFilter*)
   {
      return GenerateInitInstanceLocal((::lendaFilter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lendaFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void lendaSettings_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_lendaSettings(void *p = 0);
   static void *newArray_lendaSettings(Long_t size, void *p);
   static void delete_lendaSettings(void *p);
   static void deleteArray_lendaSettings(void *p);
   static void destruct_lendaSettings(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lendaSettings*)
   {
      ::lendaSettings *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::lendaSettings >(0);
      static ::ROOT::TGenericClassInfo 
         instance("lendaSettings", ::lendaSettings::Class_Version(), "./src/LENDA-Controls.h", 25,
                  typeid(::lendaSettings), DefineBehavior(ptr, ptr),
                  &::lendaSettings::Dictionary, isa_proxy, 4,
                  sizeof(::lendaSettings) );
      instance.SetNew(&new_lendaSettings);
      instance.SetNewArray(&newArray_lendaSettings);
      instance.SetDelete(&delete_lendaSettings);
      instance.SetDeleteArray(&deleteArray_lendaSettings);
      instance.SetDestructor(&destruct_lendaSettings);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lendaSettings*)
   {
      return GenerateInitInstanceLocal((::lendaSettings*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lendaSettings*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void mapInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void mapInfo_Dictionary();
   static void *new_mapInfo(void *p = 0);
   static void *newArray_mapInfo(Long_t size, void *p);
   static void delete_mapInfo(void *p);
   static void deleteArray_mapInfo(void *p);
   static void destruct_mapInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::mapInfo*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::mapInfo) == sizeof(::ROOT::Shadow::mapInfo));
      ::mapInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::mapInfo),0);
      static ::ROOT::TGenericClassInfo 
         instance("mapInfo", "./src/LENDA-Controls.h", 79,
                  typeid(::mapInfo), DefineBehavior(ptr, ptr),
                  &mapInfo_ShowMembers, &mapInfo_Dictionary, isa_proxy, 4,
                  sizeof(::mapInfo) );
      instance.SetNew(&new_mapInfo);
      instance.SetNewArray(&newArray_mapInfo);
      instance.SetDelete(&delete_mapInfo);
      instance.SetDeleteArray(&deleteArray_mapInfo);
      instance.SetDestructor(&destruct_mapInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::mapInfo*)
   {
      return GenerateInitInstanceLocal((::mapInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::mapInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void mapInfo_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::mapInfo*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void lendaPacker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void lendaPacker_Dictionary();
   static void *new_lendaPacker(void *p = 0);
   static void *newArray_lendaPacker(Long_t size, void *p);
   static void delete_lendaPacker(void *p);
   static void deleteArray_lendaPacker(void *p);
   static void destruct_lendaPacker(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::lendaPacker*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::lendaPacker) == sizeof(::ROOT::Shadow::lendaPacker));
      ::lendaPacker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::lendaPacker),0);
      static ::ROOT::TGenericClassInfo 
         instance("lendaPacker", "./src/LENDA-Controls.h", 169,
                  typeid(::lendaPacker), DefineBehavior(ptr, ptr),
                  &lendaPacker_ShowMembers, &lendaPacker_Dictionary, isa_proxy, 4,
                  sizeof(::lendaPacker) );
      instance.SetNew(&new_lendaPacker);
      instance.SetNewArray(&newArray_lendaPacker);
      instance.SetDelete(&delete_lendaPacker);
      instance.SetDeleteArray(&deleteArray_lendaPacker);
      instance.SetDestructor(&destruct_lendaPacker);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::lendaPacker*)
   {
      return GenerateInitInstanceLocal((::lendaPacker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::lendaPacker*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void lendaPacker_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::lendaPacker*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
TClass *ddasChannel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ddasChannel::Class_Name()
{
   return "ddasChannel";
}

//______________________________________________________________________________
const char *ddasChannel::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ddasChannel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ddasChannel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ddasChannel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ddasChannel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ddasChannel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ddasChannel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ddasChannel*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ddasEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ddasEvent::Class_Name()
{
   return "ddasEvent";
}

//______________________________________________________________________________
const char *ddasEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ddasEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ddasEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ddasEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ddasEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ddasEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ddasEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ddasEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *lendaChannel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *lendaChannel::Class_Name()
{
   return "lendaChannel";
}

//______________________________________________________________________________
const char *lendaChannel::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::lendaChannel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int lendaChannel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::lendaChannel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void lendaChannel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::lendaChannel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *lendaChannel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::lendaChannel*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *lendaBar::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *lendaBar::Class_Name()
{
   return "lendaBar";
}

//______________________________________________________________________________
const char *lendaBar::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::lendaBar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int lendaBar::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::lendaBar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void lendaBar::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::lendaBar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *lendaBar::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::lendaBar*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *lendaEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *lendaEvent::Class_Name()
{
   return "lendaEvent";
}

//______________________________________________________________________________
const char *lendaEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::lendaEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int lendaEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::lendaEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void lendaEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::lendaEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *lendaEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::lendaEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *lendaFilter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *lendaFilter::Class_Name()
{
   return "lendaFilter";
}

//______________________________________________________________________________
const char *lendaFilter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::lendaFilter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int lendaFilter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::lendaFilter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void lendaFilter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::lendaFilter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *lendaFilter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::lendaFilter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *lendaSettings::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *lendaSettings::Class_Name()
{
   return "lendaSettings";
}

//______________________________________________________________________________
const char *lendaSettings::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::lendaSettings*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int lendaSettings::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::lendaSettings*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void lendaSettings::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::lendaSettings*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *lendaSettings::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::lendaSettings*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void ddasChannel::Streamer(TBuffer &R__b)
{
   // Stream an object of class ddasChannel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ddasChannel::Class(),this);
   } else {
      R__b.WriteClassBuffer(ddasChannel::Class(),this);
   }
}

//______________________________________________________________________________
void ddasChannel::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ddasChannel.
      TClass *R__cl = ::ddasChannel::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cfd", &cfd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timehigh", &timehigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timelow", &timelow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timecfd", &timecfd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channelnum", &channelnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "finishcode", &finishcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channellength", &channellength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channelheaderlength", &channelheaderlength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "overflowcode", &overflowcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chanid", &chanid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "slotid", &slotid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crateid", &crateid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cfdtrigsourcebit", &cfdtrigsourcebit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tracelength", &tracelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eclocklow", &eclocklow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eclockhigh", &eclockhigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eclockhigher", &eclockhigher);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eclock", &eclock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energySums", (void*)&energySums);
      R__insp.InspectMember("vector<UInt_t>", (void*)&energySums, "energySums.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qdcSums", (void*)&qdcSums);
      R__insp.InspectMember("vector<UShort_t>", (void*)&qdcSums, "qdcSums.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trace", (void*)&trace);
      R__insp.InspectMember("vector<UShort_t>", (void*)&trace, "trace.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ddasChannel(void *p) {
      return  p ? new(p) ::ddasChannel : new ::ddasChannel;
   }
   static void *newArray_ddasChannel(Long_t nElements, void *p) {
      return p ? new(p) ::ddasChannel[nElements] : new ::ddasChannel[nElements];
   }
   // Wrapper around operator delete
   static void delete_ddasChannel(void *p) {
      delete ((::ddasChannel*)p);
   }
   static void deleteArray_ddasChannel(void *p) {
      delete [] ((::ddasChannel*)p);
   }
   static void destruct_ddasChannel(void *p) {
      typedef ::ddasChannel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ddasChannel

//______________________________________________________________________________
void ddasEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class ddasEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ddasEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(ddasEvent::Class(),this);
   }
}

//______________________________________________________________________________
void ddasEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ddasEvent.
      TClass *R__cl = ::ddasEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cdata", (void*)&cdata);
      R__insp.InspectMember("vector<ddasChannel*>", (void*)&cdata, "cdata.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tempdchan", &tempdchan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "buffer08[4096]", buffer08);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "buffer32[4096]", buffer32);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ddasEvent(void *p) {
      return  p ? new(p) ::ddasEvent : new ::ddasEvent;
   }
   static void *newArray_ddasEvent(Long_t nElements, void *p) {
      return p ? new(p) ::ddasEvent[nElements] : new ::ddasEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_ddasEvent(void *p) {
      delete ((::ddasEvent*)p);
   }
   static void deleteArray_ddasEvent(void *p) {
      delete [] ((::ddasEvent*)p);
   }
   static void destruct_ddasEvent(void *p) {
      typedef ::ddasEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ddasEvent

//______________________________________________________________________________
void lendaChannel::Streamer(TBuffer &R__b)
{
   // Stream an object of class lendaChannel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(lendaChannel::Class(),this);
   } else {
      R__b.WriteClassBuffer(lendaChannel::Class(),this);
   }
}

//______________________________________________________________________________
void lendaChannel::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class lendaChannel.
      TClass *R__cl = ::lendaChannel::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rChannel", &rChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rSlot", &rSlot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rGlobalID", &rGlobalID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rRefGlobalID", &rRefGlobalID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rOverflow", &rOverflow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rNumZeroCrossings", &rNumZeroCrossings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCorrectedEnergy", &rCorrectedEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rInternalEnergy", &rInternalEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rFilterHeight", &rFilterHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rTime", &rTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCubicFitTime", &rCubicFitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCorrectedTime", &rCorrectedTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCorrectedCubicFitTime", &rCorrectedCubicFitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCorrectedSoftTime", &rCorrectedSoftTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCorrectedCubicTime", &rCorrectedCubicTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rTimeLow", &rTimeLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rTimeHigh", &rTimeHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rEclockLow", &rEclockLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rEclockHigh", &rEclockHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rEclockHigher", &rEclockHigher);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rEclock", &rEclock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCoarseTime", &rCoarseTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rSoftwareCFD", &rSoftwareCFD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCubicCFD", &rCubicCFD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCubicFitCFD", &rCubicFitCFD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rInternalCFD", &rInternalCFD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCFDTrigBit", &rCFDTrigBit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rShortGate", &rShortGate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rLongGate", &rLongGate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rJentry", &rJentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rTrace", (void*)&rTrace);
      R__insp.InspectMember("vector<UShort_t>", (void*)&rTrace, "rTrace.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rFilter", (void*)&rFilter);
      R__insp.InspectMember("vector<Double_t>", (void*)&rFilter, "rFilter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCFD", (void*)&rCFD);
      R__insp.InspectMember("vector<Double_t>", (void*)&rCFD, "rCFD.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCFDResidual", &rCFDResidual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rChannelName", (void*)&rChannelName);
      R__insp.InspectMember("string", (void*)&rChannelName, "rChannelName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rReferenceChannelName", (void*)&rReferenceChannelName);
      R__insp.InspectMember("string", (void*)&rReferenceChannelName, "rReferenceChannelName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rRefTime", &rRefTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rOtherTime", &rOtherTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rEnergies", (void*)&rEnergies);
      R__insp.InspectMember("vector<Double_t>", (void*)&rEnergies, "rEnergies.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rSoftwareTimes", (void*)&rSoftwareTimes);
      R__insp.InspectMember("vector<Double_t>", (void*)&rSoftwareTimes, "rSoftwareTimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCubicTimes", (void*)&rCubicTimes);
      R__insp.InspectMember("vector<Double_t>", (void*)&rCubicTimes, "rCubicTimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rPulseHeights", (void*)&rPulseHeights);
      R__insp.InspectMember("vector<Int_t>", (void*)&rPulseHeights, "rPulseHeights.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rSoftwareReferenceTimes", (void*)&rSoftwareReferenceTimes);
      R__insp.InspectMember("vector<Double_t>", (void*)&rSoftwareReferenceTimes, "rSoftwareReferenceTimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rCubicReferenceTimes", (void*)&rCubicReferenceTimes);
      R__insp.InspectMember("vector<Double_t>", (void*)&rCubicReferenceTimes, "rCubicReferenceTimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rUnderShoots", (void*)&rUnderShoots);
      R__insp.InspectMember("vector<Double_t>", (void*)&rUnderShoots, "rUnderShoots.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_lendaChannel(void *p) {
      return  p ? new(p) ::lendaChannel : new ::lendaChannel;
   }
   static void *newArray_lendaChannel(Long_t nElements, void *p) {
      return p ? new(p) ::lendaChannel[nElements] : new ::lendaChannel[nElements];
   }
   // Wrapper around operator delete
   static void delete_lendaChannel(void *p) {
      delete ((::lendaChannel*)p);
   }
   static void deleteArray_lendaChannel(void *p) {
      delete [] ((::lendaChannel*)p);
   }
   static void destruct_lendaChannel(void *p) {
      typedef ::lendaChannel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lendaChannel

//______________________________________________________________________________
void lendaBar::Streamer(TBuffer &R__b)
{
   // Stream an object of class lendaBar.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(lendaBar::Class(),this);
   } else {
      R__b.WriteClassBuffer(lendaBar::Class(),this);
   }
}

//______________________________________________________________________________
void lendaBar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class lendaBar.
      TClass *R__cl = ::lendaBar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Name", (void*)&Name);
      R__insp.InspectMember("string", (void*)&Name, "Name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BarId", &BarId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BarAngle", &BarAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumTops", &NumTops);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumBottoms", &NumBottoms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BarMultiplicity", &BarMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SimpleEventBit", &SimpleEventBit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tops", (void*)&Tops);
      R__insp.InspectMember("vector<lendaChannel>", (void*)&Tops, "Tops.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Bottoms", (void*)&Bottoms);
      R__insp.InspectMember("vector<lendaChannel>", (void*)&Bottoms, "Bottoms.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Dt", &Dt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CubicDt", &CubicDt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SyncDt", &SyncDt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CubicSyncDt", &CubicSyncDt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "COG", &COG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AvgEnergy", &AvgEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AvgPulseHeight", &AvgPulseHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AvgT", &AvgT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CorrectedAvgT", &CorrectedAvgT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CorrectedCOG", &CorrectedCOG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CorrectedDt", &CorrectedDt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CorrectedAvgEnergy", &CorrectedAvgEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TopTOF", &TopTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BottomTOF", &BottomTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CubicTopTOF", &CubicTopTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CubicBottomTOF", &CubicBottomTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CorrectedCubicTopTOF", &CorrectedCubicTopTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CorrectedCubicBottomTOF", &CorrectedCubicBottomTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CorrectedCubicFitTopTOF", &CorrectedCubicFitTopTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CorrectedCubicFitBottomTOF", &CorrectedCubicFitBottomTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CorrectedSoftTopTOF", &CorrectedSoftTopTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CorrectedSoftBottomTOF", &CorrectedSoftBottomTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CorrectedTopTOF", &CorrectedTopTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CorrectedBottomTOF", &CorrectedBottomTOF);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_lendaBar(void *p) {
      return  p ? new(p) ::lendaBar : new ::lendaBar;
   }
   static void *newArray_lendaBar(Long_t nElements, void *p) {
      return p ? new(p) ::lendaBar[nElements] : new ::lendaBar[nElements];
   }
   // Wrapper around operator delete
   static void delete_lendaBar(void *p) {
      delete ((::lendaBar*)p);
   }
   static void deleteArray_lendaBar(void *p) {
      delete [] ((::lendaBar*)p);
   }
   static void destruct_lendaBar(void *p) {
      typedef ::lendaBar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lendaBar

//______________________________________________________________________________
void lendaEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class lendaEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(lendaEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(lendaEvent::Class(),this);
   }
}

//______________________________________________________________________________
void lendaEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class lendaEvent.
      TClass *R__cl = ::lendaEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bars", (void*)&bars);
      R__insp.InspectMember("vector<lendaBar>", (void*)&bars, "bars.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UnMappedChannels", (void*)&UnMappedChannels);
      R__insp.InspectMember("vector<lendaChannel>", (void*)&UnMappedChannels, "UnMappedChannels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refScint", (void*)&refScint);
      R__insp.InspectMember("vector<lendaChannel>", (void*)&refScint, "refScint.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumOfChannelsInEvent", &NumOfChannelsInEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N", &N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numBars", &numBars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumUnMappedChannels", &NumUnMappedChannels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numObjectScintillators", &numObjectScintillators);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ScintIntLow", &ScintIntLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ScintIntHigh", &ScintIntHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ScintIntAll", &ScintIntAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etime", &etime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "internaltime", &internaltime);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_lendaEvent(void *p) {
      return  p ? new(p) ::lendaEvent : new ::lendaEvent;
   }
   static void *newArray_lendaEvent(Long_t nElements, void *p) {
      return p ? new(p) ::lendaEvent[nElements] : new ::lendaEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_lendaEvent(void *p) {
      delete ((::lendaEvent*)p);
   }
   static void deleteArray_lendaEvent(void *p) {
      delete [] ((::lendaEvent*)p);
   }
   static void destruct_lendaEvent(void *p) {
      typedef ::lendaEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lendaEvent

//______________________________________________________________________________
void lendaFilter::Streamer(TBuffer &R__b)
{
   // Stream an object of class lendaFilter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(lendaFilter::Class(),this);
   } else {
      R__b.WriteClassBuffer(lendaFilter::Class(),this);
   }
}

//______________________________________________________________________________
void lendaFilter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class lendaFilter.
      TClass *R__cl = ::lendaFilter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numOfBadFits", &numOfBadFits);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_lendaFilter(void *p) {
      return  p ? new(p) ::lendaFilter : new ::lendaFilter;
   }
   static void *newArray_lendaFilter(Long_t nElements, void *p) {
      return p ? new(p) ::lendaFilter[nElements] : new ::lendaFilter[nElements];
   }
   // Wrapper around operator delete
   static void delete_lendaFilter(void *p) {
      delete ((::lendaFilter*)p);
   }
   static void deleteArray_lendaFilter(void *p) {
      delete [] ((::lendaFilter*)p);
   }
   static void destruct_lendaFilter(void *p) {
      typedef ::lendaFilter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lendaFilter

//______________________________________________________________________________
namespace ROOT {
   void mapInfo_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class mapInfo.
      typedef ::ROOT::Shadow::mapInfo ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::mapInfo*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnergySlope", &sobj->EnergySlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnergyIntercept", &sobj->EnergyIntercept);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOFOffset", &sobj->TOFOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FullName", (void*)&sobj->FullName);
      R__insp.InspectMember("string", (void*)&sobj->FullName, "FullName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BarName", (void*)&sobj->BarName);
      R__insp.InspectMember("string", (void*)&sobj->BarName, "BarName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ReferenceName", (void*)&sobj->ReferenceName);
      R__insp.InspectMember("string", (void*)&sobj->ReferenceName, "ReferenceName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BarAngle", &sobj->BarAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HasCorrections", &sobj->HasCorrections);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsAReferenceChannel", &sobj->IsAReferenceChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GlobalID", &sobj->GlobalID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ReferenceGlobalID", &sobj->ReferenceGlobalID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FL", &sobj->FL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FG", &sobj->FG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "d", &sobj->d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "w", &sobj->w);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DontTraceAnalyze", &sobj->DontTraceAnalyze);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_mapInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::mapInfo : new ::mapInfo;
   }
   static void *newArray_mapInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::mapInfo[nElements] : new ::mapInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_mapInfo(void *p) {
      delete ((::mapInfo*)p);
   }
   static void deleteArray_mapInfo(void *p) {
      delete [] ((::mapInfo*)p);
   }
   static void destruct_mapInfo(void *p) {
      typedef ::mapInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::mapInfo

//______________________________________________________________________________
namespace ROOT {
   void lendaPacker_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class lendaPacker.
      typedef ::ROOT::Shadow::lendaPacker ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::lendaPacker*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*theSettings", &sobj->theSettings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theFilter", &sobj->theFilter);
      R__insp.InspectMember(sobj->theFilter, "theFilter.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "already_called", &sobj->already_called);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mapFileName", (void*)&sobj->mapFileName);
      R__insp.InspectMember("string", (void*)&sobj->mapFileName, "mapFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "correctionsFileName", (void*)&sobj->correctionsFileName);
      R__insp.InspectMember("string", (void*)&sobj->correctionsFileName, "correctionsFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "saveTraces", &sobj->saveTraces);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lg", &sobj->lg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sg", &sobj->sg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lg2", &sobj->lg2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sg2", &sobj->sg2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "traceDelay", &sobj->traceDelay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jentry", &sobj->jentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thisChannelsNumZeroCrossings", &sobj->thisChannelsNumZeroCrossings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thisChannelsEnergies", (void*)&sobj->thisChannelsEnergies);
      R__insp.InspectMember("vector<Double_t>", (void*)&sobj->thisChannelsEnergies, "thisChannelsEnergies.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thisChannelsPulseHeights", (void*)&sobj->thisChannelsPulseHeights);
      R__insp.InspectMember("vector<Int_t>", (void*)&sobj->thisChannelsPulseHeights, "thisChannelsPulseHeights.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thisChannelsSoftwareCFDs", (void*)&sobj->thisChannelsSoftwareCFDs);
      R__insp.InspectMember("vector<Double_t>", (void*)&sobj->thisChannelsSoftwareCFDs, "thisChannelsSoftwareCFDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thisChannelsCubicCFDs", (void*)&sobj->thisChannelsCubicCFDs);
      R__insp.InspectMember("vector<Double_t>", (void*)&sobj->thisChannelsCubicCFDs, "thisChannelsCubicCFDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thisChannelsPeakSpots", (void*)&sobj->thisChannelsPeakSpots);
      R__insp.InspectMember("vector<Int_t>", (void*)&sobj->thisChannelsPeakSpots, "thisChannelsPeakSpots.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thisChannelsUnderShoots", (void*)&sobj->thisChannelsUnderShoots);
      R__insp.InspectMember("vector<Double_t>", (void*)&sobj->thisChannelsUnderShoots, "thisChannelsUnderShoots.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thisEventsFF", (void*)&sobj->thisEventsFF);
      R__insp.InspectMember("vector<Double_t>", (void*)&sobj->thisEventsFF, "thisEventsFF.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thisEventsCFD", (void*)&sobj->thisEventsCFD);
      R__insp.InspectMember("vector<Double_t>", (void*)&sobj->thisEventsCFD, "thisEventsCFD.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GlobalIDToFullLocal", (void*)&sobj->GlobalIDToFullLocal);
      R__insp.InspectMember("map<Int_t,string>", (void*)&sobj->GlobalIDToFullLocal, "GlobalIDToFullLocal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FullLocalToGlobalID", (void*)&sobj->FullLocalToGlobalID);
      R__insp.InspectMember("map<string,Int_t>", (void*)&sobj->FullLocalToGlobalID, "FullLocalToGlobalID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GlobalIDToBar", (void*)&sobj->GlobalIDToBar);
      R__insp.InspectMember("map<Int_t,string>", (void*)&sobj->GlobalIDToBar, "GlobalIDToBar.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BarNameToUniqueBarNumber", (void*)&sobj->BarNameToUniqueBarNumber);
      R__insp.InspectMember("map<string,Int_t>", (void*)&sobj->BarNameToUniqueBarNumber, "BarNameToUniqueBarNumber.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BarNameToBarAngle", (void*)&sobj->BarNameToBarAngle);
      R__insp.InspectMember("map<string,Double_t>", (void*)&sobj->BarNameToBarAngle, "BarNameToBarAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GlobalIDToMapInfo", (void*)&sobj->GlobalIDToMapInfo);
      R__insp.InspectMember("map<Int_t,mapInfo>", (void*)&sobj->GlobalIDToMapInfo, "GlobalIDToMapInfo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thisEventsFilterHeight", &sobj->thisEventsFilterHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "longGate", &sobj->longGate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "shortGate", &sobj->shortGate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cubicFitCFD", &sobj->cubicFitCFD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "start", &sobj->start);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thisChannelsCFDResidual", &sobj->thisChannelsCFDResidual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "referenceChannelPattern", (void*)&sobj->referenceChannelPattern);
      R__insp.InspectMember("string", (void*)&sobj->referenceChannelPattern, "referenceChannelPattern.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_lendaPacker(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::lendaPacker : new ::lendaPacker;
   }
   static void *newArray_lendaPacker(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::lendaPacker[nElements] : new ::lendaPacker[nElements];
   }
   // Wrapper around operator delete
   static void delete_lendaPacker(void *p) {
      delete ((::lendaPacker*)p);
   }
   static void deleteArray_lendaPacker(void *p) {
      delete [] ((::lendaPacker*)p);
   }
   static void destruct_lendaPacker(void *p) {
      typedef ::lendaPacker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lendaPacker

//______________________________________________________________________________
void lendaSettings::Streamer(TBuffer &R__b)
{
   // Stream an object of class lendaSettings.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(lendaSettings::Class(),this);
   } else {
      R__b.WriteClassBuffer(lendaSettings::Class(),this);
   }
}

//______________________________________________________________________________
void lendaSettings::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class lendaSettings.
      TClass *R__cl = ::lendaSettings::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TheTimingOffsets", (void*)&TheTimingOffsets);
      R__insp.InspectMember("map<string,Double_t>", (void*)&TheTimingOffsets, "TheTimingOffsets.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TheEnergySlopes", (void*)&TheEnergySlopes);
      R__insp.InspectMember("map<string,Double_t>", (void*)&TheEnergySlopes, "TheEnergySlopes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TheEnergyIntercepts", (void*)&TheEnergyIntercepts);
      R__insp.InspectMember("map<string,Double_t>", (void*)&TheEnergyIntercepts, "TheEnergyIntercepts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TheFLs", (void*)&TheFLs);
      R__insp.InspectMember("map<string,Int_t>", (void*)&TheFLs, "TheFLs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TheFGs", (void*)&TheFGs);
      R__insp.InspectMember("map<string,Int_t>", (void*)&TheFGs, "TheFGs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Theds", (void*)&Theds);
      R__insp.InspectMember("map<string,Int_t>", (void*)&Theds, "Theds.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Thews", (void*)&Thews);
      R__insp.InspectMember("map<string,Int_t>", (void*)&Thews, "Thews.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TheDontTraceAnalyzeFlags", (void*)&TheDontTraceAnalyzeFlags);
      R__insp.InspectMember("map<string,bool>", (void*)&TheDontTraceAnalyzeFlags, "TheDontTraceAnalyzeFlags.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GlobalID2FullName", (void*)&GlobalID2FullName);
      R__insp.InspectMember("map<Int_t,string>", (void*)&GlobalID2FullName, "GlobalID2FullName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GlobalID2RefGlobalID", (void*)&GlobalID2RefGlobalID);
      R__insp.InspectMember("map<Int_t,Int_t>", (void*)&GlobalID2RefGlobalID, "GlobalID2RefGlobalID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GlobalID2RefName", (void*)&GlobalID2RefName);
      R__insp.InspectMember("map<Int_t,string>", (void*)&GlobalID2RefName, "GlobalID2RefName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Name2GlobalID", (void*)&Name2GlobalID);
      R__insp.InspectMember("map<string,Int_t>", (void*)&Name2GlobalID, "Name2GlobalID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BarIds", (void*)&BarIds);
      R__insp.InspectMember("map<string,Int_t>", (void*)&BarIds, "BarIds.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BarId2Name", (void*)&BarId2Name);
      R__insp.InspectMember("map<Int_t,string>", (void*)&BarId2Name, "BarId2Name.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_lendaSettings(void *p) {
      return  p ? new(p) ::lendaSettings : new ::lendaSettings;
   }
   static void *newArray_lendaSettings(Long_t nElements, void *p) {
      return p ? new(p) ::lendaSettings[nElements] : new ::lendaSettings[nElements];
   }
   // Wrapper around operator delete
   static void delete_lendaSettings(void *p) {
      delete ((::lendaSettings*)p);
   }
   static void deleteArray_lendaSettings(void *p) {
      delete [] ((::lendaSettings*)p);
   }
   static void destruct_lendaSettings(void *p) {
      typedef ::lendaSettings current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::lendaSettings

namespace ROOT {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,int>

namespace ROOT {
   void maplEintcOmapInfogR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOmapInfogR_Dictionary();
   static void *new_maplEintcOmapInfogR(void *p = 0);
   static void *newArray_maplEintcOmapInfogR(Long_t size, void *p);
   static void delete_maplEintcOmapInfogR(void *p);
   static void deleteArray_maplEintcOmapInfogR(void *p);
   static void destruct_maplEintcOmapInfogR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,mapInfo>*)
   {
      map<int,mapInfo> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,mapInfo>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,mapInfo>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<int,mapInfo>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOmapInfogR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,mapInfo>) );
      instance.SetNew(&new_maplEintcOmapInfogR);
      instance.SetNewArray(&newArray_maplEintcOmapInfogR);
      instance.SetDelete(&delete_maplEintcOmapInfogR);
      instance.SetDeleteArray(&deleteArray_maplEintcOmapInfogR);
      instance.SetDestructor(&destruct_maplEintcOmapInfogR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,mapInfo> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,mapInfo>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOmapInfogR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,mapInfo>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOmapInfogR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,mapInfo> : new map<int,mapInfo>;
   }
   static void *newArray_maplEintcOmapInfogR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,mapInfo>[nElements] : new map<int,mapInfo>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOmapInfogR(void *p) {
      delete ((map<int,mapInfo>*)p);
   }
   static void deleteArray_maplEintcOmapInfogR(void *p) {
      delete [] ((map<int,mapInfo>*)p);
   }
   static void destruct_maplEintcOmapInfogR(void *p) {
      typedef map<int,mapInfo> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,mapInfo>

namespace ROOT {
   void maplEintcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOstringgR_Dictionary();
   static void *new_maplEintcOstringgR(void *p = 0);
   static void *newArray_maplEintcOstringgR(Long_t size, void *p);
   static void delete_maplEintcOstringgR(void *p);
   static void deleteArray_maplEintcOstringgR(void *p);
   static void destruct_maplEintcOstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,string>*)
   {
      map<int,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,string>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<int,string>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOstringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,string>) );
      instance.SetNew(&new_maplEintcOstringgR);
      instance.SetNewArray(&newArray_maplEintcOstringgR);
      instance.SetDelete(&delete_maplEintcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOstringgR);
      instance.SetDestructor(&destruct_maplEintcOstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,string> : new map<int,string>;
   }
   static void *newArray_maplEintcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,string>[nElements] : new map<int,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOstringgR(void *p) {
      delete ((map<int,string>*)p);
   }
   static void deleteArray_maplEintcOstringgR(void *p) {
      delete [] ((map<int,string>*)p);
   }
   static void destruct_maplEintcOstringgR(void *p) {
      typedef map<int,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,string>

namespace ROOT {
   void maplEstringcOboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOboolgR_Dictionary();
   static void *new_maplEstringcOboolgR(void *p = 0);
   static void *newArray_maplEstringcOboolgR(Long_t size, void *p);
   static void delete_maplEstringcOboolgR(void *p);
   static void deleteArray_maplEstringcOboolgR(void *p);
   static void destruct_maplEstringcOboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,bool>*)
   {
      map<string,bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,bool>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<string,bool>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOboolgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,bool>) );
      instance.SetNew(&new_maplEstringcOboolgR);
      instance.SetNewArray(&newArray_maplEstringcOboolgR);
      instance.SetDelete(&delete_maplEstringcOboolgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOboolgR);
      instance.SetDestructor(&destruct_maplEstringcOboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,bool> : new map<string,bool>;
   }
   static void *newArray_maplEstringcOboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,bool>[nElements] : new map<string,bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOboolgR(void *p) {
      delete ((map<string,bool>*)p);
   }
   static void deleteArray_maplEstringcOboolgR(void *p) {
      delete [] ((map<string,bool>*)p);
   }
   static void destruct_maplEstringcOboolgR(void *p) {
      typedef map<string,bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,bool>

namespace ROOT {
   void maplEstringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOdoublegR_Dictionary();
   static void *new_maplEstringcOdoublegR(void *p = 0);
   static void *newArray_maplEstringcOdoublegR(Long_t size, void *p);
   static void delete_maplEstringcOdoublegR(void *p);
   static void deleteArray_maplEstringcOdoublegR(void *p);
   static void destruct_maplEstringcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,double>*)
   {
      map<string,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,double>", -2, "map.dll", 0,
                  typeid(map<string,double>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,double>) );
      instance.SetNew(&new_maplEstringcOdoublegR);
      instance.SetNewArray(&newArray_maplEstringcOdoublegR);
      instance.SetDelete(&delete_maplEstringcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOdoublegR);
      instance.SetDestructor(&destruct_maplEstringcOdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double> : new map<string,double>;
   }
   static void *newArray_maplEstringcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double>[nElements] : new map<string,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOdoublegR(void *p) {
      delete ((map<string,double>*)p);
   }
   static void deleteArray_maplEstringcOdoublegR(void *p) {
      delete [] ((map<string,double>*)p);
   }
   static void destruct_maplEstringcOdoublegR(void *p) {
      typedef map<string,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,double>

namespace ROOT {
   void maplEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOintgR_Dictionary();
   static void *new_maplEstringcOintgR(void *p = 0);
   static void *newArray_maplEstringcOintgR(Long_t size, void *p);
   static void delete_maplEstringcOintgR(void *p);
   static void deleteArray_maplEstringcOintgR(void *p);
   static void destruct_maplEstringcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,int>*)
   {
      map<string,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,int>", -2, "map.dll", 0,
                  typeid(map<string,int>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,int>) );
      instance.SetNew(&new_maplEstringcOintgR);
      instance.SetNewArray(&newArray_maplEstringcOintgR);
      instance.SetDelete(&delete_maplEstringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOintgR);
      instance.SetDestructor(&destruct_maplEstringcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int> : new map<string,int>;
   }
   static void *newArray_maplEstringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int>[nElements] : new map<string,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOintgR(void *p) {
      delete ((map<string,int>*)p);
   }
   static void deleteArray_maplEstringcOintgR(void *p) {
      delete [] ((map<string,int>*)p);
   }
   static void destruct_maplEstringcOintgR(void *p) {
      typedef map<string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,int>

namespace ROOT {
   void maplEvectorlEintgRcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEvectorlEintgRcOdoublegR_Dictionary();
   static void *new_maplEvectorlEintgRcOdoublegR(void *p = 0);
   static void *newArray_maplEvectorlEintgRcOdoublegR(Long_t size, void *p);
   static void delete_maplEvectorlEintgRcOdoublegR(void *p);
   static void deleteArray_maplEvectorlEintgRcOdoublegR(void *p);
   static void destruct_maplEvectorlEintgRcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<vector<int>,double>*)
   {
      map<vector<int>,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<vector<int>,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<vector<int>,double>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<vector<int>,double>), DefineBehavior(ptr, ptr),
                  0, &maplEvectorlEintgRcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(map<vector<int>,double>) );
      instance.SetNew(&new_maplEvectorlEintgRcOdoublegR);
      instance.SetNewArray(&newArray_maplEvectorlEintgRcOdoublegR);
      instance.SetDelete(&delete_maplEvectorlEintgRcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEvectorlEintgRcOdoublegR);
      instance.SetDestructor(&destruct_maplEvectorlEintgRcOdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<vector<int>,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<vector<int>,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEvectorlEintgRcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<vector<int>,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEvectorlEintgRcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<vector<int>,double> : new map<vector<int>,double>;
   }
   static void *newArray_maplEvectorlEintgRcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<vector<int>,double>[nElements] : new map<vector<int>,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEvectorlEintgRcOdoublegR(void *p) {
      delete ((map<vector<int>,double>*)p);
   }
   static void deleteArray_maplEvectorlEintgRcOdoublegR(void *p) {
      delete [] ((map<vector<int>,double>*)p);
   }
   static void destruct_maplEvectorlEintgRcOdoublegR(void *p) {
      typedef map<vector<int>,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<vector<int>,double>

namespace ROOT {
   void vectorlEddasChannelmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEddasChannelmUgR_Dictionary();
   static void *new_vectorlEddasChannelmUgR(void *p = 0);
   static void *newArray_vectorlEddasChannelmUgR(Long_t size, void *p);
   static void delete_vectorlEddasChannelmUgR(void *p);
   static void deleteArray_vectorlEddasChannelmUgR(void *p);
   static void destruct_vectorlEddasChannelmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<ddasChannel*>*)
   {
      vector<ddasChannel*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ddasChannel*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ddasChannel*>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<ddasChannel*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEddasChannelmUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<ddasChannel*>) );
      instance.SetNew(&new_vectorlEddasChannelmUgR);
      instance.SetNewArray(&newArray_vectorlEddasChannelmUgR);
      instance.SetDelete(&delete_vectorlEddasChannelmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEddasChannelmUgR);
      instance.SetDestructor(&destruct_vectorlEddasChannelmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<ddasChannel*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ddasChannel*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEddasChannelmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<ddasChannel*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEddasChannelmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ddasChannel*> : new vector<ddasChannel*>;
   }
   static void *newArray_vectorlEddasChannelmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ddasChannel*>[nElements] : new vector<ddasChannel*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEddasChannelmUgR(void *p) {
      delete ((vector<ddasChannel*>*)p);
   }
   static void deleteArray_vectorlEddasChannelmUgR(void *p) {
      delete [] ((vector<ddasChannel*>*)p);
   }
   static void destruct_vectorlEddasChannelmUgR(void *p) {
      typedef vector<ddasChannel*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<ddasChannel*>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlElendaBarmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElendaBarmUgR_Dictionary();
   static void *new_vectorlElendaBarmUgR(void *p = 0);
   static void *newArray_vectorlElendaBarmUgR(Long_t size, void *p);
   static void delete_vectorlElendaBarmUgR(void *p);
   static void deleteArray_vectorlElendaBarmUgR(void *p);
   static void destruct_vectorlElendaBarmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<lendaBar*>*)
   {
      vector<lendaBar*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<lendaBar*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<lendaBar*>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<lendaBar*>), DefineBehavior(ptr, ptr),
                  0, &vectorlElendaBarmUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<lendaBar*>) );
      instance.SetNew(&new_vectorlElendaBarmUgR);
      instance.SetNewArray(&newArray_vectorlElendaBarmUgR);
      instance.SetDelete(&delete_vectorlElendaBarmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlElendaBarmUgR);
      instance.SetDestructor(&destruct_vectorlElendaBarmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<lendaBar*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<lendaBar*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElendaBarmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<lendaBar*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElendaBarmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<lendaBar*> : new vector<lendaBar*>;
   }
   static void *newArray_vectorlElendaBarmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<lendaBar*>[nElements] : new vector<lendaBar*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElendaBarmUgR(void *p) {
      delete ((vector<lendaBar*>*)p);
   }
   static void deleteArray_vectorlElendaBarmUgR(void *p) {
      delete [] ((vector<lendaBar*>*)p);
   }
   static void destruct_vectorlElendaBarmUgR(void *p) {
      typedef vector<lendaBar*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<lendaBar*>

namespace ROOT {
   void vectorlElendaBargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElendaBargR_Dictionary();
   static void *new_vectorlElendaBargR(void *p = 0);
   static void *newArray_vectorlElendaBargR(Long_t size, void *p);
   static void delete_vectorlElendaBargR(void *p);
   static void deleteArray_vectorlElendaBargR(void *p);
   static void destruct_vectorlElendaBargR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<lendaBar>*)
   {
      vector<lendaBar> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<lendaBar>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<lendaBar>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<lendaBar>), DefineBehavior(ptr, ptr),
                  0, &vectorlElendaBargR_Dictionary, isa_proxy, 4,
                  sizeof(vector<lendaBar>) );
      instance.SetNew(&new_vectorlElendaBargR);
      instance.SetNewArray(&newArray_vectorlElendaBargR);
      instance.SetDelete(&delete_vectorlElendaBargR);
      instance.SetDeleteArray(&deleteArray_vectorlElendaBargR);
      instance.SetDestructor(&destruct_vectorlElendaBargR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<lendaBar> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<lendaBar>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElendaBargR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<lendaBar>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElendaBargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<lendaBar> : new vector<lendaBar>;
   }
   static void *newArray_vectorlElendaBargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<lendaBar>[nElements] : new vector<lendaBar>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElendaBargR(void *p) {
      delete ((vector<lendaBar>*)p);
   }
   static void deleteArray_vectorlElendaBargR(void *p) {
      delete [] ((vector<lendaBar>*)p);
   }
   static void destruct_vectorlElendaBargR(void *p) {
      typedef vector<lendaBar> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<lendaBar>

namespace ROOT {
   void vectorlElendaChannelmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElendaChannelmUgR_Dictionary();
   static void *new_vectorlElendaChannelmUgR(void *p = 0);
   static void *newArray_vectorlElendaChannelmUgR(Long_t size, void *p);
   static void delete_vectorlElendaChannelmUgR(void *p);
   static void deleteArray_vectorlElendaChannelmUgR(void *p);
   static void destruct_vectorlElendaChannelmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<lendaChannel*>*)
   {
      vector<lendaChannel*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<lendaChannel*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<lendaChannel*>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<lendaChannel*>), DefineBehavior(ptr, ptr),
                  0, &vectorlElendaChannelmUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<lendaChannel*>) );
      instance.SetNew(&new_vectorlElendaChannelmUgR);
      instance.SetNewArray(&newArray_vectorlElendaChannelmUgR);
      instance.SetDelete(&delete_vectorlElendaChannelmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlElendaChannelmUgR);
      instance.SetDestructor(&destruct_vectorlElendaChannelmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<lendaChannel*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<lendaChannel*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElendaChannelmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<lendaChannel*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElendaChannelmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<lendaChannel*> : new vector<lendaChannel*>;
   }
   static void *newArray_vectorlElendaChannelmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<lendaChannel*>[nElements] : new vector<lendaChannel*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElendaChannelmUgR(void *p) {
      delete ((vector<lendaChannel*>*)p);
   }
   static void deleteArray_vectorlElendaChannelmUgR(void *p) {
      delete [] ((vector<lendaChannel*>*)p);
   }
   static void destruct_vectorlElendaChannelmUgR(void *p) {
      typedef vector<lendaChannel*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<lendaChannel*>

namespace ROOT {
   void vectorlElendaChannelgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElendaChannelgR_Dictionary();
   static void *new_vectorlElendaChannelgR(void *p = 0);
   static void *newArray_vectorlElendaChannelgR(Long_t size, void *p);
   static void delete_vectorlElendaChannelgR(void *p);
   static void deleteArray_vectorlElendaChannelgR(void *p);
   static void destruct_vectorlElendaChannelgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<lendaChannel>*)
   {
      vector<lendaChannel> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<lendaChannel>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<lendaChannel>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<lendaChannel>), DefineBehavior(ptr, ptr),
                  0, &vectorlElendaChannelgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<lendaChannel>) );
      instance.SetNew(&new_vectorlElendaChannelgR);
      instance.SetNewArray(&newArray_vectorlElendaChannelgR);
      instance.SetDelete(&delete_vectorlElendaChannelgR);
      instance.SetDeleteArray(&deleteArray_vectorlElendaChannelgR);
      instance.SetDestructor(&destruct_vectorlElendaChannelgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<lendaChannel> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<lendaChannel>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElendaChannelgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<lendaChannel>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElendaChannelgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<lendaChannel> : new vector<lendaChannel>;
   }
   static void *newArray_vectorlElendaChannelgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<lendaChannel>[nElements] : new vector<lendaChannel>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElendaChannelgR(void *p) {
      delete ((vector<lendaChannel>*)p);
   }
   static void deleteArray_vectorlElendaChannelgR(void *p) {
      delete [] ((vector<lendaChannel>*)p);
   }
   static void destruct_vectorlElendaChannelgR(void *p) {
      typedef vector<lendaChannel> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<lendaChannel>

namespace ROOT {
   void vectorlElendaSettingsmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElendaSettingsmUgR_Dictionary();
   static void *new_vectorlElendaSettingsmUgR(void *p = 0);
   static void *newArray_vectorlElendaSettingsmUgR(Long_t size, void *p);
   static void delete_vectorlElendaSettingsmUgR(void *p);
   static void deleteArray_vectorlElendaSettingsmUgR(void *p);
   static void destruct_vectorlElendaSettingsmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<lendaSettings*>*)
   {
      vector<lendaSettings*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<lendaSettings*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<lendaSettings*>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<lendaSettings*>), DefineBehavior(ptr, ptr),
                  0, &vectorlElendaSettingsmUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<lendaSettings*>) );
      instance.SetNew(&new_vectorlElendaSettingsmUgR);
      instance.SetNewArray(&newArray_vectorlElendaSettingsmUgR);
      instance.SetDelete(&delete_vectorlElendaSettingsmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlElendaSettingsmUgR);
      instance.SetDestructor(&destruct_vectorlElendaSettingsmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<lendaSettings*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<lendaSettings*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElendaSettingsmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<lendaSettings*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElendaSettingsmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<lendaSettings*> : new vector<lendaSettings*>;
   }
   static void *newArray_vectorlElendaSettingsmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<lendaSettings*>[nElements] : new vector<lendaSettings*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElendaSettingsmUgR(void *p) {
      delete ((vector<lendaSettings*>*)p);
   }
   static void deleteArray_vectorlElendaSettingsmUgR(void *p) {
      delete [] ((vector<lendaSettings*>*)p);
   }
   static void destruct_vectorlElendaSettingsmUgR(void *p) {
      typedef vector<lendaSettings*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<lendaSettings*>

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

namespace ROOT {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned short>

namespace ROOT {
   void vectorlEvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double> >*)
   {
      vector<vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double> >", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<double> >) );
      instance.SetNew(&new_vectorlEvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> > : new vector<vector<double> >;
   }
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> >[nElements] : new vector<vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete ((vector<vector<double> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete [] ((vector<vector<double> >*)p);
   }
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p) {
      typedef vector<vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<double> >

namespace ROOT {
   void vectorlEvectorlEunsignedsPshortgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEunsignedsPshortgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEunsignedsPshortgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEunsignedsPshortgRsPgR(void *p);
   static void destruct_vectorlEvectorlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<unsigned short> >*)
   {
      vector<vector<unsigned short> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<unsigned short> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<unsigned short> >", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<unsigned short> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<unsigned short> >) );
      instance.SetNew(&new_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<unsigned short> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<unsigned short> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEunsignedsPshortgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<unsigned short> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEunsignedsPshortgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned short> > : new vector<vector<unsigned short> >;
   }
   static void *newArray_vectorlEvectorlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned short> >[nElements] : new vector<vector<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEunsignedsPshortgRsPgR(void *p) {
      delete ((vector<vector<unsigned short> >*)p);
   }
   static void deleteArray_vectorlEvectorlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((vector<vector<unsigned short> >*)p);
   }
   static void destruct_vectorlEvectorlEunsignedsPshortgRsPgR(void *p) {
      typedef vector<vector<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<unsigned short> >

/********************************************************
* src/LendaDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableLendaDict();

extern "C" void G__set_cpp_environmentLendaDict() {
  G__cpp_reset_tagtableLendaDict();
}
#include <new>
extern "C" int G__cpp_dllrevLendaDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ddasChannel */
static int G__LendaDict_517_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ddasChannel* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ddasChannel[n];
     } else {
       p = new((void*) gvp) ddasChannel[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ddasChannel;
     } else {
       p = new((void*) gvp) ddasChannel;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_ddasChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ddasChannel* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ddasChannel(*(ddasChannel*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ddasChannel(*(ddasChannel*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_ddasChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ddasChannel& obj = ((ddasChannel*) G__getstructoffset())->operator=(*(ddasChannel*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ddasChannel*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ddasChannel*) G__getstructoffset())->GetTimeHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ddasChannel*) G__getstructoffset())->GetTimeLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ddasChannel*) G__getstructoffset())->GetCFDTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ddasChannel*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ddasChannel*) G__getstructoffset())->GetCFD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ddasChannel*) G__getstructoffset())->GetEnergySums((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ddasChannel*) G__getstructoffset())->GetChannelNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ddasChannel*) G__getstructoffset())->GetFinishCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ddasChannel*) G__getstructoffset())->GetChannelLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ddasChannel*) G__getstructoffset())->GetChannelLengthHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ddasChannel*) G__getstructoffset())->GetOverflowCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ddasChannel*) G__getstructoffset())->GetSlotID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ddasChannel*) G__getstructoffset())->GetCrateID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ddasChannel*) G__getstructoffset())->GetChannelID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ddasChannel*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ddasChannel*) G__getstructoffset())->GetCFDTriggerSourceBit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetEclockLow((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetEclockHigh((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetEclockHigher((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetEclock();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<UShort_t>* pobj;
         vector<UShort_t> xobj = ((ddasChannel*) G__getstructoffset())->GetTrace();
         pobj = new vector<UShort_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetChannelID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetSlotID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetCrateID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetChannelHeaderLength((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetChannelLength((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetOverflowCode((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetFinishCode((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetCFDTriggerSourceBit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetTimeLow((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetTimeHigh((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetTimeCFD((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetEnergy((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetTraceLength((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetEnergySums((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetQDCSums((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->SetTraceValues((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->UnpackChannelData((const uint32_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ddasChannel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ddasChannel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ddasChannel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ddasChannel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasChannel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ddasChannel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ddasChannel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ddasChannel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_517_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ddasChannel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ddasChannel G__TddasChannel;
static int G__LendaDict_517_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ddasChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ddasChannel*) (soff+(sizeof(ddasChannel)*i)))->~G__TddasChannel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ddasChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ddasChannel*) (soff))->~G__TddasChannel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ddasEvent */
static int G__LendaDict_518_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ddasEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ddasEvent[n];
     } else {
       p = new((void*) gvp) ddasEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ddasEvent;
     } else {
       p = new((void*) gvp) ddasEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_ddasEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ddasEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ddasEvent(*(ddasEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ddasEvent(*(ddasEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_ddasEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ddasEvent& obj = ((ddasEvent*) G__getstructoffset())->operator=(*(ddasEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<ddasChannel*>& obj = ((ddasEvent*) G__getstructoffset())->getData();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasEvent*) G__getstructoffset())->addChannelData((ddasChannel*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ddasEvent*) G__getstructoffset())->getNEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ddasEvent*) G__getstructoffset())->getFirstTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ddasEvent*) G__getstructoffset())->getLastTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ddasEvent*) G__getstructoffset())->getTimeWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasEvent*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasEvent*) G__getstructoffset())->getEvent((FILE*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ddasEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ddasEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ddasEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ddasEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ddasEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ddasEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ddasEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ddasEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_518_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ddasEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ddasEvent G__TddasEvent;
static int G__LendaDict_518_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ddasEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ddasEvent*) (soff+(sizeof(ddasEvent)*i)))->~G__TddasEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ddasEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ddasEvent*) (soff))->~G__TddasEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<ddasChannel*,allocator<ddasChannel*> > */
static int G__LendaDict_520_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ddasChannel*,allocator<ddasChannel*> >::reference obj = ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->at((vector<ddasChannel*,allocator<ddasChannel*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ddasChannel*,allocator<ddasChannel*> >::const_reference obj = ((const vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->at((vector<ddasChannel*,allocator<ddasChannel*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ddasChannel*,allocator<ddasChannel*> >::iterator* pobj;
         vector<ddasChannel*,allocator<ddasChannel*> >::iterator xobj = ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->begin();
         pobj = new vector<ddasChannel*,allocator<ddasChannel*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ddasChannel*,allocator<ddasChannel*> >::iterator* pobj;
         vector<ddasChannel*,allocator<ddasChannel*> >::iterator xobj = ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->end();
         pobj = new vector<ddasChannel*,allocator<ddasChannel*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ddasChannel*,allocator<ddasChannel*> >::reverse_iterator* pobj;
         vector<ddasChannel*,allocator<ddasChannel*> >::reverse_iterator xobj = ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<ddasChannel*,allocator<ddasChannel*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ddasChannel*,allocator<ddasChannel*> >::reverse_iterator* pobj;
         vector<ddasChannel*,allocator<ddasChannel*> >::reverse_iterator xobj = ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->rend();
         pobj = new vector<ddasChannel*,allocator<ddasChannel*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->resize((vector<ddasChannel*,allocator<ddasChannel*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->resize((vector<ddasChannel*,allocator<ddasChannel*> >::size_type) G__int(libp->para[0]), (ddasChannel*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ddasChannel*,allocator<ddasChannel*> >::reference obj = ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->operator[]((vector<ddasChannel*,allocator<ddasChannel*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ddasChannel*,allocator<ddasChannel*> >::const_reference obj = ((const vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->operator[]((vector<ddasChannel*,allocator<ddasChannel*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<ddasChannel*,allocator<ddasChannel*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<ddasChannel*,allocator<ddasChannel*> >[n];
     } else {
       p = new((void*) gvp) vector<ddasChannel*,allocator<ddasChannel*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<ddasChannel*,allocator<ddasChannel*> >;
     } else {
       p = new((void*) gvp) vector<ddasChannel*,allocator<ddasChannel*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<ddasChannel*,allocator<ddasChannel*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<ddasChannel*,allocator<ddasChannel*> >((vector<ddasChannel*,allocator<ddasChannel*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(ddasChannel**) libp->para[1].ref : *(ddasChannel**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<ddasChannel*,allocator<ddasChannel*> >((vector<ddasChannel*,allocator<ddasChannel*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(ddasChannel**) libp->para[1].ref : *(ddasChannel**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<ddasChannel*,allocator<ddasChannel*> >((vector<ddasChannel*,allocator<ddasChannel*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<ddasChannel*,allocator<ddasChannel*> >((vector<ddasChannel*,allocator<ddasChannel*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<ddasChannel*,allocator<ddasChannel*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<ddasChannel*,allocator<ddasChannel*> >(*(vector<ddasChannel*,allocator<ddasChannel*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<ddasChannel*,allocator<ddasChannel*> >(*(vector<ddasChannel*,allocator<ddasChannel*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<ddasChannel*,allocator<ddasChannel*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<ddasChannel*,allocator<ddasChannel*> >(*((vector<ddasChannel*,allocator<ddasChannel*> >::const_iterator*) G__int(libp->para[0])), *((vector<ddasChannel*,allocator<ddasChannel*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<ddasChannel*,allocator<ddasChannel*> >(*((vector<ddasChannel*,allocator<ddasChannel*> >::const_iterator*) G__int(libp->para[0])), *((vector<ddasChannel*,allocator<ddasChannel*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<ddasChannel*,allocator<ddasChannel*> >& obj = ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->operator=(*(vector<ddasChannel*,allocator<ddasChannel*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->reserve((vector<ddasChannel*,allocator<ddasChannel*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ddasChannel*& obj = ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ddasChannel*& obj = ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(ddasChannel**) libp->para[0].ref : *(ddasChannel**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->swap(*(vector<ddasChannel*,allocator<ddasChannel*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ddasChannel*,allocator<ddasChannel*> >::iterator* pobj;
         vector<ddasChannel*,allocator<ddasChannel*> >::iterator xobj = ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->insert(*((vector<ddasChannel*,allocator<ddasChannel*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(ddasChannel**) libp->para[1].ref : *(ddasChannel**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<ddasChannel*,allocator<ddasChannel*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->insert(*((vector<ddasChannel*,allocator<ddasChannel*> >::iterator*) G__int(libp->para[0])), *((vector<ddasChannel*,allocator<ddasChannel*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<ddasChannel*,allocator<ddasChannel*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->insert(*((vector<ddasChannel*,allocator<ddasChannel*> >::iterator*) G__int(libp->para[0])), (vector<ddasChannel*,allocator<ddasChannel*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(ddasChannel**) libp->para[2].ref : *(ddasChannel**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->erase(*((vector<ddasChannel*,allocator<ddasChannel*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->erase(*((vector<ddasChannel*,allocator<ddasChannel*> >::iterator*) G__int(libp->para[0])), *((vector<ddasChannel*,allocator<ddasChannel*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_520_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ddasChannel*,allocator<ddasChannel*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<ddasChannel*,allocator<ddasChannel*> > G__TvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR;
static int G__LendaDict_520_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<ddasChannel*,allocator<ddasChannel*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<ddasChannel*,allocator<ddasChannel*> >*) (soff+(sizeof(vector<ddasChannel*,allocator<ddasChannel*> >)*i)))->~G__TvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<ddasChannel*,allocator<ddasChannel*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<ddasChannel*,allocator<ddasChannel*> >*) (soff))->~G__TvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lendaChannel */
static int G__LendaDict_523_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaChannel* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lendaChannel[n];
     } else {
       p = new((void*) gvp) lendaChannel[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lendaChannel;
     } else {
       p = new((void*) gvp) lendaChannel;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((lendaChannel*) G__getstructoffset())->operator==(*(lendaChannel*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetEnergies(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetSoftwareTimes(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCubicTimes(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetPulseHeights(*(vector<Int_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetSoftwareReferenceTimes(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCubicReferenceTimes(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const lendaChannel*) G__getstructoffset())->GetEnergies();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const lendaChannel*) G__getstructoffset())->GetSoftwareTimes();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const lendaChannel*) G__getstructoffset())->GetCubicTimes();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Int_t>* pobj;
         const vector<Int_t> xobj = ((const lendaChannel*) G__getstructoffset())->GetPulseHeights();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const lendaChannel*) G__getstructoffset())->GetSoftwareReferenceTimes();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const lendaChannel*) G__getstructoffset())->GetCubicReferenceTimes();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const lendaChannel*) G__getstructoffset())->GetUnderShoots();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetUnderShoots(*((vector<Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetEclockLow((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetEclockHigh((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetEclockHigher((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetEclock((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaChannel*) G__getstructoffset())->GetEclockLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaChannel*) G__getstructoffset())->GetEclockHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaChannel*) G__getstructoffset())->GetEclockHigher());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetEclock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaChannel*) G__getstructoffset())->GetChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaChannel*) G__getstructoffset())->GetSlot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaChannel*) G__getstructoffset())->GetGlobalID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaChannel*) G__getstructoffset())->GetReferenceGlobalID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((lendaChannel*) G__getstructoffset())->GetOverFlow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaChannel*) G__getstructoffset())->GetNumZeroCrossings());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetCorrectedEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetInternalEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaChannel*) G__getstructoffset())->GetPulseHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaChannel*) G__getstructoffset())->GetFilterHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetSoftTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetCubicTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetCubicFitTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetCorrectedTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetCorrectedCubicTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetCorrectedCubicFitTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetCorrectedSoftTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((lendaChannel*) G__getstructoffset())->GetCFDTrigBit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetSoftwareCFD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetCubicCFD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetCubicFitCFD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetInternalCFD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetShortGate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetLongGate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((lendaChannel*) G__getstructoffset())->GetJentry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((lendaChannel*) G__getstructoffset())->GetTimeLow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((lendaChannel*) G__getstructoffset())->GetTimeHigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<UShort_t>* pobj;
         vector<UShort_t> xobj = ((lendaChannel*) G__getstructoffset())->GetTrace();
         pobj = new vector<UShort_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((lendaChannel*) G__getstructoffset())->GetFilter();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((lendaChannel*) G__getstructoffset())->GetCFD();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetCFDResidual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetReferenceTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetCubicReferenceTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetSoftwareReferenceTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((lendaChannel*) G__getstructoffset())->GetChannelName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((lendaChannel*) G__getstructoffset())->GetName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((lendaChannel*) G__getstructoffset())->GetReferenceChannelName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetCoarseTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaChannel*) G__getstructoffset())->GetOtherTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetChannel((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetSlot((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetGlobalID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetReferenceGlobalID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetOverFlow((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetNumZeroCrossings((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCorrectedEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetInternalEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetFilterHeight((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCubicFitTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCorrectedTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCorrectedCubicFitTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCorrectedSoftTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCorrectedCubicTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetTimeLow((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetTimeHigh((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCFDTrigBit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetSoftwareCFD((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCubicCFD((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCubicFitCFD((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetInternalCFD((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetShortGate((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetLongGate((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetJentry((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetTrace(*((vector<UShort_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetFilter(*((vector<Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCFD(*((vector<Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetCFDResidual((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetChannelName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetReferenceChannelName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetReferenceTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->SetOtherTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) lendaChannel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaChannel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) lendaChannel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      lendaChannel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaChannel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaChannel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) lendaChannel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaChannel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_523_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) lendaChannel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LendaDict_523_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lendaChannel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lendaChannel(*(lendaChannel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lendaChannel G__TlendaChannel;
static int G__LendaDict_523_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lendaChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lendaChannel*) (soff+(sizeof(lendaChannel)*i)))->~G__TlendaChannel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lendaChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lendaChannel*) (soff))->~G__TlendaChannel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LendaDict_523_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaChannel* dest = (lendaChannel*) G__getstructoffset();
   *dest = *(lendaChannel*) libp->para[0].ref;
   const lendaChannel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lendaBar */
static int G__LendaDict_528_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaBar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lendaBar[n];
     } else {
       p = new((void*) gvp) lendaBar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lendaBar;
     } else {
       p = new((void*) gvp) lendaBar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaBar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaBar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new lendaBar(*((string*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) lendaBar(*((string*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaBar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaBar*) G__getstructoffset())->PushTopChannel(*((lendaChannel*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaBar*) G__getstructoffset())->PushBottomChannel(*((lendaChannel*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((lendaBar*) G__getstructoffset())->GetBarName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaBar*) G__getstructoffset())->GetNumTops());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaBar*) G__getstructoffset())->GetNumBottoms());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaBar*) G__getstructoffset())->GetBarMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCubicDt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetDt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetSyncDt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCubicSyncDt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCOG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetAvgEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetAvgPulseHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCorrectedDt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCorrectedCOG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCorrectedAvgEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetAvgT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCorrectedAvgT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetTopTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetBottomTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetAvgTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCorrectedAvgTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCubicTopTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCubicBottomTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCorrectedTopTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCorrectedBottomTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCorrectedCubicTopTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCorrectedCubicBottomTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCorrectedSoftTopTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCorrectedSoftBottomTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaBar*) G__getstructoffset())->GetCorrectedAvgSoftTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaBar*) G__getstructoffset())->SetBarId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaBar*) G__getstructoffset())->SetBarName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaBar*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaBar*) G__getstructoffset())->Finalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((lendaBar*) G__getstructoffset())->operator==(*(lendaBar*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) lendaBar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaBar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) lendaBar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      lendaBar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaBar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaBar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) lendaBar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaBar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_528_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) lendaBar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LendaDict_528_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lendaBar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lendaBar(*(lendaBar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaBar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lendaBar G__TlendaBar;
static int G__LendaDict_528_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lendaBar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lendaBar*) (soff+(sizeof(lendaBar)*i)))->~G__TlendaBar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lendaBar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lendaBar*) (soff))->~G__TlendaBar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LendaDict_528_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaBar* dest = (lendaBar*) G__getstructoffset();
   *dest = *(lendaBar*) libp->para[0].ref;
   const lendaBar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<lendaChannel,allocator<lendaChannel> > */
static int G__LendaDict_530_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<lendaChannel,allocator<lendaChannel> >::reference obj = ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->at((vector<lendaChannel,allocator<lendaChannel> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel,allocator<lendaChannel> >::const_reference obj = ((const vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->at((vector<lendaChannel,allocator<lendaChannel> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel,allocator<lendaChannel> >::iterator* pobj;
         vector<lendaChannel,allocator<lendaChannel> >::iterator xobj = ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->begin();
         pobj = new vector<lendaChannel,allocator<lendaChannel> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel,allocator<lendaChannel> >::iterator* pobj;
         vector<lendaChannel,allocator<lendaChannel> >::iterator xobj = ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->end();
         pobj = new vector<lendaChannel,allocator<lendaChannel> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel,allocator<lendaChannel> >::reverse_iterator* pobj;
         vector<lendaChannel,allocator<lendaChannel> >::reverse_iterator xobj = ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->rbegin();
         pobj = new vector<lendaChannel,allocator<lendaChannel> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel,allocator<lendaChannel> >::reverse_iterator* pobj;
         vector<lendaChannel,allocator<lendaChannel> >::reverse_iterator xobj = ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->rend();
         pobj = new vector<lendaChannel,allocator<lendaChannel> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->resize((vector<lendaChannel,allocator<lendaChannel> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->resize((vector<lendaChannel,allocator<lendaChannel> >::size_type) G__int(libp->para[0]), *((lendaChannel*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<lendaChannel,allocator<lendaChannel> >::reference obj = ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->operator[]((vector<lendaChannel,allocator<lendaChannel> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel,allocator<lendaChannel> >::const_reference obj = ((const vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->operator[]((vector<lendaChannel,allocator<lendaChannel> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaChannel,allocator<lendaChannel> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaChannel,allocator<lendaChannel> >[n];
     } else {
       p = new((void*) gvp) vector<lendaChannel,allocator<lendaChannel> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaChannel,allocator<lendaChannel> >;
     } else {
       p = new((void*) gvp) vector<lendaChannel,allocator<lendaChannel> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaChannel,allocator<lendaChannel> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaChannel,allocator<lendaChannel> >((vector<lendaChannel,allocator<lendaChannel> >::size_type) G__int(libp->para[0]), *(lendaChannel*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<lendaChannel,allocator<lendaChannel> >((vector<lendaChannel,allocator<lendaChannel> >::size_type) G__int(libp->para[0]), *(lendaChannel*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaChannel,allocator<lendaChannel> >((vector<lendaChannel,allocator<lendaChannel> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<lendaChannel,allocator<lendaChannel> >((vector<lendaChannel,allocator<lendaChannel> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaChannel,allocator<lendaChannel> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<lendaChannel,allocator<lendaChannel> >(*(vector<lendaChannel,allocator<lendaChannel> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<lendaChannel,allocator<lendaChannel> >(*(vector<lendaChannel,allocator<lendaChannel> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaChannel,allocator<lendaChannel> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<lendaChannel,allocator<lendaChannel> >(*((vector<lendaChannel,allocator<lendaChannel> >::const_iterator*) G__int(libp->para[0])), *((vector<lendaChannel,allocator<lendaChannel> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<lendaChannel,allocator<lendaChannel> >(*((vector<lendaChannel,allocator<lendaChannel> >::const_iterator*) G__int(libp->para[0])), *((vector<lendaChannel,allocator<lendaChannel> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<lendaChannel,allocator<lendaChannel> >& obj = ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->operator=(*(vector<lendaChannel,allocator<lendaChannel> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->reserve((vector<lendaChannel,allocator<lendaChannel> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const lendaChannel& obj = ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const lendaChannel& obj = ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->push_back(*(lendaChannel*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->swap(*(vector<lendaChannel,allocator<lendaChannel> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel,allocator<lendaChannel> >::iterator* pobj;
         vector<lendaChannel,allocator<lendaChannel> >::iterator xobj = ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->insert(*((vector<lendaChannel,allocator<lendaChannel> >::iterator*) G__int(libp->para[0])), *(lendaChannel*) libp->para[1].ref);
         pobj = new vector<lendaChannel,allocator<lendaChannel> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->insert(*((vector<lendaChannel,allocator<lendaChannel> >::iterator*) G__int(libp->para[0])), *((vector<lendaChannel,allocator<lendaChannel> >::const_iterator*) G__int(libp->para[1]))
, *((vector<lendaChannel,allocator<lendaChannel> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->insert(*((vector<lendaChannel,allocator<lendaChannel> >::iterator*) G__int(libp->para[0])), (vector<lendaChannel,allocator<lendaChannel> >::size_type) G__int(libp->para[1])
, *(lendaChannel*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->erase(*((vector<lendaChannel,allocator<lendaChannel> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->erase(*((vector<lendaChannel,allocator<lendaChannel> >::iterator*) G__int(libp->para[0])), *((vector<lendaChannel,allocator<lendaChannel> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_530_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel,allocator<lendaChannel> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<lendaChannel,allocator<lendaChannel> > G__TvectorlElendaChannelcOallocatorlElendaChannelgRsPgR;
static int G__LendaDict_530_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<lendaChannel,allocator<lendaChannel> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<lendaChannel,allocator<lendaChannel> >*) (soff+(sizeof(vector<lendaChannel,allocator<lendaChannel> >)*i)))->~G__TvectorlElendaChannelcOallocatorlElendaChannelgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<lendaChannel,allocator<lendaChannel> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<lendaChannel,allocator<lendaChannel> >*) (soff))->~G__TvectorlElendaChannelcOallocatorlElendaChannelgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lendaEvent */
static int G__LendaDict_533_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lendaEvent[n];
     } else {
       p = new((void*) gvp) lendaEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lendaEvent;
     } else {
       p = new((void*) gvp) lendaEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaEvent*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaEvent*) G__getstructoffset())->Finalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaEvent*) G__getstructoffset())->PushABar(*((lendaBar*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaEvent*) G__getstructoffset())->PushUnMappedChannel(*((lendaChannel*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaEvent*) G__getstructoffset())->SeteTime((uint64_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaEvent*) G__getstructoffset())->SetInternalTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((lendaEvent*) G__getstructoffset())->operator==(*(lendaEvent*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((lendaEvent*) G__getstructoffset())->FindBar((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((lendaEvent*) G__getstructoffset())->FindBar(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         lendaBar* pobj;
         lendaBar xobj = ((lendaEvent*) G__getstructoffset())->FindBarSafe(*((string*) G__int(libp->para[0])));
         pobj = new lendaBar(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         lendaBar* pobj;
         lendaBar xobj = ((lendaEvent*) G__getstructoffset())->FindBarSafe((int) G__int(libp->para[0]));
         pobj = new lendaBar(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((lendaEvent*) G__getstructoffset())->FindChannel(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((lendaEvent*) G__getstructoffset())->FindReferenceChannel(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) lendaEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) lendaEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      lendaEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) lendaEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_533_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) lendaEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LendaDict_533_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lendaEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lendaEvent(*(lendaEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lendaEvent G__TlendaEvent;
static int G__LendaDict_533_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lendaEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lendaEvent*) (soff+(sizeof(lendaEvent)*i)))->~G__TlendaEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lendaEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lendaEvent*) (soff))->~G__TlendaEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LendaDict_533_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaEvent* dest = (lendaEvent*) G__getstructoffset();
   *dest = *(lendaEvent*) libp->para[0].ref;
   const lendaEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<lendaBar,allocator<lendaBar> > */
static int G__LendaDict_535_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<lendaBar,allocator<lendaBar> >::reference obj = ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->at((vector<lendaBar,allocator<lendaBar> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar,allocator<lendaBar> >::const_reference obj = ((const vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->at((vector<lendaBar,allocator<lendaBar> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar,allocator<lendaBar> >::iterator* pobj;
         vector<lendaBar,allocator<lendaBar> >::iterator xobj = ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->begin();
         pobj = new vector<lendaBar,allocator<lendaBar> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar,allocator<lendaBar> >::iterator* pobj;
         vector<lendaBar,allocator<lendaBar> >::iterator xobj = ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->end();
         pobj = new vector<lendaBar,allocator<lendaBar> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar,allocator<lendaBar> >::reverse_iterator* pobj;
         vector<lendaBar,allocator<lendaBar> >::reverse_iterator xobj = ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->rbegin();
         pobj = new vector<lendaBar,allocator<lendaBar> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar,allocator<lendaBar> >::reverse_iterator* pobj;
         vector<lendaBar,allocator<lendaBar> >::reverse_iterator xobj = ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->rend();
         pobj = new vector<lendaBar,allocator<lendaBar> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->resize((vector<lendaBar,allocator<lendaBar> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->resize((vector<lendaBar,allocator<lendaBar> >::size_type) G__int(libp->para[0]), *((lendaBar*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<lendaBar,allocator<lendaBar> >::reference obj = ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->operator[]((vector<lendaBar,allocator<lendaBar> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar,allocator<lendaBar> >::const_reference obj = ((const vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->operator[]((vector<lendaBar,allocator<lendaBar> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaBar,allocator<lendaBar> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaBar,allocator<lendaBar> >[n];
     } else {
       p = new((void*) gvp) vector<lendaBar,allocator<lendaBar> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaBar,allocator<lendaBar> >;
     } else {
       p = new((void*) gvp) vector<lendaBar,allocator<lendaBar> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaBar,allocator<lendaBar> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaBar,allocator<lendaBar> >((vector<lendaBar,allocator<lendaBar> >::size_type) G__int(libp->para[0]), *(lendaBar*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<lendaBar,allocator<lendaBar> >((vector<lendaBar,allocator<lendaBar> >::size_type) G__int(libp->para[0]), *(lendaBar*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaBar,allocator<lendaBar> >((vector<lendaBar,allocator<lendaBar> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<lendaBar,allocator<lendaBar> >((vector<lendaBar,allocator<lendaBar> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaBar,allocator<lendaBar> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<lendaBar,allocator<lendaBar> >(*(vector<lendaBar,allocator<lendaBar> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<lendaBar,allocator<lendaBar> >(*(vector<lendaBar,allocator<lendaBar> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaBar,allocator<lendaBar> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<lendaBar,allocator<lendaBar> >(*((vector<lendaBar,allocator<lendaBar> >::const_iterator*) G__int(libp->para[0])), *((vector<lendaBar,allocator<lendaBar> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<lendaBar,allocator<lendaBar> >(*((vector<lendaBar,allocator<lendaBar> >::const_iterator*) G__int(libp->para[0])), *((vector<lendaBar,allocator<lendaBar> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<lendaBar,allocator<lendaBar> >& obj = ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->operator=(*(vector<lendaBar,allocator<lendaBar> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->reserve((vector<lendaBar,allocator<lendaBar> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const lendaBar& obj = ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const lendaBar& obj = ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->push_back(*(lendaBar*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->swap(*(vector<lendaBar,allocator<lendaBar> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar,allocator<lendaBar> >::iterator* pobj;
         vector<lendaBar,allocator<lendaBar> >::iterator xobj = ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->insert(*((vector<lendaBar,allocator<lendaBar> >::iterator*) G__int(libp->para[0])), *(lendaBar*) libp->para[1].ref);
         pobj = new vector<lendaBar,allocator<lendaBar> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->insert(*((vector<lendaBar,allocator<lendaBar> >::iterator*) G__int(libp->para[0])), *((vector<lendaBar,allocator<lendaBar> >::const_iterator*) G__int(libp->para[1]))
, *((vector<lendaBar,allocator<lendaBar> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->insert(*((vector<lendaBar,allocator<lendaBar> >::iterator*) G__int(libp->para[0])), (vector<lendaBar,allocator<lendaBar> >::size_type) G__int(libp->para[1])
, *(lendaBar*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->erase(*((vector<lendaBar,allocator<lendaBar> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->erase(*((vector<lendaBar,allocator<lendaBar> >::iterator*) G__int(libp->para[0])), *((vector<lendaBar,allocator<lendaBar> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_535_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar,allocator<lendaBar> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<lendaBar,allocator<lendaBar> > G__TvectorlElendaBarcOallocatorlElendaBargRsPgR;
static int G__LendaDict_535_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<lendaBar,allocator<lendaBar> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<lendaBar,allocator<lendaBar> >*) (soff+(sizeof(vector<lendaBar,allocator<lendaBar> >)*i)))->~G__TvectorlElendaBarcOallocatorlElendaBargRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<lendaBar,allocator<lendaBar> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<lendaBar,allocator<lendaBar> >*) (soff))->~G__TvectorlElendaBarcOallocatorlElendaBargRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lendaFilter */
static int G__LendaDict_538_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaFilter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lendaFilter[n];
     } else {
       p = new((void*) gvp) lendaFilter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lendaFilter;
     } else {
       p = new((void*) gvp) lendaFilter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaFilter*) G__getstructoffset())->FastFilter(*(vector<UShort_t>*) libp->para[0].ref, *(vector<Double_t>*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaFilter*) G__getstructoffset())->FastFilterOp(*(vector<UShort_t>*) libp->para[0].ref, *(vector<Double_t>*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaFilter*) G__getstructoffset())->FastFilterFull(*(vector<UShort_t>*) libp->para[0].ref, *(vector<Double_t>*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((lendaFilter*) G__getstructoffset())->CFD(*(vector<Double_t>*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((lendaFilter*) G__getstructoffset())->CFDOp(*(vector<Double_t>*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->GetZeroCrossing(*(vector<Double_t>*) libp->para[0].ref, *(Int_t*) G__Intref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((lendaFilter*) G__getstructoffset())->GetAllZeroCrossings(*(vector<Double_t>*) libp->para[0].ref);
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->GetZeroCrossingImproved(*(vector<Double_t>*) libp->para[0].ref, *(Int_t*) G__Intref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->GetZeroCrossingOp(*(vector<Double_t>*) libp->para[0].ref, *(Int_t*) G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->GetZeroCubic(*(vector<Double_t>*) libp->para[0].ref, *(Int_t*) G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->GetZeroFitCubic(*(vector<Double_t>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->DoMatrixInversionAlgorithm(*(vector<Double_t>*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((lendaFilter*) G__getstructoffset())->GetMatrixInversionAlgorithmCoeffients(*(vector<Double_t>*) libp->para[0].ref, *(Int_t*) G__Intref(&libp->para[1]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->fitTrace(*(vector<UShort_t>*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->GetEnergyOld(*(vector<UShort_t>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->GetEnergy(*(vector<UShort_t>*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((lendaFilter*) G__getstructoffset())->GetEnergyHighRate(*(vector<UShort_t>*) libp->para[0].ref, *(vector<Int_t>*) libp->para[1].ref
, *(vector<Double_t>*) libp->para[2].ref, *(Double_t*) G__Doubleref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((lendaFilter*) G__getstructoffset())->GetPulseHeightHighRate(*(vector<UShort_t>*) libp->para[0].ref, *(vector<Int_t>*) libp->para[1].ref);
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((lendaFilter*) G__getstructoffset())->GetZeroCrossingHighRate(*(vector<Double_t>*) libp->para[0].ref, *(vector<Int_t>*) libp->para[1].ref);
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((lendaFilter*) G__getstructoffset())->GetZeroCrossingCubicHighRate(*(vector<Double_t>*) libp->para[0].ref, *(vector<Int_t>*) libp->para[1].ref);
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->GetGate(*(vector<UShort_t>*) libp->para[0].ref, (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaFilter*) G__getstructoffset())->GetMaxPulseHeight(*(vector<UShort_t>*) libp->para[0].ref, *(Int_t*) G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaFilter*) G__getstructoffset())->GetMaxPulseHeight(*(vector<Double_t>*) libp->para[0].ref, *(Int_t*) G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->getFunc(*((TMatrixT<Double_t>*) G__int(libp->para[0])), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->getFunc(*(vector<double>*) libp->para[0].ref, (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaFilter*) G__getstructoffset())->GetStartForPulseShape((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaFilter*) G__getstructoffset())->CalculateCFD(*((vector<UShort_t>*) G__int(libp->para[0])), *(vector<Double_t>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((lendaFilter*) G__getstructoffset())->GetNewFirmwareCFD(*(vector<UShort_t>*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaFilter*) G__getstructoffset())->GetNewFirmwareCFDWeight((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) lendaFilter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaFilter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) lendaFilter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      lendaFilter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaFilter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaFilter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) lendaFilter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaFilter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_538_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) lendaFilter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LendaDict_538_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lendaFilter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lendaFilter(*(lendaFilter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lendaFilter G__TlendaFilter;
static int G__LendaDict_538_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lendaFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lendaFilter*) (soff+(sizeof(lendaFilter)*i)))->~G__TlendaFilter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lendaFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lendaFilter*) (soff))->~G__TlendaFilter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LendaDict_538_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaFilter* dest = (lendaFilter*) G__getstructoffset();
   *dest = *(lendaFilter*) libp->para[0].ref;
   const lendaFilter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lendaSettings */
static int G__LendaDict_577_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaSettings* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lendaSettings[n];
     } else {
       p = new((void*) gvp) lendaSettings[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lendaSettings;
     } else {
       p = new((void*) gvp) lendaSettings;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaSettings*) G__getstructoffset())->PrintAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaSettings*) G__getstructoffset())->PrintChannelCorrections(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaSettings*) G__getstructoffset())->PrintChannelMapInfo((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaSettings*) G__getstructoffset())->PrintChannelMapInfo(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaSettings*) G__getstructoffset())->PrintFilterInfo(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaSettings*) G__getstructoffset())->GetChannelsSlope(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaSettings*) G__getstructoffset())->GetChannelsIntercept(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((lendaSettings*) G__getstructoffset())->GetChannelsTimeOffset(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaSettings*) G__getstructoffset())->GetBarId(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((lendaSettings*) G__getstructoffset())->GetBarName((Int_t) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaSettings*) G__getstructoffset())->AddCorrectionSettings(*((string*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaSettings*) G__getstructoffset())->AddMapSettings(*((string*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaSettings*) G__getstructoffset())->AddFilterSettings(*((string*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaSettings*) G__getstructoffset())->SetBarIds(*((map<string,Int_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((lendaSettings*) G__getstructoffset())->GetNumBars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaSettings*) G__getstructoffset())->BuildReverseMap();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) lendaSettings::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaSettings::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) lendaSettings::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      lendaSettings::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaSettings*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaSettings::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) lendaSettings::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) lendaSettings::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_577_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) lendaSettings::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LendaDict_577_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lendaSettings* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lendaSettings(*(lendaSettings*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lendaSettings G__TlendaSettings;
static int G__LendaDict_577_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lendaSettings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lendaSettings*) (soff+(sizeof(lendaSettings)*i)))->~G__TlendaSettings();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lendaSettings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lendaSettings*) (soff))->~G__TlendaSettings();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LendaDict_577_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaSettings* dest = (lendaSettings*) G__getstructoffset();
   *dest = *(lendaSettings*) libp->para[0].ref;
   const lendaSettings& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* mapInfo */
static int G__LendaDict_592_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mapInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new mapInfo[n];
     } else {
       p = new((void*) gvp) mapInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new mapInfo;
     } else {
       p = new((void*) gvp) mapInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_mapInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_592_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mapInfo*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LendaDict_592_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   mapInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new mapInfo(*(mapInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_mapInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef mapInfo G__TmapInfo;
static int G__LendaDict_592_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (mapInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((mapInfo*) (soff+(sizeof(mapInfo)*i)))->~G__TmapInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (mapInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((mapInfo*) (soff))->~G__TmapInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LendaDict_592_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mapInfo* dest = (mapInfo*) G__getstructoffset();
   *dest = *(mapInfo*) libp->para[0].ref;
   const mapInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* lendaPacker */
static int G__LendaDict_594_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaPacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lendaPacker[n];
     } else {
       p = new((void*) gvp) lendaPacker[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new lendaPacker;
     } else {
       p = new((void*) gvp) lendaPacker;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaPacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaPacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new lendaPacker((lendaSettings*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) lendaPacker((lendaSettings*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaPacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->SetSettingFileNames(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->CalcTimeFilters(*(vector<UShort_t>*) libp->para[0].ref, *((mapInfo*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->CalcEnergyGates(*(vector<UShort_t>*) libp->para[0].ref, *((mapInfo*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->CalcAll(*(vector<UShort_t>*) libp->para[0].ref, *((mapInfo*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->CalcAll((ddasChannel*) G__int(libp->para[0]), *((mapInfo*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->CalcAll((lendaChannel*) G__int(libp->para[0]), *((mapInfo*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->ForceAllBarFilters((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->ForceAllReferenceFilters((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->ForceAllFilters((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->SetGates((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->SetTraceDelay((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->SetJEntry((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->MakeLendaEvent((lendaEvent*) G__int(libp->para[0]), (ddasEvent*) G__int(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->ReMakeLendaEvent((lendaEvent*) G__int(libp->para[0]), (lendaEvent*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((lendaPacker*) G__getstructoffset())->RePackChannel((lendaChannel*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((lendaPacker*) G__getstructoffset())->RePackChannel((lendaChannel*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         lendaChannel* pobj;
         lendaChannel xobj = ((lendaPacker*) G__getstructoffset())->DDASChannel2LendaChannel((ddasChannel*) G__int(libp->para[0]), *((mapInfo*) G__int(libp->para[1])));
         pobj = new lendaChannel(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->RePackSoftwareTimes((lendaEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->PackEvent((lendaEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->RePackEvent((lendaEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->FindAndSetMapAndCorrectionsFileNames((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((lendaPacker*) G__getstructoffset())->SetSettingsandCorrections(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_594_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         mapInfo* pobj;
         mapInfo xobj = ((lendaPacker*) G__getstructoffset())->GetMapInfo(*((string*) G__int(libp->para[0])));
         pobj = new mapInfo(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LendaDict_594_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   lendaPacker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new lendaPacker(*(lendaPacker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_lendaPacker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef lendaPacker G__TlendaPacker;
static int G__LendaDict_594_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (lendaPacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((lendaPacker*) (soff+(sizeof(lendaPacker)*i)))->~G__TlendaPacker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (lendaPacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((lendaPacker*) (soff))->~G__TlendaPacker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LendaDict_594_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   lendaPacker* dest = (lendaPacker*) G__getstructoffset();
   *dest = *(lendaPacker*) libp->para[0].ref;
   const lendaPacker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<lendaChannel*,allocator<lendaChannel*> > */
static int G__LendaDict_616_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel*,allocator<lendaChannel*> >::reference obj = ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->at((vector<lendaChannel*,allocator<lendaChannel*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel*,allocator<lendaChannel*> >::const_reference obj = ((const vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->at((vector<lendaChannel*,allocator<lendaChannel*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel*,allocator<lendaChannel*> >::iterator* pobj;
         vector<lendaChannel*,allocator<lendaChannel*> >::iterator xobj = ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->begin();
         pobj = new vector<lendaChannel*,allocator<lendaChannel*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel*,allocator<lendaChannel*> >::iterator* pobj;
         vector<lendaChannel*,allocator<lendaChannel*> >::iterator xobj = ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->end();
         pobj = new vector<lendaChannel*,allocator<lendaChannel*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel*,allocator<lendaChannel*> >::reverse_iterator* pobj;
         vector<lendaChannel*,allocator<lendaChannel*> >::reverse_iterator xobj = ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<lendaChannel*,allocator<lendaChannel*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel*,allocator<lendaChannel*> >::reverse_iterator* pobj;
         vector<lendaChannel*,allocator<lendaChannel*> >::reverse_iterator xobj = ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->rend();
         pobj = new vector<lendaChannel*,allocator<lendaChannel*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->resize((vector<lendaChannel*,allocator<lendaChannel*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->resize((vector<lendaChannel*,allocator<lendaChannel*> >::size_type) G__int(libp->para[0]), (lendaChannel*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel*,allocator<lendaChannel*> >::reference obj = ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->operator[]((vector<lendaChannel*,allocator<lendaChannel*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel*,allocator<lendaChannel*> >::const_reference obj = ((const vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->operator[]((vector<lendaChannel*,allocator<lendaChannel*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaChannel*,allocator<lendaChannel*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaChannel*,allocator<lendaChannel*> >[n];
     } else {
       p = new((void*) gvp) vector<lendaChannel*,allocator<lendaChannel*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaChannel*,allocator<lendaChannel*> >;
     } else {
       p = new((void*) gvp) vector<lendaChannel*,allocator<lendaChannel*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaChannel*,allocator<lendaChannel*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaChannel*,allocator<lendaChannel*> >((vector<lendaChannel*,allocator<lendaChannel*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(lendaChannel**) libp->para[1].ref : *(lendaChannel**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<lendaChannel*,allocator<lendaChannel*> >((vector<lendaChannel*,allocator<lendaChannel*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(lendaChannel**) libp->para[1].ref : *(lendaChannel**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaChannel*,allocator<lendaChannel*> >((vector<lendaChannel*,allocator<lendaChannel*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<lendaChannel*,allocator<lendaChannel*> >((vector<lendaChannel*,allocator<lendaChannel*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaChannel*,allocator<lendaChannel*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<lendaChannel*,allocator<lendaChannel*> >(*(vector<lendaChannel*,allocator<lendaChannel*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<lendaChannel*,allocator<lendaChannel*> >(*(vector<lendaChannel*,allocator<lendaChannel*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaChannel*,allocator<lendaChannel*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<lendaChannel*,allocator<lendaChannel*> >(*((vector<lendaChannel*,allocator<lendaChannel*> >::const_iterator*) G__int(libp->para[0])), *((vector<lendaChannel*,allocator<lendaChannel*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<lendaChannel*,allocator<lendaChannel*> >(*((vector<lendaChannel*,allocator<lendaChannel*> >::const_iterator*) G__int(libp->para[0])), *((vector<lendaChannel*,allocator<lendaChannel*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<lendaChannel*,allocator<lendaChannel*> >& obj = ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->operator=(*(vector<lendaChannel*,allocator<lendaChannel*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->reserve((vector<lendaChannel*,allocator<lendaChannel*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         lendaChannel*& obj = ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         lendaChannel*& obj = ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(lendaChannel**) libp->para[0].ref : *(lendaChannel**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->swap(*(vector<lendaChannel*,allocator<lendaChannel*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaChannel*,allocator<lendaChannel*> >::iterator* pobj;
         vector<lendaChannel*,allocator<lendaChannel*> >::iterator xobj = ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->insert(*((vector<lendaChannel*,allocator<lendaChannel*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(lendaChannel**) libp->para[1].ref : *(lendaChannel**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<lendaChannel*,allocator<lendaChannel*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->insert(*((vector<lendaChannel*,allocator<lendaChannel*> >::iterator*) G__int(libp->para[0])), *((vector<lendaChannel*,allocator<lendaChannel*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<lendaChannel*,allocator<lendaChannel*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->insert(*((vector<lendaChannel*,allocator<lendaChannel*> >::iterator*) G__int(libp->para[0])), (vector<lendaChannel*,allocator<lendaChannel*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(lendaChannel**) libp->para[2].ref : *(lendaChannel**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->erase(*((vector<lendaChannel*,allocator<lendaChannel*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->erase(*((vector<lendaChannel*,allocator<lendaChannel*> >::iterator*) G__int(libp->para[0])), *((vector<lendaChannel*,allocator<lendaChannel*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_616_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaChannel*,allocator<lendaChannel*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<lendaChannel*,allocator<lendaChannel*> > G__TvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR;
static int G__LendaDict_616_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<lendaChannel*,allocator<lendaChannel*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<lendaChannel*,allocator<lendaChannel*> >*) (soff+(sizeof(vector<lendaChannel*,allocator<lendaChannel*> >)*i)))->~G__TvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<lendaChannel*,allocator<lendaChannel*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<lendaChannel*,allocator<lendaChannel*> >*) (soff))->~G__TvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */
static int G__LendaDict_620_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->at((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference obj = ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->at((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->resize((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->resize((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]), *((vector<double,allocator<double> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->operator[]((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference obj = ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->operator[]((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >;
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]), *(vector<double,allocator<double> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]), *(vector<double,allocator<double> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >& obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->operator=(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->reserve((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >& obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >& obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->push_back(*(vector<double,allocator<double> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->swap(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->insert(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), *(vector<double,allocator<double> >*) libp->para[1].ref);
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->insert(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->insert(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), (vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[1])
, *(vector<double,allocator<double> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->erase(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->erase(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_620_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > G__TvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR;
static int G__LendaDict_620_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) (soff+(sizeof(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >)*i)))->~G__TvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) (soff))->~G__TvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > */
static int G__LendaDict_624_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reference obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->at((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_reference obj = ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->at((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->resize((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->resize((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]), *((vector<unsigned short,allocator<unsigned short> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reference obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_reference obj = ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >;
     } else {
       p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >(*(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >(*(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >& obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->operator=(*(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->reserve((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >& obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >& obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->push_back(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->swap(*(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])), *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref);
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])), (vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[1])
, *(vector<unsigned short,allocator<unsigned short> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_624_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > G__TvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR;
static int G__LendaDict_624_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) (soff+(sizeof(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >)*i)))->~G__TvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) (soff))->~G__TvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > > */
static int G__LendaDict_631_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >[n];
     } else {
       p = new((void*) gvp) map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >;
     } else {
       p = new((void*) gvp) map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >(*((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator*) G__int(libp->para[0])), *((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >(*((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator*) G__int(libp->para[0])), *((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >(*((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator*) G__int(libp->para[0])), *((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >(*((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator*) G__int(libp->para[0])), *((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >(*(map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >(*(map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >& obj = ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->operator=(*(map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator* pobj;
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator xobj = ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->begin();
         pobj = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator* pobj;
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator xobj = ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->end();
         pobj = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator* pobj;
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator xobj = ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->rbegin();
         pobj = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator* pobj;
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator xobj = ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->rend();
         pobj = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->operator[](*(vector<int,allocator<int> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator,bool>* pobj;
         pair<map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator,bool> xobj = ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->insert(*(map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator* pobj;
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator xobj = ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->insert(*((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator*) G__int(libp->para[0])), *(map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::value_type*) libp->para[1].ref);
         pobj = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->insert(*((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator*) G__int(libp->para[0])), *((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->insert(*((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator*) G__int(libp->para[0])), *((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->erase(*((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->erase(*(vector<int,allocator<int> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->erase(*((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator*) G__int(libp->para[0])), *((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->swap(*(map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator* pobj;
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator xobj = ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->find(*(vector<int,allocator<int> >*) libp->para[0].ref);
         pobj = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->count(*(vector<int,allocator<int> >*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator* pobj;
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator xobj = ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->lower_bound(*(vector<int,allocator<int> >*) libp->para[0].ref);
         pobj = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_631_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator* pobj;
         map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator xobj = ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) G__getstructoffset())->upper_bound(*(vector<int,allocator<int> >*) libp->para[0].ref);
         pobj = new map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > > G__TmaplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR;
static int G__LendaDict_631_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) (soff+(sizeof(map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >)*i)))->~G__TmaplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*) (soff))->~G__TmaplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<lendaBar*,allocator<lendaBar*> > */
static int G__LendaDict_637_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar*,allocator<lendaBar*> >::reference obj = ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->at((vector<lendaBar*,allocator<lendaBar*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar*,allocator<lendaBar*> >::const_reference obj = ((const vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->at((vector<lendaBar*,allocator<lendaBar*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar*,allocator<lendaBar*> >::iterator* pobj;
         vector<lendaBar*,allocator<lendaBar*> >::iterator xobj = ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->begin();
         pobj = new vector<lendaBar*,allocator<lendaBar*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar*,allocator<lendaBar*> >::iterator* pobj;
         vector<lendaBar*,allocator<lendaBar*> >::iterator xobj = ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->end();
         pobj = new vector<lendaBar*,allocator<lendaBar*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar*,allocator<lendaBar*> >::reverse_iterator* pobj;
         vector<lendaBar*,allocator<lendaBar*> >::reverse_iterator xobj = ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<lendaBar*,allocator<lendaBar*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar*,allocator<lendaBar*> >::reverse_iterator* pobj;
         vector<lendaBar*,allocator<lendaBar*> >::reverse_iterator xobj = ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->rend();
         pobj = new vector<lendaBar*,allocator<lendaBar*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->resize((vector<lendaBar*,allocator<lendaBar*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->resize((vector<lendaBar*,allocator<lendaBar*> >::size_type) G__int(libp->para[0]), (lendaBar*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar*,allocator<lendaBar*> >::reference obj = ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->operator[]((vector<lendaBar*,allocator<lendaBar*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar*,allocator<lendaBar*> >::const_reference obj = ((const vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->operator[]((vector<lendaBar*,allocator<lendaBar*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaBar*,allocator<lendaBar*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaBar*,allocator<lendaBar*> >[n];
     } else {
       p = new((void*) gvp) vector<lendaBar*,allocator<lendaBar*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaBar*,allocator<lendaBar*> >;
     } else {
       p = new((void*) gvp) vector<lendaBar*,allocator<lendaBar*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaBar*,allocator<lendaBar*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaBar*,allocator<lendaBar*> >((vector<lendaBar*,allocator<lendaBar*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(lendaBar**) libp->para[1].ref : *(lendaBar**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<lendaBar*,allocator<lendaBar*> >((vector<lendaBar*,allocator<lendaBar*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(lendaBar**) libp->para[1].ref : *(lendaBar**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaBar*,allocator<lendaBar*> >((vector<lendaBar*,allocator<lendaBar*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<lendaBar*,allocator<lendaBar*> >((vector<lendaBar*,allocator<lendaBar*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaBar*,allocator<lendaBar*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<lendaBar*,allocator<lendaBar*> >(*(vector<lendaBar*,allocator<lendaBar*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<lendaBar*,allocator<lendaBar*> >(*(vector<lendaBar*,allocator<lendaBar*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaBar*,allocator<lendaBar*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<lendaBar*,allocator<lendaBar*> >(*((vector<lendaBar*,allocator<lendaBar*> >::const_iterator*) G__int(libp->para[0])), *((vector<lendaBar*,allocator<lendaBar*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<lendaBar*,allocator<lendaBar*> >(*((vector<lendaBar*,allocator<lendaBar*> >::const_iterator*) G__int(libp->para[0])), *((vector<lendaBar*,allocator<lendaBar*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<lendaBar*,allocator<lendaBar*> >& obj = ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->operator=(*(vector<lendaBar*,allocator<lendaBar*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->reserve((vector<lendaBar*,allocator<lendaBar*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         lendaBar*& obj = ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         lendaBar*& obj = ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(lendaBar**) libp->para[0].ref : *(lendaBar**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->swap(*(vector<lendaBar*,allocator<lendaBar*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaBar*,allocator<lendaBar*> >::iterator* pobj;
         vector<lendaBar*,allocator<lendaBar*> >::iterator xobj = ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->insert(*((vector<lendaBar*,allocator<lendaBar*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(lendaBar**) libp->para[1].ref : *(lendaBar**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<lendaBar*,allocator<lendaBar*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->insert(*((vector<lendaBar*,allocator<lendaBar*> >::iterator*) G__int(libp->para[0])), *((vector<lendaBar*,allocator<lendaBar*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<lendaBar*,allocator<lendaBar*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->insert(*((vector<lendaBar*,allocator<lendaBar*> >::iterator*) G__int(libp->para[0])), (vector<lendaBar*,allocator<lendaBar*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(lendaBar**) libp->para[2].ref : *(lendaBar**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->erase(*((vector<lendaBar*,allocator<lendaBar*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->erase(*((vector<lendaBar*,allocator<lendaBar*> >::iterator*) G__int(libp->para[0])), *((vector<lendaBar*,allocator<lendaBar*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_637_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaBar*,allocator<lendaBar*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<lendaBar*,allocator<lendaBar*> > G__TvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR;
static int G__LendaDict_637_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<lendaBar*,allocator<lendaBar*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<lendaBar*,allocator<lendaBar*> >*) (soff+(sizeof(vector<lendaBar*,allocator<lendaBar*> >)*i)))->~G__TvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<lendaBar*,allocator<lendaBar*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<lendaBar*,allocator<lendaBar*> >*) (soff))->~G__TvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<lendaSettings*,allocator<lendaSettings*> > */
static int G__LendaDict_641_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaSettings*,allocator<lendaSettings*> >::reference obj = ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->at((vector<lendaSettings*,allocator<lendaSettings*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaSettings*,allocator<lendaSettings*> >::const_reference obj = ((const vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->at((vector<lendaSettings*,allocator<lendaSettings*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaSettings*,allocator<lendaSettings*> >::iterator* pobj;
         vector<lendaSettings*,allocator<lendaSettings*> >::iterator xobj = ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->begin();
         pobj = new vector<lendaSettings*,allocator<lendaSettings*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaSettings*,allocator<lendaSettings*> >::iterator* pobj;
         vector<lendaSettings*,allocator<lendaSettings*> >::iterator xobj = ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->end();
         pobj = new vector<lendaSettings*,allocator<lendaSettings*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaSettings*,allocator<lendaSettings*> >::reverse_iterator* pobj;
         vector<lendaSettings*,allocator<lendaSettings*> >::reverse_iterator xobj = ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<lendaSettings*,allocator<lendaSettings*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaSettings*,allocator<lendaSettings*> >::reverse_iterator* pobj;
         vector<lendaSettings*,allocator<lendaSettings*> >::reverse_iterator xobj = ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->rend();
         pobj = new vector<lendaSettings*,allocator<lendaSettings*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->resize((vector<lendaSettings*,allocator<lendaSettings*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->resize((vector<lendaSettings*,allocator<lendaSettings*> >::size_type) G__int(libp->para[0]), (lendaSettings*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaSettings*,allocator<lendaSettings*> >::reference obj = ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->operator[]((vector<lendaSettings*,allocator<lendaSettings*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaSettings*,allocator<lendaSettings*> >::const_reference obj = ((const vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->operator[]((vector<lendaSettings*,allocator<lendaSettings*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaSettings*,allocator<lendaSettings*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaSettings*,allocator<lendaSettings*> >[n];
     } else {
       p = new((void*) gvp) vector<lendaSettings*,allocator<lendaSettings*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaSettings*,allocator<lendaSettings*> >;
     } else {
       p = new((void*) gvp) vector<lendaSettings*,allocator<lendaSettings*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaSettings*,allocator<lendaSettings*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaSettings*,allocator<lendaSettings*> >((vector<lendaSettings*,allocator<lendaSettings*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(lendaSettings**) libp->para[1].ref : *(lendaSettings**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<lendaSettings*,allocator<lendaSettings*> >((vector<lendaSettings*,allocator<lendaSettings*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(lendaSettings**) libp->para[1].ref : *(lendaSettings**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<lendaSettings*,allocator<lendaSettings*> >((vector<lendaSettings*,allocator<lendaSettings*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<lendaSettings*,allocator<lendaSettings*> >((vector<lendaSettings*,allocator<lendaSettings*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaSettings*,allocator<lendaSettings*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<lendaSettings*,allocator<lendaSettings*> >(*(vector<lendaSettings*,allocator<lendaSettings*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<lendaSettings*,allocator<lendaSettings*> >(*(vector<lendaSettings*,allocator<lendaSettings*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<lendaSettings*,allocator<lendaSettings*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<lendaSettings*,allocator<lendaSettings*> >(*((vector<lendaSettings*,allocator<lendaSettings*> >::const_iterator*) G__int(libp->para[0])), *((vector<lendaSettings*,allocator<lendaSettings*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<lendaSettings*,allocator<lendaSettings*> >(*((vector<lendaSettings*,allocator<lendaSettings*> >::const_iterator*) G__int(libp->para[0])), *((vector<lendaSettings*,allocator<lendaSettings*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<lendaSettings*,allocator<lendaSettings*> >& obj = ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->operator=(*(vector<lendaSettings*,allocator<lendaSettings*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->reserve((vector<lendaSettings*,allocator<lendaSettings*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         lendaSettings*& obj = ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         lendaSettings*& obj = ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(lendaSettings**) libp->para[0].ref : *(lendaSettings**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->swap(*(vector<lendaSettings*,allocator<lendaSettings*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<lendaSettings*,allocator<lendaSettings*> >::iterator* pobj;
         vector<lendaSettings*,allocator<lendaSettings*> >::iterator xobj = ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->insert(*((vector<lendaSettings*,allocator<lendaSettings*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(lendaSettings**) libp->para[1].ref : *(lendaSettings**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<lendaSettings*,allocator<lendaSettings*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->insert(*((vector<lendaSettings*,allocator<lendaSettings*> >::iterator*) G__int(libp->para[0])), *((vector<lendaSettings*,allocator<lendaSettings*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<lendaSettings*,allocator<lendaSettings*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->insert(*((vector<lendaSettings*,allocator<lendaSettings*> >::iterator*) G__int(libp->para[0])), (vector<lendaSettings*,allocator<lendaSettings*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(lendaSettings**) libp->para[2].ref : *(lendaSettings**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->erase(*((vector<lendaSettings*,allocator<lendaSettings*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->erase(*((vector<lendaSettings*,allocator<lendaSettings*> >::iterator*) G__int(libp->para[0])), *((vector<lendaSettings*,allocator<lendaSettings*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LendaDict_641_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<lendaSettings*,allocator<lendaSettings*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<lendaSettings*,allocator<lendaSettings*> > G__TvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR;
static int G__LendaDict_641_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<lendaSettings*,allocator<lendaSettings*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<lendaSettings*,allocator<lendaSettings*> >*) (soff+(sizeof(vector<lendaSettings*,allocator<lendaSettings*> >)*i)))->~G__TvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<lendaSettings*,allocator<lendaSettings*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<lendaSettings*,allocator<lendaSettings*> >*) (soff))->~G__TvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ddasChannel */

/* ddasEvent */

/* vector<ddasChannel*,allocator<ddasChannel*> > */

/* lendaChannel */

/* lendaBar */

/* vector<lendaChannel,allocator<lendaChannel> > */

/* lendaEvent */

/* vector<lendaBar,allocator<lendaBar> > */

/* lendaFilter */

/* lendaSettings */

/* mapInfo */

/* lendaPacker */

/* vector<lendaChannel*,allocator<lendaChannel*> > */

/* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */

/* vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > */

/* map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > > */

/* vector<lendaBar*,allocator<lendaBar*> > */

/* vector<lendaSettings*,allocator<lendaSettings*> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncLendaDict {
 public:
  G__Sizep2memfuncLendaDict(): p(&G__Sizep2memfuncLendaDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncLendaDict::*p)();
};

size_t G__get_sizep2memfuncLendaDict()
{
  G__Sizep2memfuncLendaDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceLendaDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LendaDictLN_ddasChannel))) {
     ddasChannel *G__Lderived;
     G__Lderived=(ddasChannel*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LendaDictLN_ddasChannel),G__get_linked_tagnum(&G__LendaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LendaDictLN_ddasEvent))) {
     ddasEvent *G__Lderived;
     G__Lderived=(ddasEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LendaDictLN_ddasEvent),G__get_linked_tagnum(&G__LendaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LendaDictLN_lendaChannel))) {
     lendaChannel *G__Lderived;
     G__Lderived=(lendaChannel*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaChannel),G__get_linked_tagnum(&G__LendaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LendaDictLN_lendaBar))) {
     lendaBar *G__Lderived;
     G__Lderived=(lendaBar*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaBar),G__get_linked_tagnum(&G__LendaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LendaDictLN_lendaEvent))) {
     lendaEvent *G__Lderived;
     G__Lderived=(lendaEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaEvent),G__get_linked_tagnum(&G__LendaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LendaDictLN_lendaFilter))) {
     lendaFilter *G__Lderived;
     G__Lderived=(lendaFilter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaFilter),G__get_linked_tagnum(&G__LendaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LendaDictLN_lendaSettings))) {
     lendaSettings *G__Lderived;
     G__Lderived=(lendaSettings*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaSettings),G__get_linked_tagnum(&G__LendaDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaSettings),G__get_linked_tagnum(&G__LendaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableLendaDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("uint32_t",104,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("uint64_t",107,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__LendaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__LendaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__LendaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__LendaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__LendaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,std::pair<double,double> >",117,G__get_linked_tagnum(&G__LendaDictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,pair<double,double> >",117,G__get_linked_tagnum(&G__LendaDictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,pair<double,double>,less<unsigned int> >",117,G__get_linked_tagnum(&G__LendaDictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ddasChannel*>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__LendaDictLN_ddasChannel),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LendaDictLN_ddasChannel),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LendaDictLN_ddasChannel),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__LendaDictLN_ddasChannel),1,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__LendaDictLN_ddasChannel),257,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<lendaChannel>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LendaDictLN_lendaChannel),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LendaDictLN_lendaChannel),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LendaDictLN_lendaChannel),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__LendaDictLN_lendaChannel),1,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__LendaDictLN_lendaChannel),257,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<lendaBar>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LendaDictLN_lendaBar),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LendaDictLN_lendaBar),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LendaDictLN_lendaBar),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__LendaDictLN_lendaBar),1,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__LendaDictLN_lendaBar),257,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Int_t>",117,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool,less<string> >",117,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,string>",117,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string>",117,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string,less<int> >",117,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,Int_t>",117,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,mapInfo>",117,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOmapInfocOlesslEintgRcOallocatorlEpairlEconstsPintcOmapInfogRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,mapInfo>",117,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOmapInfocOlesslEintgRcOallocatorlEpairlEconstsPintcOmapInfogRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,mapInfo,less<int> >",117,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOmapInfocOlesslEintgRcOallocatorlEpairlEconstsPintcOmapInfogRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,lendaBar>",117,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOlendaBarcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlendaBargRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,lendaBar,less<string> >",117,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOlendaBarcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlendaBargRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<Int_t,refTimeContainer>",117,G__get_linked_tagnum(&G__LendaDictLN_multimaplEintcOrefTimeContainercOlesslEintgRcOallocatorlEpairlEconstsPintcOrefTimeContainergRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<int,refTimeContainer>",117,G__get_linked_tagnum(&G__LendaDictLN_multimaplEintcOrefTimeContainercOlesslEintgRcOallocatorlEpairlEconstsPintcOrefTimeContainergRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<int,refTimeContainer,less<int> >",117,G__get_linked_tagnum(&G__LendaDictLN_multimaplEintcOrefTimeContainercOlesslEintgRcOallocatorlEpairlEconstsPintcOrefTimeContainergRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<lendaChannel*>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__LendaDictLN_lendaChannel),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LendaDictLN_lendaChannel),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LendaDictLN_lendaChannel),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__LendaDictLN_lendaChannel),1,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__LendaDictLN_lendaChannel),257,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Double_t> >",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),1,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),257,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<UShort_t> >",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),1,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),257,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned short,allocator<unsigned short> > >",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<vector<Int_t>,Double_t>",117,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",100,-1,0,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LendaDictLN_pairlEvectorlEintcOallocatorlEintgRsPgRcOdoublegR),0,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__LendaDictLN_lesslEvectorlEintcOallocatorlEintgRsPgRsPgR),0,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__LendaDictLN_allocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgR),0,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<vector<int,allocator<int> >,double>",117,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > > >",117,G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<lendaBar*>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__LendaDictLN_lendaBar),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LendaDictLN_lendaBar),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LendaDictLN_lendaBar),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__LendaDictLN_lendaBar),1,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__LendaDictLN_lendaBar),257,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<lendaSettings*>",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__LendaDictLN_lendaSettings),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LendaDictLN_lendaSettings),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LendaDictLN_lendaSettings),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__LendaDictLN_lendaSettings),1,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__LendaDictLN_lendaSettings),257,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ddasChannel */
static void G__setup_memvarddasChannel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_ddasChannel));
   { ddasChannel *p; p=(ddasChannel*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"time=",0,"/< Assembled time including cfd from module");
   G__memvar_setup((void*)((long)(&p->cfd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"cfd=",0,"/< Cfd time only from module");
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"energy=",0,"/< Energy of event from energy filter");
   G__memvar_setup((void*)((long)(&p->timehigh)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"timehigh=",0,"/< portion of timestamp");
   G__memvar_setup((void*)((long)(&p->timelow)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"timelow=",0,"/< portion of timestamp");
   G__memvar_setup((void*)((long)(&p->timecfd)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"timecfd=",0,"/< portion of timestamp");
   G__memvar_setup((void*)((long)(&p->channelnum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"channelnum=",0,"/< obsolete");
   G__memvar_setup((void*)((long)(&p->finishcode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"finishcode=",0,"/< indicate whether event is ");
   G__memvar_setup((void*)((long)(&p->channellength)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"channellength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->channelheaderlength)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"channelheaderlength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->overflowcode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"overflowcode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chanid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"chanid=",0,"/<Channel in module");
   G__memvar_setup((void*)((long)(&p->slotid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"slotid=",0,"/<Slot in crate");
   G__memvar_setup((void*)((long)(&p->crateid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"crateid=",0,"/<Crate ID");
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cfdtrigsourcebit)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"cfdtrigsourcebit=",0,"/< cfd trigger source bit, 0- even, 1 - odd");
   G__memvar_setup((void*)((long)(&p->tracelength)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tracelength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eclocklow)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"eclocklow=",0,"/< portion of ex timestamp");
   G__memvar_setup((void*)((long)(&p->eclockhigh)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"eclockhigh=",0,"/< portion of ex timestamp");
   G__memvar_setup((void*)((long)(&p->eclockhigher)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"eclockhigher=",0,"/< portion of ex timestamp");
   G__memvar_setup((void*)((long)(&p->eclock)-(long)(p)),107,0,0,-1,G__defined_typename("uint64_t"),-1,1,"eclock=",0,"/< external time");
   G__memvar_setup((void*)((long)(&p->energySums)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,1,"energySums=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->qdcSums)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,1,"qdcSums=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trace)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,1,"trace=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LendaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ddasEvent */
static void G__setup_memvarddasEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_ddasEvent));
   { ddasEvent *p; p=(ddasEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR),G__defined_typename("vector<ddasChannel*>"),-1,4,"cdata=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LendaDictLN_ddasChannel),-1,-1,4,"tempdchan=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("uint8_t"),-1,4,"buffer08[4096]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,4,"buffer32[4096]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LendaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<ddasChannel*,allocator<ddasChannel*> > */
static void G__setup_memvarvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   { vector<ddasChannel*,allocator<ddasChannel*> > *p; p=(vector<ddasChannel*,allocator<ddasChannel*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* lendaChannel */
static void G__setup_memvarlendaChannel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaChannel));
   { lendaChannel *p; p=(lendaChannel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"rChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"rSlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"rGlobalID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"rRefGlobalID=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"rOverflow=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"rNumZeroCrossings=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rCorrectedEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rInternalEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"rFilterHeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rCubicFitTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rCorrectedTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rCorrectedCubicFitTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rCorrectedSoftTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rCorrectedCubicTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"rTimeLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"rTimeHigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"rEclockLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"rEclockHigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"rEclockHigher=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rEclock=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rCoarseTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rSoftwareCFD=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rCubicCFD=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rCubicFitCFD=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rInternalCFD=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"rCFDTrigBit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rShortGate=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rLongGate=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"rJentry=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"rTrace=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"rFilter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"rCFD=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rCFDResidual=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_string),-1,-1,4,"rChannelName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_string),-1,-1,4,"rReferenceChannelName=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rRefTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rOtherTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"rEnergies=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"rSoftwareTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"rCubicTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"rPulseHeights=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"rSoftwareReferenceTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"rCubicReferenceTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"rUnderShoots=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LendaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* lendaBar */
static void G__setup_memvarlendaBar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaBar));
   { lendaBar *p; p=(lendaBar*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_string),-1,-1,1,"Name=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BarId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"BarId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BarAngle)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"BarAngle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NumTops)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NumTops=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NumBottoms)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NumBottoms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BarMultiplicity)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"BarMultiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SimpleEventBit)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"SimpleEventBit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tops)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR),G__defined_typename("vector<lendaChannel>"),-1,1,"Tops=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Bottoms)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR),G__defined_typename("vector<lendaChannel>"),-1,1,"Bottoms=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Dt=",0,"Top time - Bottom time */");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CubicDt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"SyncDt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CubicSyncDt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"COG=",0,"ET - EB/(ET+EB) */");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"AvgEnergy=",0,"Sqrt(ET*EB) */");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"AvgPulseHeight=",0,"Sqrt(PH_T*PH_B) */");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"AvgT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CorrectedAvgT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CorrectedCOG=",0,"Gain corrected COG */");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CorrectedDt=",0,"Time Offset Corrected Dt");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CorrectedAvgEnergy=",0,"Gain Corrected AvgE");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"TopTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"BottomTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CubicTopTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CubicBottomTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CorrectedCubicTopTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CorrectedCubicBottomTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CorrectedCubicFitTopTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CorrectedCubicFitBottomTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CorrectedSoftTopTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CorrectedSoftBottomTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CorrectedTopTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CorrectedBottomTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LendaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<lendaChannel,allocator<lendaChannel> > */
static void G__setup_memvarvectorlElendaChannelcOallocatorlElendaChannelgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   { vector<lendaChannel,allocator<lendaChannel> > *p; p=(vector<lendaChannel,allocator<lendaChannel> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* lendaEvent */
static void G__setup_memvarlendaEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaEvent));
   { lendaEvent *p; p=(lendaEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->bars)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR),G__defined_typename("vector<lendaBar>"),-1,1,"bars=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UnMappedChannels)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR),G__defined_typename("vector<lendaChannel>"),-1,1,"UnMappedChannels=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->refScint)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR),G__defined_typename("vector<lendaChannel>"),-1,1,"refScint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NumOfChannelsInEvent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NumOfChannelsInEvent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->N)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"N=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numBars)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"numBars=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NumUnMappedChannels)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NumUnMappedChannels=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numObjectScintillators)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"numObjectScintillators=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ScintIntLow)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ScintIntLow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ScintIntHigh)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ScintIntHigh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ScintIntAll)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ScintIntAll=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->etime)-(long)(p)),107,0,0,-1,G__defined_typename("uint64_t"),-1,1,"etime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->internaltime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"internaltime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LendaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<lendaBar,allocator<lendaBar> > */
static void G__setup_memvarvectorlElendaBarcOallocatorlElendaBargRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   { vector<lendaBar,allocator<lendaBar> > *p; p=(vector<lendaBar,allocator<lendaBar> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* lendaFilter */
static void G__setup_memvarlendaFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaFilter));
   { lendaFilter *p; p=(lendaFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->numOfBadFits)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"numOfBadFits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LendaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* lendaSettings */
static void G__setup_memvarlendaSettings(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaSettings));
   { lendaSettings *p; p=(lendaSettings*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<string,Double_t>"),-1,4,"TheTimingOffsets=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<string,Double_t>"),-1,4,"TheEnergySlopes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<string,Double_t>"),-1,4,"TheEnergyIntercepts=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,Int_t>"),-1,4,"TheFLs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,Int_t>"),-1,4,"TheFGs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,Int_t>"),-1,4,"Theds=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,Int_t>"),-1,4,"Thews=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),G__defined_typename("map<string,bool>"),-1,4,"TheDontTraceAnalyzeFlags=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),G__defined_typename("map<Int_t,string>"),-1,4,"GlobalID2FullName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<Int_t,Int_t>"),-1,4,"GlobalID2RefGlobalID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),G__defined_typename("map<Int_t,string>"),-1,4,"GlobalID2RefName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,Int_t>"),-1,4,"Name2GlobalID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,Int_t>"),-1,4,"BarIds=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),G__defined_typename("map<Int_t,string>"),-1,4,"BarId2Name=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LendaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* mapInfo */
static void G__setup_memvarmapInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_mapInfo));
   { mapInfo *p; p=(mapInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->EnergySlope)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"EnergySlope=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EnergyIntercept)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"EnergyIntercept=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TOFOffset)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"TOFOffset=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FullName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_string),-1,-1,1,"FullName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BarName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_string),-1,-1,1,"BarName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ReferenceName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_string),-1,-1,1,"ReferenceName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BarAngle)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"BarAngle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HasCorrections)-(long)(p)),103,0,0,-1,-1,-1,1,"HasCorrections=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsAReferenceChannel)-(long)(p)),103,0,0,-1,-1,-1,1,"IsAReferenceChannel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GlobalID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"GlobalID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ReferenceGlobalID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ReferenceGlobalID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FL)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"FL=",0,"Timing filter Rise length */");
   G__memvar_setup((void*)((long)(&p->FG)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"FG=",0,"Timing filter Gap Length */");
   G__memvar_setup((void*)((long)(&p->d)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"d=",0,"Timing filter CFD delay */");
   G__memvar_setup((void*)((long)(&p->w)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"w=",0,"Timing filter CFD scale factor */");
   G__memvar_setup((void*)((long)(&p->DontTraceAnalyze)-(long)(p)),103,0,0,-1,-1,-1,1,"DontTraceAnalyze=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* lendaPacker */
static void G__setup_memvarlendaPacker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaPacker));
   { lendaPacker *p; p=(lendaPacker*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->theSettings)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__LendaDictLN_lendaSettings),-1,-1,1,"theSettings=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->theFilter)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_lendaFilter),-1,-1,1,"theFilter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->already_called)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"already_called=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mapFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_string),-1,-1,1,"mapFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->correctionsFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_string),-1,-1,1,"correctionsFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->saveTraces)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"saveTraces=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lg)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"lg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sg)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"sg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lg2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"lg2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sg2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"sg2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->traceDelay)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"traceDelay=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jentry)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"jentry=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thisChannelsNumZeroCrossings)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"thisChannelsNumZeroCrossings=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thisChannelsEnergies)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"thisChannelsEnergies=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thisChannelsPulseHeights)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"thisChannelsPulseHeights=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thisChannelsSoftwareCFDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"thisChannelsSoftwareCFDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thisChannelsCubicCFDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"thisChannelsCubicCFDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thisChannelsPeakSpots)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"thisChannelsPeakSpots=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thisChannelsUnderShoots)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"thisChannelsUnderShoots=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thisEventsFF)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"thisEventsFF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thisEventsCFD)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"thisEventsCFD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GlobalIDToFullLocal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),G__defined_typename("map<Int_t,string>"),-1,1,"GlobalIDToFullLocal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FullLocalToGlobalID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,Int_t>"),-1,1,"FullLocalToGlobalID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GlobalIDToBar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),G__defined_typename("map<Int_t,string>"),-1,1,"GlobalIDToBar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BarNameToUniqueBarNumber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,Int_t>"),-1,1,"BarNameToUniqueBarNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BarNameToBarAngle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<string,Double_t>"),-1,1,"BarNameToBarAngle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GlobalIDToMapInfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_maplEintcOmapInfocOlesslEintgRcOallocatorlEpairlEconstsPintcOmapInfogRsPgRsPgR),G__defined_typename("map<Int_t,mapInfo>"),-1,1,"GlobalIDToMapInfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thisEventsFilterHeight)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"thisEventsFilterHeight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->longGate)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"longGate=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->shortGate)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"shortGate=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cubicFitCFD)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"cubicFitCFD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->start)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"start=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->thisChannelsCFDResidual)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"thisChannelsCFDResidual=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->referenceChannelPattern)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__LendaDictLN_string),-1,-1,1,"referenceChannelPattern=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<lendaChannel*,allocator<lendaChannel*> > */
static void G__setup_memvarvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   { vector<lendaChannel*,allocator<lendaChannel*> > *p; p=(vector<lendaChannel*,allocator<lendaChannel*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */
static void G__setup_memvarvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   { vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > *p; p=(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > */
static void G__setup_memvarvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   { vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > *p; p=(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > > */
static void G__setup_memvarmaplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   { map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > > *p; p=(map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<lendaBar*,allocator<lendaBar*> > */
static void G__setup_memvarvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   { vector<lendaBar*,allocator<lendaBar*> > *p; p=(vector<lendaBar*,allocator<lendaBar*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<lendaSettings*,allocator<lendaSettings*> > */
static void G__setup_memvarvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   { vector<lendaSettings*,allocator<lendaSettings*> > *p; p=(vector<lendaSettings*,allocator<lendaSettings*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarLendaDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncddasChannel(void) {
   /* ddasChannel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_ddasChannel));
   G__memfunc_setup("ddasChannel",1109,G__LendaDict_517_0_1, 105, G__get_linked_tagnum(&G__LendaDictLN_ddasChannel), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ddasChannel",1109,G__LendaDict_517_0_2, 105, G__get_linked_tagnum(&G__LendaDictLN_ddasChannel), -1, 0, 1, 1, 1, 0, "u 'ddasChannel' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LendaDict_517_0_3, 117, G__get_linked_tagnum(&G__LendaDictLN_ddasChannel), -1, 1, 1, 1, 1, 0, "u 'ddasChannel' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__LendaDict_517_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__LendaDict_517_0_5, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeHigh",1071,G__LendaDict_517_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeLow",993,G__LendaDict_517_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCFDTime",892,G__LendaDict_517_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__LendaDict_517_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCFD",493,G__LendaDict_517_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergySums",1330,G__LendaDict_517_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelNum",1289,G__LendaDict_517_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFinishCode",1276,G__LendaDict_517_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelLength",1595,G__LendaDict_517_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelLengthHeader",2180,G__LendaDict_517_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOverflowCode",1519,G__LendaDict_517_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlotID",847,G__LendaDict_517_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrateID",924,G__LendaDict_517_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelID",1126,G__LendaDict_517_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__LendaDict_517_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCFDTriggerSourceBit",2129,G__LendaDict_517_0_21, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEclockLow",1199,G__LendaDict_517_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEclockHigh",1277,G__LendaDict_517_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEclockHigher",1492,G__LendaDict_517_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEclock",893,G__LendaDict_517_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrace",783,G__LendaDict_517_0_26, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<UShort_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannelID",1138,G__LendaDict_517_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlotID",859,G__LendaDict_517_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCrateID",936,G__LendaDict_517_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannelHeaderLength",2192,G__LendaDict_517_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannelLength",1607,G__LendaDict_517_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOverflowCode",1531,G__LendaDict_517_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFinishCode",1288,G__LendaDict_517_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__LendaDict_517_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCFDTriggerSourceBit",2141,G__LendaDict_517_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeLow",1005,G__LendaDict_517_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeHigh",1083,G__LendaDict_517_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeCFD",904,G__LendaDict_517_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__LendaDict_517_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__LendaDict_517_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTraceLength",1405,G__LendaDict_517_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergySums",1342,G__LendaDict_517_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQDCSums",940,G__LendaDict_517_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTraceValues",1419,G__LendaDict_517_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnpackChannelData",1685,G__LendaDict_517_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "H - 'uint32_t' 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LendaDict_517_0_46, 85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ddasChannel::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LendaDict_517_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ddasChannel::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LendaDict_517_0_48, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ddasChannel::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LendaDict_517_0_49, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ddasChannel::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LendaDict_517_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LendaDict_517_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ddasChannel::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LendaDict_517_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ddasChannel::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LendaDict_517_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ddasChannel::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LendaDict_517_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ddasChannel::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ddasChannel", 1235, G__LendaDict_517_0_58, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncddasEvent(void) {
   /* ddasEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_ddasEvent));
   G__memfunc_setup("ddasEvent",926,G__LendaDict_518_0_1, 105, G__get_linked_tagnum(&G__LendaDictLN_ddasEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ddasEvent",926,G__LendaDict_518_0_2, 105, G__get_linked_tagnum(&G__LendaDictLN_ddasEvent), -1, 0, 1, 1, 1, 0, "u 'ddasEvent' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LendaDict_518_0_3, 117, G__get_linked_tagnum(&G__LendaDictLN_ddasEvent), -1, 1, 1, 1, 1, 0, "u 'ddasEvent' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getData",698,G__LendaDict_518_0_4, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR), G__defined_typename("vector<ddasChannel*>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addChannelData",1372,G__LendaDict_518_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ddasChannel' - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNEvents",1027,G__LendaDict_518_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstTime",1239,G__LendaDict_518_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLastTime",1123,G__LendaDict_518_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeWidth",1231,G__LendaDict_518_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__LendaDict_518_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEvent",834,G__LendaDict_518_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"E - - 0 - inf i - 'Int_t' 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LendaDict_518_0_12, 85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ddasEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LendaDict_518_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ddasEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LendaDict_518_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ddasEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LendaDict_518_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ddasEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LendaDict_518_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LendaDict_518_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ddasEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LendaDict_518_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ddasEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LendaDict_518_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ddasEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LendaDict_518_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ddasEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ddasEvent", 1052, G__LendaDict_518_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR(void) {
   /* vector<ddasChannel*,allocator<ddasChannel*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR));
   G__memfunc_setup("at",213,G__LendaDict_520_0_1, 85, G__get_linked_tagnum(&G__LendaDictLN_ddasChannel), G__defined_typename("vector<ddasChannel*,allocator<ddasChannel*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<ddasChannel*,allocator<ddasChannel*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LendaDict_520_0_2, 85, G__get_linked_tagnum(&G__LendaDictLN_ddasChannel), G__defined_typename("vector<ddasChannel*,allocator<ddasChannel*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<ddasChannel*,allocator<ddasChannel*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LendaDict_520_0_3, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LendaDict_520_0_4, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LendaDict_520_0_5, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<ddasChannel*,allocator<ddasChannel*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LendaDict_520_0_6, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<ddasChannel*,allocator<ddasChannel*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LendaDict_520_0_7, 107, -1, G__defined_typename("vector<ddasChannel*,allocator<ddasChannel*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LendaDict_520_0_8, 107, -1, G__defined_typename("vector<ddasChannel*,allocator<ddasChannel*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_520_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<ddasChannel*,allocator<ddasChannel*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_520_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<ddasChannel*,allocator<ddasChannel*> >::size_type' 0 - sz U 'ddasChannel' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LendaDict_520_0_11, 107, -1, G__defined_typename("vector<ddasChannel*,allocator<ddasChannel*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LendaDict_520_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_520_0_13, 85, G__get_linked_tagnum(&G__LendaDictLN_ddasChannel), G__defined_typename("vector<ddasChannel*,allocator<ddasChannel*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<ddasChannel*,allocator<ddasChannel*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_520_0_14, 85, G__get_linked_tagnum(&G__LendaDictLN_ddasChannel), G__defined_typename("vector<ddasChannel*,allocator<ddasChannel*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<ddasChannel*,allocator<ddasChannel*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<ddasChannel*,allocator<ddasChannel*> >",4242,G__LendaDict_520_0_15, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<ddasChannel*,allocator<ddasChannel*> >",4242,G__LendaDict_520_0_16, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<ddasChannel*,allocator<ddasChannel*> >::size_type' 0 - n U 'ddasChannel' - 41 '(ddasChannel*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<ddasChannel*,allocator<ddasChannel*> >",4242,G__LendaDict_520_0_17, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<ddasChannel*,allocator<ddasChannel*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<ddasChannel*,allocator<ddasChannel*> >",4242,G__LendaDict_520_0_18, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<ddasChannel*,allocator<ddasChannel*> >::iterator' 'vector<ddasChannel*,allocator<ddasChannel*> >::const_iterator' 10 - first u 'vector<ddasChannel*,allocator<ddasChannel*> >::iterator' 'vector<ddasChannel*,allocator<ddasChannel*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LendaDict_520_0_19, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<ddasChannel*,allocator<ddasChannel*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LendaDict_520_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<ddasChannel*,allocator<ddasChannel*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LendaDict_520_0_21, 85, G__get_linked_tagnum(&G__LendaDictLN_ddasChannel), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LendaDict_520_0_22, 85, G__get_linked_tagnum(&G__LendaDictLN_ddasChannel), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LendaDict_520_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ddasChannel' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LendaDict_520_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<ddasChannel*,allocator<ddasChannel*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_520_0_25, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<ddasChannel*,allocator<ddasChannel*> >::iterator' - 0 - position U 'ddasChannel' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_520_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<ddasChannel*,allocator<ddasChannel*> >::iterator' - 0 - position u 'vector<ddasChannel*,allocator<ddasChannel*> >::iterator' 'vector<ddasChannel*,allocator<ddasChannel*> >::const_iterator' 10 - first "
"u 'vector<ddasChannel*,allocator<ddasChannel*> >::iterator' 'vector<ddasChannel*,allocator<ddasChannel*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_520_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<ddasChannel*,allocator<ddasChannel*> >::iterator' - 0 - position k - 'vector<ddasChannel*,allocator<ddasChannel*> >::size_type' 0 - n "
"U 'ddasChannel' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LendaDict_520_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_520_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<ddasChannel*,allocator<ddasChannel*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_520_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<ddasChannel*,allocator<ddasChannel*> >::iterator' - 0 - first u 'vector<ddasChannel*,allocator<ddasChannel*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LendaDict_520_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<ddasChannel*,allocator<ddasChannel*> >", 4368, G__LendaDict_520_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclendaChannel(void) {
   /* lendaChannel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaChannel));
   G__memfunc_setup("lendaChannel",1213,G__LendaDict_523_0_1, 105, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__LendaDict_523_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'lendaChannel' - 11 - RHS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__LendaDict_523_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergies",1118,G__LendaDict_523_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSoftwareTimes",1657,G__LendaDict_523_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCubicTimes",1300,G__LendaDict_523_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulseHeights",1537,G__LendaDict_523_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<Int_t>' 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSoftwareReferenceTimes",2568,G__LendaDict_523_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCubicReferenceTimes",2211,G__LendaDict_523_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergies",1106,G__LendaDict_523_0_11, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSoftwareTimes",1645,G__LendaDict_523_0_12, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCubicTimes",1288,G__LendaDict_523_0_13, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulseHeights",1525,G__LendaDict_523_0_14, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSoftwareReferenceTimes",2556,G__LendaDict_523_0_15, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCubicReferenceTimes",2199,G__LendaDict_523_0_16, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnderShoots",1438,G__LendaDict_523_0_17, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUnderShoots",1450,G__LendaDict_523_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEclockLow",1199,G__LendaDict_523_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEclockHigh",1277,G__LendaDict_523_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEclockHigher",1492,G__LendaDict_523_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEclock",893,G__LendaDict_523_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEclockLow",1187,G__LendaDict_523_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEclockHigh",1265,G__LendaDict_523_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEclockHigher",1480,G__LendaDict_523_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEclock",881,G__LendaDict_523_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannel",985,G__LendaDict_523_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlot",706,G__LendaDict_523_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlobalID",1022,G__LendaDict_523_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReferenceGlobalID",1933,G__LendaDict_523_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOverFlow",1108,G__LendaDict_523_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumZeroCrossings",1963,G__LendaDict_523_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedEnergy",1829,G__LendaDict_523_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__LendaDict_523_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInternalEnergy",1735,G__LendaDict_523_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulseHeight",1410,G__LendaDict_523_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFilterHeight",1503,G__LendaDict_523_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__LendaDict_523_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSoftTime",1099,G__LendaDict_523_0_39, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCubicTime",1173,G__LendaDict_523_0_40, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCubicFitTime",1464,G__LendaDict_523_0_41, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedTime",1610,G__LendaDict_523_0_42, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedCubicTime",2096,G__LendaDict_523_0_43, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedCubicFitTime",2387,G__LendaDict_523_0_44, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedSoftTime",2022,G__LendaDict_523_0_45, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCFDTrigBit",1186,G__LendaDict_523_0_46, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSoftwareCFD",1336,G__LendaDict_523_0_47, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCubicCFD",979,G__LendaDict_523_0_48, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCubicFitCFD",1270,G__LendaDict_523_0_49, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInternalCFD",1322,G__LendaDict_523_0_50, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShortGate",1201,G__LendaDict_523_0_51, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLongGate",1073,G__LendaDict_523_0_52, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJentry",924,G__LendaDict_523_0_53, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeLow",993,G__LendaDict_523_0_54, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeHigh",1071,G__LendaDict_523_0_55, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrace",783,G__LendaDict_523_0_56, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<UShort_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFilter",902,G__LendaDict_523_0_57, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCFD",493,G__LendaDict_523_0_58, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCFDResidual",1318,G__LendaDict_523_0_59, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReferenceTime",1598,G__LendaDict_523_0_60, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCubicReferenceTime",2084,G__LendaDict_523_0_61, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSoftwareReferenceTime",2441,G__LendaDict_523_0_62, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelName",1370,G__LendaDict_523_0_63, 117, G__get_linked_tagnum(&G__LendaDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,G__LendaDict_523_0_64, 117, G__get_linked_tagnum(&G__LendaDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReferenceChannelName",2281,G__LendaDict_523_0_65, 117, G__get_linked_tagnum(&G__LendaDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoarseTime",1292,G__LendaDict_523_0_66, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOtherTime",1201,G__LendaDict_523_0_67, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannel",997,G__LendaDict_523_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlot",718,G__LendaDict_523_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGlobalID",1034,G__LendaDict_523_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReferenceGlobalID",1945,G__LendaDict_523_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOverFlow",1120,G__LendaDict_523_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumZeroCrossings",1975,G__LendaDict_523_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorrectedEnergy",1841,G__LendaDict_523_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInternalEnergy",1747,G__LendaDict_523_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilterHeight",1515,G__LendaDict_523_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__LendaDict_523_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCubicFitTime",1476,G__LendaDict_523_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorrectedTime",1622,G__LendaDict_523_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorrectedCubicFitTime",2399,G__LendaDict_523_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorrectedSoftTime",2034,G__LendaDict_523_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorrectedCubicTime",2108,G__LendaDict_523_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeLow",1005,G__LendaDict_523_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeHigh",1083,G__LendaDict_523_0_84, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCFDTrigBit",1198,G__LendaDict_523_0_85, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSoftwareCFD",1348,G__LendaDict_523_0_86, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCubicCFD",991,G__LendaDict_523_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCubicFitCFD",1282,G__LendaDict_523_0_88, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInternalCFD",1334,G__LendaDict_523_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetShortGate",1213,G__LendaDict_523_0_90, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLongGate",1085,G__LendaDict_523_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJentry",936,G__LendaDict_523_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrace",795,G__LendaDict_523_0_93, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilter",914,G__LendaDict_523_0_94, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCFD",505,G__LendaDict_523_0_95, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCFDResidual",1330,G__LendaDict_523_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannelName",1382,G__LendaDict_523_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReferenceChannelName",2293,G__LendaDict_523_0_98, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReferenceTime",1610,G__LendaDict_523_0_99, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOtherTime",1213,G__LendaDict_523_0_100, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LendaDict_523_0_101, 85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&lendaChannel::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LendaDict_523_0_102, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaChannel::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LendaDict_523_0_103, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&lendaChannel::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LendaDict_523_0_104, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&lendaChannel::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LendaDict_523_0_108, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LendaDict_523_0_109, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaChannel::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LendaDict_523_0_110, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&lendaChannel::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LendaDict_523_0_111, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaChannel::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LendaDict_523_0_112, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&lendaChannel::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("lendaChannel", 1213, G__LendaDict_523_0_113, (int) ('i'), G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), -1, 0, 1, 1, 1, 0, "u 'lendaChannel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~lendaChannel", 1339, G__LendaDict_523_0_114, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LendaDict_523_0_115, (int) ('u'), G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), -1, 1, 1, 1, 1, 0, "u 'lendaChannel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclendaBar(void) {
   /* lendaBar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaBar));
   G__memfunc_setup("lendaBar",793,G__LendaDict_528_0_1, 105, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lendaBar",793,G__LendaDict_528_0_2, 105, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - s d - 'Double_t' 0 - a", "Constrcutor specifying name and angle of bar. */", (void*) NULL, 0);
   G__memfunc_setup("PushTopChannel",1420,G__LendaDict_528_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'lendaChannel' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PushBottomChannel",1742,G__LendaDict_528_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'lendaChannel' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarName",950,G__LendaDict_528_0_5, 117, G__get_linked_tagnum(&G__LendaDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumTops",1014,G__LendaDict_528_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumBottoms",1336,G__LendaDict_528_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarMultiplicity",1854,G__LendaDict_528_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCubicDt",958,G__LendaDict_528_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDt",472,G__LendaDict_528_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSyncDt",885,G__LendaDict_528_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCubicSyncDt",1371,G__LendaDict_528_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCOG",505,G__LendaDict_528_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAvgEnergy",1192,G__LendaDict_528_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAvgPulseHeight",1696,G__LendaDict_528_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedDt",1395,G__LendaDict_528_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedCOG",1428,G__LendaDict_528_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedAvgEnergy",2115,G__LendaDict_528_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAvgT",658,G__LendaDict_528_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedAvgT",1581,G__LendaDict_528_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTopTOF",828,G__LendaDict_528_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBottomTOF",1150,G__LendaDict_528_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAvgTOF",807,G__LendaDict_528_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedAvgTOF",1730,G__LendaDict_528_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCubicTopTOF",1314,G__LendaDict_528_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCubicBottomTOF",1636,G__LendaDict_528_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedTopTOF",1751,G__LendaDict_528_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedBottomTOF",2073,G__LendaDict_528_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedCubicTopTOF",2237,G__LendaDict_528_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedCubicBottomTOF",2559,G__LendaDict_528_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedSoftTopTOF",2163,G__LendaDict_528_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedSoftBottomTOF",2485,G__LendaDict_528_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrectedAvgSoftTOF",2142,G__LendaDict_528_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBarId",750,G__LendaDict_528_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBarName",962,G__LendaDict_528_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__LendaDict_528_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,G__LendaDict_528_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", "Calcuates convient quantities. */", (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__LendaDict_528_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'lendaBar' - 11 - RHS", "Probably not up to date. */", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LendaDict_528_0_40, 85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&lendaBar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LendaDict_528_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaBar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LendaDict_528_0_42, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&lendaBar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LendaDict_528_0_43, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&lendaBar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LendaDict_528_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LendaDict_528_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaBar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LendaDict_528_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&lendaBar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LendaDict_528_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaBar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LendaDict_528_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&lendaBar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("lendaBar", 793, G__LendaDict_528_0_52, (int) ('i'), G__get_linked_tagnum(&G__LendaDictLN_lendaBar), -1, 0, 1, 1, 1, 0, "u 'lendaBar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~lendaBar", 919, G__LendaDict_528_0_53, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LendaDict_528_0_54, (int) ('u'), G__get_linked_tagnum(&G__LendaDictLN_lendaBar), -1, 1, 1, 1, 1, 0, "u 'lendaBar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElendaChannelcOallocatorlElendaChannelgRsPgR(void) {
   /* vector<lendaChannel,allocator<lendaChannel> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR));
   G__memfunc_setup("at",213,G__LendaDict_530_0_1, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), G__defined_typename("vector<lendaChannel,allocator<lendaChannel> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<lendaChannel,allocator<lendaChannel> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LendaDict_530_0_2, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), G__defined_typename("vector<lendaChannel,allocator<lendaChannel> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<lendaChannel,allocator<lendaChannel> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LendaDict_530_0_3, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LendaDict_530_0_4, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LendaDict_530_0_5, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiteratorgR), G__defined_typename("vector<lendaChannel,allocator<lendaChannel> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LendaDict_530_0_6, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiteratorgR), G__defined_typename("vector<lendaChannel,allocator<lendaChannel> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LendaDict_530_0_7, 107, -1, G__defined_typename("vector<lendaChannel,allocator<lendaChannel> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LendaDict_530_0_8, 107, -1, G__defined_typename("vector<lendaChannel,allocator<lendaChannel> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_530_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<lendaChannel,allocator<lendaChannel> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_530_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<lendaChannel,allocator<lendaChannel> >::size_type' 0 - sz u 'lendaChannel' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LendaDict_530_0_11, 107, -1, G__defined_typename("vector<lendaChannel,allocator<lendaChannel> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LendaDict_530_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_530_0_13, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), G__defined_typename("vector<lendaChannel,allocator<lendaChannel> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<lendaChannel,allocator<lendaChannel> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_530_0_14, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), G__defined_typename("vector<lendaChannel,allocator<lendaChannel> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<lendaChannel,allocator<lendaChannel> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaChannel,allocator<lendaChannel> >",4366,G__LendaDict_530_0_15, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaChannel,allocator<lendaChannel> >",4366,G__LendaDict_530_0_16, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<lendaChannel,allocator<lendaChannel> >::size_type' 0 - n u 'lendaChannel' - 11 'lendaChannel()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaChannel,allocator<lendaChannel> >",4366,G__LendaDict_530_0_17, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<lendaChannel,allocator<lendaChannel> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaChannel,allocator<lendaChannel> >",4366,G__LendaDict_530_0_18, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaChannel,allocator<lendaChannel> >::iterator' 'vector<lendaChannel,allocator<lendaChannel> >::const_iterator' 10 - first u 'vector<lendaChannel,allocator<lendaChannel> >::iterator' 'vector<lendaChannel,allocator<lendaChannel> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LendaDict_530_0_19, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<lendaChannel,allocator<lendaChannel> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LendaDict_530_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<lendaChannel,allocator<lendaChannel> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LendaDict_530_0_21, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LendaDict_530_0_22, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LendaDict_530_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'lendaChannel' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LendaDict_530_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<lendaChannel,allocator<lendaChannel> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_530_0_25, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaChannel,allocator<lendaChannel> >::iterator' - 0 - position u 'lendaChannel' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_530_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<lendaChannel,allocator<lendaChannel> >::iterator' - 0 - position u 'vector<lendaChannel,allocator<lendaChannel> >::iterator' 'vector<lendaChannel,allocator<lendaChannel> >::const_iterator' 10 - first "
"u 'vector<lendaChannel,allocator<lendaChannel> >::iterator' 'vector<lendaChannel,allocator<lendaChannel> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_530_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<lendaChannel,allocator<lendaChannel> >::iterator' - 0 - position k - 'vector<lendaChannel,allocator<lendaChannel> >::size_type' 0 - n "
"u 'lendaChannel' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LendaDict_530_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_530_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<lendaChannel,allocator<lendaChannel> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_530_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaChannel,allocator<lendaChannel> >::iterator' - 0 - first u 'vector<lendaChannel,allocator<lendaChannel> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LendaDict_530_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<lendaChannel,allocator<lendaChannel> >", 4492, G__LendaDict_530_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclendaEvent(void) {
   /* lendaEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaEvent));
   G__memfunc_setup("lendaEvent",1030,G__LendaDict_533_0_1, 105, G__get_linked_tagnum(&G__LendaDictLN_lendaEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__LendaDict_533_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finalize",818,G__LendaDict_533_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PushABar",758,G__LendaDict_533_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'lendaBar' - 0 - aBar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PushUnMappedChannel",1907,G__LendaDict_533_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'lendaChannel' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SeteTime",800,G__LendaDict_533_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'uint64_t' 0 - thetime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInternalTime",1528,G__LendaDict_533_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - thetime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__LendaDict_533_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'lendaEvent' - 11 - RHS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindBar",662,G__LendaDict_533_0_10, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), -1, 0, 1, 1, 1, 0, "i - - 0 - BarId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindBar",662,G__LendaDict_533_0_11, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindBarSafe",1045,G__LendaDict_533_0_12, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindBarSafe",1045,G__LendaDict_533_0_13, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), -1, 0, 1, 1, 1, 0, "i - - 0 - BarId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindChannel",1082,G__LendaDict_533_0_14, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindReferenceChannel",1993,G__LendaDict_533_0_15, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LendaDict_533_0_16, 85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&lendaEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LendaDict_533_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LendaDict_533_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&lendaEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LendaDict_533_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&lendaEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LendaDict_533_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LendaDict_533_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LendaDict_533_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&lendaEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LendaDict_533_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LendaDict_533_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&lendaEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("lendaEvent", 1030, G__LendaDict_533_0_28, (int) ('i'), G__get_linked_tagnum(&G__LendaDictLN_lendaEvent), -1, 0, 1, 1, 1, 0, "u 'lendaEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~lendaEvent", 1156, G__LendaDict_533_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LendaDict_533_0_30, (int) ('u'), G__get_linked_tagnum(&G__LendaDictLN_lendaEvent), -1, 1, 1, 1, 1, 0, "u 'lendaEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElendaBarcOallocatorlElendaBargRsPgR(void) {
   /* vector<lendaBar,allocator<lendaBar> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR));
   G__memfunc_setup("at",213,G__LendaDict_535_0_1, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), G__defined_typename("vector<lendaBar,allocator<lendaBar> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<lendaBar,allocator<lendaBar> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LendaDict_535_0_2, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), G__defined_typename("vector<lendaBar,allocator<lendaBar> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<lendaBar,allocator<lendaBar> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LendaDict_535_0_3, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LendaDict_535_0_4, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LendaDict_535_0_5, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiteratorgR), G__defined_typename("vector<lendaBar,allocator<lendaBar> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LendaDict_535_0_6, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiteratorgR), G__defined_typename("vector<lendaBar,allocator<lendaBar> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LendaDict_535_0_7, 107, -1, G__defined_typename("vector<lendaBar,allocator<lendaBar> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LendaDict_535_0_8, 107, -1, G__defined_typename("vector<lendaBar,allocator<lendaBar> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_535_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<lendaBar,allocator<lendaBar> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_535_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<lendaBar,allocator<lendaBar> >::size_type' 0 - sz u 'lendaBar' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LendaDict_535_0_11, 107, -1, G__defined_typename("vector<lendaBar,allocator<lendaBar> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LendaDict_535_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_535_0_13, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), G__defined_typename("vector<lendaBar,allocator<lendaBar> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<lendaBar,allocator<lendaBar> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_535_0_14, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), G__defined_typename("vector<lendaBar,allocator<lendaBar> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<lendaBar,allocator<lendaBar> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaBar,allocator<lendaBar> >",3526,G__LendaDict_535_0_15, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaBar,allocator<lendaBar> >",3526,G__LendaDict_535_0_16, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<lendaBar,allocator<lendaBar> >::size_type' 0 - n u 'lendaBar' - 11 'lendaBar()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaBar,allocator<lendaBar> >",3526,G__LendaDict_535_0_17, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<lendaBar,allocator<lendaBar> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaBar,allocator<lendaBar> >",3526,G__LendaDict_535_0_18, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaBar,allocator<lendaBar> >::iterator' 'vector<lendaBar,allocator<lendaBar> >::const_iterator' 10 - first u 'vector<lendaBar,allocator<lendaBar> >::iterator' 'vector<lendaBar,allocator<lendaBar> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LendaDict_535_0_19, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<lendaBar,allocator<lendaBar> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LendaDict_535_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<lendaBar,allocator<lendaBar> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LendaDict_535_0_21, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LendaDict_535_0_22, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LendaDict_535_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'lendaBar' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LendaDict_535_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<lendaBar,allocator<lendaBar> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_535_0_25, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaBar,allocator<lendaBar> >::iterator' - 0 - position u 'lendaBar' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_535_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<lendaBar,allocator<lendaBar> >::iterator' - 0 - position u 'vector<lendaBar,allocator<lendaBar> >::iterator' 'vector<lendaBar,allocator<lendaBar> >::const_iterator' 10 - first "
"u 'vector<lendaBar,allocator<lendaBar> >::iterator' 'vector<lendaBar,allocator<lendaBar> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_535_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<lendaBar,allocator<lendaBar> >::iterator' - 0 - position k - 'vector<lendaBar,allocator<lendaBar> >::size_type' 0 - n "
"u 'lendaBar' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LendaDict_535_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_535_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<lendaBar,allocator<lendaBar> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_535_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaBar,allocator<lendaBar> >::iterator' - 0 - first u 'vector<lendaBar,allocator<lendaBar> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LendaDict_535_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<lendaBar,allocator<lendaBar> >", 3652, G__LendaDict_535_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclendaFilter(void) {
   /* lendaFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaFilter));
   G__memfunc_setup("lendaFilter",1130,G__LendaDict_538_0_1, 105, G__get_linked_tagnum(&G__LendaDictLN_lendaFilter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FastFilter",1012,G__LendaDict_538_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - trace u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - thisEventsFF "
"d - 'Double_t' 0 - FL d - 'Double_t' 0 - FG", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FastFilterOp",1203,G__LendaDict_538_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - trace u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - thisEventsFF "
"d - 'Double_t' 0 - FL d - 'Double_t' 0 - FG", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FastFilterFull",1415,G__LendaDict_538_0_4, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - trace u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - thisEventsFF "
"d - 'Double_t' 0 - FL d - 'Double_t' 0 - FG "
"d - 'Double_t' 0 - decayTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CFD",205,G__LendaDict_538_0_5, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CFDOp",396,G__LendaDict_538_0_6, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZeroCrossing",1544,G__LendaDict_538_0_7, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - - i - 'Int_t' 1 - - "
"d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAllZeroCrossings",1940,G__LendaDict_538_0_8, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZeroCrossingImproved",2382,G__LendaDict_538_0_9, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - - i - 'Int_t' 1 - - "
"d - 'Double_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZeroCrossingOp",1735,G__LendaDict_538_0_10, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - - i - 'Int_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZeroCubic",1190,G__LendaDict_538_0_11, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - - i - 'Int_t' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZeroFitCubic",1481,G__LendaDict_538_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoMatrixInversionAlgorithm",2700,G__LendaDict_538_0_13, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - CFD i - 'Int_t' 0 - Spot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatrixInversionAlgorithmCoeffients",3839,G__LendaDict_538_0_14, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - CFD i - 'Int_t' 1 - Spot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitTrace",818,G__LendaDict_538_0_15, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyOld",1193,G__LendaDict_538_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - trace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__LendaDict_538_0_17, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - trace i - 'Int_t' 0 - MaxSpot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyHighRate",1686,G__LendaDict_538_0_18, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 5, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 11 - trace u 'vector<int,allocator<int> >' 'vector<Int_t>' 1 - PeakSpots "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - theUnderShoots d - 'Double_t' 1 - MaxValueOut "
"i - 'Int_t' 1 - MaxIndexOut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulseHeightHighRate",2190,G__LendaDict_538_0_19, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 11 - trace u 'vector<int,allocator<int> >' 'vector<Int_t>' 11 - PeakSpots", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZeroCrossingHighRate",2324,G__LendaDict_538_0_20, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - CFD u 'vector<int,allocator<int> >' 'vector<Int_t>' 11 - PeakSpots", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZeroCrossingCubicHighRate",2810,G__LendaDict_538_0_21, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - CFD u 'vector<int,allocator<int> >' 'vector<Int_t>' 11 - PeakSpots", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGate",673,G__LendaDict_538_0_22, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - trace i - - 0 - start "
"i - - 0 - L", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxPulseHeight",1704,G__LendaDict_538_0_23, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - trace i - 'Int_t' 1 - MaxSpot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxPulseHeight",1704,G__LendaDict_538_0_24, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - trace i - 'Int_t' 1 - MaxSpot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFunc",716,G__LendaDict_538_0_25, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMatrixT<double>' 'TMatrixT<Double_t>' 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFunc",716,G__LendaDict_538_0_26, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - - d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartForPulseShape",2127,G__LendaDict_538_0_27, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - MaxSpot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateCFD",1115,G__LendaDict_538_0_28, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 0 - trace u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNewFirmwareCFD",1620,G__LendaDict_538_0_29, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 5, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 11 - trace i - 'Int_t' 0 - FL "
"i - 'Int_t' 0 - FG i - 'Int_t' 0 - d "
"i - 'Int_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNewFirmwareCFDWeight",2236,G__LendaDict_538_0_30, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - CFDScaleFactor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LendaDict_538_0_31, 85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&lendaFilter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LendaDict_538_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaFilter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LendaDict_538_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&lendaFilter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LendaDict_538_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&lendaFilter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LendaDict_538_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LendaDict_538_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaFilter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LendaDict_538_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&lendaFilter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LendaDict_538_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaFilter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LendaDict_538_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&lendaFilter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("lendaFilter", 1130, G__LendaDict_538_0_43, (int) ('i'), G__get_linked_tagnum(&G__LendaDictLN_lendaFilter), -1, 0, 1, 1, 1, 0, "u 'lendaFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~lendaFilter", 1256, G__LendaDict_538_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LendaDict_538_0_45, (int) ('u'), G__get_linked_tagnum(&G__LendaDictLN_lendaFilter), -1, 1, 1, 1, 1, 0, "u 'lendaFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclendaSettings(void) {
   /* lendaSettings */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaSettings));
   G__memfunc_setup("lendaSettings",1365,G__LendaDict_577_0_1, 105, G__get_linked_tagnum(&G__LendaDictLN_lendaSettings), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAll",806,G__LendaDict_577_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintChannelCorrections",2385,G__LendaDict_577_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintChannelMapInfo",1904,G__LendaDict_577_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - GlobalID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintChannelMapInfo",1904,G__LendaDict_577_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintFilterInfo",1535,G__LendaDict_577_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelsSlope",1615,G__LendaDict_577_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'string' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelsIntercept",2042,G__LendaDict_577_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'string' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelsTimeOffset",2114,G__LendaDict_577_0_9, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'string' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarId",738,G__LendaDict_577_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'string' - 0 - Name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarName",950,G__LendaDict_577_0_11, 117, G__get_linked_tagnum(&G__LendaDictLN_string), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - BarId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCorrectionSettings",2162,G__LendaDict_577_0_12, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - Name d - 'Double_t' 0 - slope "
"d - 'Double_t' 0 - inter d - 'Double_t' 0 - toff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMapSettings",1400,G__LendaDict_577_0_13, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - Name i - 'Int_t' 0 - GlobalID "
"u 'string' - 0 - RefName i - 'Int_t' 0 - refGlobalID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFilterSettings",1728,G__LendaDict_577_0_14, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - Name i - 'Int_t' 0 - FL "
"i - 'Int_t' 0 - FG i - 'Int_t' 0 - d "
"i - 'Int_t' 0 - w g - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBarIds",865,G__LendaDict_577_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,int,less<string>,allocator<pair<const string,int> > >' 'map<string,Int_t>' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumBars",984,G__LendaDict_577_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildReverseMap",1514,G__LendaDict_577_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LendaDict_577_0_18, 85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&lendaSettings::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LendaDict_577_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaSettings::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LendaDict_577_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&lendaSettings::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LendaDict_577_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&lendaSettings::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LendaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LendaDict_577_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LendaDict_577_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaSettings::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LendaDict_577_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&lendaSettings::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LendaDict_577_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&lendaSettings::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LendaDict_577_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&lendaSettings::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("lendaSettings", 1365, G__LendaDict_577_0_30, (int) ('i'), G__get_linked_tagnum(&G__LendaDictLN_lendaSettings), -1, 0, 1, 1, 1, 0, "u 'lendaSettings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~lendaSettings", 1491, G__LendaDict_577_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LendaDict_577_0_32, (int) ('u'), G__get_linked_tagnum(&G__LendaDictLN_lendaSettings), -1, 1, 1, 1, 1, 0, "u 'lendaSettings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmapInfo(void) {
   /* mapInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_mapInfo));
   G__memfunc_setup("mapInfo",714,G__LendaDict_592_0_1, 105, G__get_linked_tagnum(&G__LendaDictLN_mapInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__LendaDict_592_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("mapInfo", 714, G__LendaDict_592_0_3, (int) ('i'), G__get_linked_tagnum(&G__LendaDictLN_mapInfo), -1, 0, 1, 1, 1, 0, "u 'mapInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~mapInfo", 840, G__LendaDict_592_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LendaDict_592_0_5, (int) ('u'), G__get_linked_tagnum(&G__LendaDictLN_mapInfo), -1, 1, 1, 1, 1, 0, "u 'mapInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclendaPacker(void) {
   /* lendaPacker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_lendaPacker));
   G__memfunc_setup("lendaPacker",1114,G__LendaDict_594_0_1, 105, G__get_linked_tagnum(&G__LendaDictLN_lendaPacker), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lendaPacker",1114,G__LendaDict_594_0_2, 105, G__get_linked_tagnum(&G__LendaDictLN_lendaPacker), -1, 0, 1, 1, 1, 0, "U 'lendaSettings' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSettingFileNames",1918,G__LendaDict_594_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - MapFileName u 'string' - 0 - CorrectionsFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__LendaDict_594_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcTimeFilters",1499,G__LendaDict_594_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - theTrace u 'mapInfo' - 0 - info", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcEnergyGates",1489,G__LendaDict_594_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - theTrace u 'mapInfo' - 0 - info", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcAll",652,G__LendaDict_594_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 1 - theTrace u 'mapInfo' - 0 - info", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcAll",652,G__LendaDict_594_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'ddasChannel' - 0 - c u 'mapInfo' - 0 - info", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcAll",652,G__LendaDict_594_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'lendaChannel' - 0 - c u 'mapInfo' - 0 - info", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ForceAllBarFilters",1782,G__LendaDict_594_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - FL i - 'Int_t' 0 - FG "
"i - 'Int_t' 0 - d i - 'Int_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ForceAllReferenceFilters",2416,G__LendaDict_594_0_11, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - FL i - 'Int_t' 0 - FG "
"i - 'Int_t' 0 - d i - 'Int_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ForceAllFilters",1505,G__LendaDict_594_0_12, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - FL i - 'Int_t' 0 - FG "
"i - 'Int_t' 0 - d i - 'Int_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGates",800,G__LendaDict_594_0_13, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTraceDelay",1290,G__LendaDict_594_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJEntry",904,G__LendaDict_594_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeLendaEvent",1380,G__LendaDict_594_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'lendaEvent' - 0 - Event U 'ddasEvent' - 0 - theDDASEvent "
"n - 'Long64_t' 0 - jentry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReMakeLendaEvent",1563,G__LendaDict_594_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'lendaEvent' - 0 - inEvent U 'lendaEvent' - 0 - outEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RePackChannel",1263,G__LendaDict_594_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'lendaChannel' - 0 - - g - - 0 'false' isAnObject", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DDASChannel2LendaChannel",2212,G__LendaDict_594_0_19, 117, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), -1, 0, 2, 1, 1, 0, 
"U 'ddasChannel' - 0 - c u 'mapInfo' - 0 - info", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RePackSoftwareTimes",1923,G__LendaDict_594_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'lendaEvent' - 0 - Event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PackEvent",897,G__LendaDict_594_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'lendaEvent' - 0 - Event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RePackEvent",1080,G__LendaDict_594_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'lendaEvent' - 0 - Event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindAndSetMapAndCorrectionsFileNames",3568,G__LendaDict_594_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - RunNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSettingsandCorrections",2619,G__LendaDict_594_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - MapFileName u 'string' - 0 - CorrectionsFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMapInfo",970,G__LendaDict_594_0_25, 117, G__get_linked_tagnum(&G__LendaDictLN_mapInfo), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - FullName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildMaps",897,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PutDDASChannelInBar",1754,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'mapInfo' - 0 - info u 'lendaBar' - 1 - theBar "
"U 'ddasChannel' - 0 - theChannel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PackCalculatedValues",2017,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'lendaChannel' - 0 - - u 'mapInfo' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillReferenceTimesInEvent",2513,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'lendaEvent' - 0 - Event u 'map<string,lendaBar,less<string>,allocator<pair<const string,lendaBar> > >' 'map<string,lendaBar>' 1 - ThisEventsBars "
"u 'multimap<int,refTimeContainer,less<int>,allocator<pair<const int,refTimeContainer> > >' 'multimap<Int_t,refTimeContainer>' 1 - GlobalIDToReferenceTimes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateSettings",1460,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("lendaPacker", 1114, G__LendaDict_594_0_31, (int) ('i'), G__get_linked_tagnum(&G__LendaDictLN_lendaPacker), -1, 0, 1, 1, 1, 0, "u 'lendaPacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~lendaPacker", 1240, G__LendaDict_594_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LendaDict_594_0_33, (int) ('u'), G__get_linked_tagnum(&G__LendaDictLN_lendaPacker), -1, 1, 1, 1, 1, 0, "u 'lendaPacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR(void) {
   /* vector<lendaChannel*,allocator<lendaChannel*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR));
   G__memfunc_setup("at",213,G__LendaDict_616_0_1, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), G__defined_typename("vector<lendaChannel*,allocator<lendaChannel*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<lendaChannel*,allocator<lendaChannel*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LendaDict_616_0_2, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), G__defined_typename("vector<lendaChannel*,allocator<lendaChannel*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<lendaChannel*,allocator<lendaChannel*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LendaDict_616_0_3, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LendaDict_616_0_4, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LendaDict_616_0_5, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<lendaChannel*,allocator<lendaChannel*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LendaDict_616_0_6, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<lendaChannel*,allocator<lendaChannel*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LendaDict_616_0_7, 107, -1, G__defined_typename("vector<lendaChannel*,allocator<lendaChannel*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LendaDict_616_0_8, 107, -1, G__defined_typename("vector<lendaChannel*,allocator<lendaChannel*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_616_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<lendaChannel*,allocator<lendaChannel*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_616_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<lendaChannel*,allocator<lendaChannel*> >::size_type' 0 - sz U 'lendaChannel' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LendaDict_616_0_11, 107, -1, G__defined_typename("vector<lendaChannel*,allocator<lendaChannel*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LendaDict_616_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_616_0_13, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), G__defined_typename("vector<lendaChannel*,allocator<lendaChannel*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<lendaChannel*,allocator<lendaChannel*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_616_0_14, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), G__defined_typename("vector<lendaChannel*,allocator<lendaChannel*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<lendaChannel*,allocator<lendaChannel*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaChannel*,allocator<lendaChannel*> >",4450,G__LendaDict_616_0_15, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaChannel*,allocator<lendaChannel*> >",4450,G__LendaDict_616_0_16, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<lendaChannel*,allocator<lendaChannel*> >::size_type' 0 - n U 'lendaChannel' - 41 '(lendaChannel*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaChannel*,allocator<lendaChannel*> >",4450,G__LendaDict_616_0_17, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<lendaChannel*,allocator<lendaChannel*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaChannel*,allocator<lendaChannel*> >",4450,G__LendaDict_616_0_18, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaChannel*,allocator<lendaChannel*> >::iterator' 'vector<lendaChannel*,allocator<lendaChannel*> >::const_iterator' 10 - first u 'vector<lendaChannel*,allocator<lendaChannel*> >::iterator' 'vector<lendaChannel*,allocator<lendaChannel*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LendaDict_616_0_19, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<lendaChannel*,allocator<lendaChannel*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LendaDict_616_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<lendaChannel*,allocator<lendaChannel*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LendaDict_616_0_21, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LendaDict_616_0_22, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaChannel), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LendaDict_616_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'lendaChannel' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LendaDict_616_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<lendaChannel*,allocator<lendaChannel*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_616_0_25, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaChannel*,allocator<lendaChannel*> >::iterator' - 0 - position U 'lendaChannel' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_616_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<lendaChannel*,allocator<lendaChannel*> >::iterator' - 0 - position u 'vector<lendaChannel*,allocator<lendaChannel*> >::iterator' 'vector<lendaChannel*,allocator<lendaChannel*> >::const_iterator' 10 - first "
"u 'vector<lendaChannel*,allocator<lendaChannel*> >::iterator' 'vector<lendaChannel*,allocator<lendaChannel*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_616_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<lendaChannel*,allocator<lendaChannel*> >::iterator' - 0 - position k - 'vector<lendaChannel*,allocator<lendaChannel*> >::size_type' 0 - n "
"U 'lendaChannel' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LendaDict_616_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_616_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<lendaChannel*,allocator<lendaChannel*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_616_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaChannel*,allocator<lendaChannel*> >::iterator' - 0 - first u 'vector<lendaChannel*,allocator<lendaChannel*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LendaDict_616_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<lendaChannel*,allocator<lendaChannel*> >", 4576, G__LendaDict_616_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR(void) {
   /* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__LendaDict_620_0_1, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LendaDict_620_0_2, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LendaDict_620_0_3, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LendaDict_620_0_4, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LendaDict_620_0_5, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LendaDict_620_0_6, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LendaDict_620_0_7, 107, -1, G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LendaDict_620_0_8, 107, -1, G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_620_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_620_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - sz u 'vector<double,allocator<double> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LendaDict_620_0_11, 107, -1, G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LendaDict_620_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_620_0_13, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_620_0_14, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__LendaDict_620_0_15, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__LendaDict_620_0_16, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n u 'vector<double,allocator<double> >' - 11 '(vector<double,allocator<double> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__LendaDict_620_0_17, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__LendaDict_620_0_18, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - first u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LendaDict_620_0_19, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LendaDict_620_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LendaDict_620_0_21, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LendaDict_620_0_22, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LendaDict_620_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LendaDict_620_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_620_0_25, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_620_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - first "
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_620_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n "
"u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LendaDict_620_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_620_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_620_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - first u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LendaDict_620_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >", 8518, G__LendaDict_620_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR(void) {
   /* vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__LendaDict_624_0_1, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LendaDict_624_0_2, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LendaDict_624_0_3, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LendaDict_624_0_4, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LendaDict_624_0_5, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LendaDict_624_0_6, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LendaDict_624_0_7, 107, -1, G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LendaDict_624_0_8, 107, -1, G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_624_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_624_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - sz u 'vector<unsigned short,allocator<unsigned short> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LendaDict_624_0_11, 107, -1, G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LendaDict_624_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_624_0_13, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_624_0_14, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >",11664,G__LendaDict_624_0_15, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >",11664,G__LendaDict_624_0_16, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n u 'vector<unsigned short,allocator<unsigned short> >' - 11 '(vector<unsigned short,allocator<unsigned short> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >",11664,G__LendaDict_624_0_17, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >",11664,G__LendaDict_624_0_18, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator' 10 - first u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LendaDict_624_0_19, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LendaDict_624_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LendaDict_624_0_21, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LendaDict_624_0_22, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LendaDict_624_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LendaDict_624_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_624_0_25, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - position u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_624_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - position u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator' 10 - first "
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_624_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - position k - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n "
"u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LendaDict_624_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_624_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_624_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - first u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LendaDict_624_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >", 11790, G__LendaDict_624_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR(void) {
   /* map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR));
   G__memfunc_setup("map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >",12565,G__LendaDict_631_0_1, 105, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >",12565,G__LendaDict_631_0_2, 105, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator' - 0 - first u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >",12565,G__LendaDict_631_0_3, 105, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator' - 0 - first u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >",12565,G__LendaDict_631_0_4, 105, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LendaDict_631_0_5, 117, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LendaDict_631_0_6, 117, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LendaDict_631_0_7, 117, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LendaDict_631_0_8, 117, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LendaDict_631_0_9, 117, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LendaDict_631_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LendaDict_631_0_11, 107, -1, G__defined_typename("map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LendaDict_631_0_12, 107, -1, G__defined_typename("map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_631_0_13, 100, -1, -1, 1, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_631_0_14, 117, G__get_linked_tagnum(&G__LendaDictLN_pairlEmaplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<vector<int,allocator<int> >,double>' 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_631_0_15, 117, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator' - 0 - position u 'pair<vector<int,allocator<int> >,double>' 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_631_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator' - 0 - first u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_631_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator' - 0 - first u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_631_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_631_0_19, 107, -1, G__defined_typename("map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::size_type"), 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_631_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator' - 0 - first u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LendaDict_631_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LendaDict_631_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__LendaDict_631_0_23, 117, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__LendaDict_631_0_24, 107, -1, G__defined_typename("map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::size_type"), 0, 1, 1, 1, 8, "u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__LendaDict_631_0_25, 117, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__LendaDict_631_0_26, 117, G__get_linked_tagnum(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >", 12691, G__LendaDict_631_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR(void) {
   /* vector<lendaBar*,allocator<lendaBar*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR));
   G__memfunc_setup("at",213,G__LendaDict_637_0_1, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), G__defined_typename("vector<lendaBar*,allocator<lendaBar*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<lendaBar*,allocator<lendaBar*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LendaDict_637_0_2, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), G__defined_typename("vector<lendaBar*,allocator<lendaBar*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<lendaBar*,allocator<lendaBar*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LendaDict_637_0_3, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LendaDict_637_0_4, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LendaDict_637_0_5, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<lendaBar*,allocator<lendaBar*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LendaDict_637_0_6, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<lendaBar*,allocator<lendaBar*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LendaDict_637_0_7, 107, -1, G__defined_typename("vector<lendaBar*,allocator<lendaBar*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LendaDict_637_0_8, 107, -1, G__defined_typename("vector<lendaBar*,allocator<lendaBar*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_637_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<lendaBar*,allocator<lendaBar*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_637_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<lendaBar*,allocator<lendaBar*> >::size_type' 0 - sz U 'lendaBar' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LendaDict_637_0_11, 107, -1, G__defined_typename("vector<lendaBar*,allocator<lendaBar*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LendaDict_637_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_637_0_13, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), G__defined_typename("vector<lendaBar*,allocator<lendaBar*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<lendaBar*,allocator<lendaBar*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_637_0_14, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), G__defined_typename("vector<lendaBar*,allocator<lendaBar*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<lendaBar*,allocator<lendaBar*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaBar*,allocator<lendaBar*> >",3610,G__LendaDict_637_0_15, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaBar*,allocator<lendaBar*> >",3610,G__LendaDict_637_0_16, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<lendaBar*,allocator<lendaBar*> >::size_type' 0 - n U 'lendaBar' - 41 '(lendaBar*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaBar*,allocator<lendaBar*> >",3610,G__LendaDict_637_0_17, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<lendaBar*,allocator<lendaBar*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaBar*,allocator<lendaBar*> >",3610,G__LendaDict_637_0_18, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaBar*,allocator<lendaBar*> >::iterator' 'vector<lendaBar*,allocator<lendaBar*> >::const_iterator' 10 - first u 'vector<lendaBar*,allocator<lendaBar*> >::iterator' 'vector<lendaBar*,allocator<lendaBar*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LendaDict_637_0_19, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<lendaBar*,allocator<lendaBar*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LendaDict_637_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<lendaBar*,allocator<lendaBar*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LendaDict_637_0_21, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LendaDict_637_0_22, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaBar), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LendaDict_637_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'lendaBar' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LendaDict_637_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<lendaBar*,allocator<lendaBar*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_637_0_25, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaBar*,allocator<lendaBar*> >::iterator' - 0 - position U 'lendaBar' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_637_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<lendaBar*,allocator<lendaBar*> >::iterator' - 0 - position u 'vector<lendaBar*,allocator<lendaBar*> >::iterator' 'vector<lendaBar*,allocator<lendaBar*> >::const_iterator' 10 - first "
"u 'vector<lendaBar*,allocator<lendaBar*> >::iterator' 'vector<lendaBar*,allocator<lendaBar*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_637_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<lendaBar*,allocator<lendaBar*> >::iterator' - 0 - position k - 'vector<lendaBar*,allocator<lendaBar*> >::size_type' 0 - n "
"U 'lendaBar' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LendaDict_637_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_637_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<lendaBar*,allocator<lendaBar*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_637_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaBar*,allocator<lendaBar*> >::iterator' - 0 - first u 'vector<lendaBar*,allocator<lendaBar*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LendaDict_637_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<lendaBar*,allocator<lendaBar*> >", 3736, G__LendaDict_637_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR(void) {
   /* vector<lendaSettings*,allocator<lendaSettings*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR));
   G__memfunc_setup("at",213,G__LendaDict_641_0_1, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaSettings), G__defined_typename("vector<lendaSettings*,allocator<lendaSettings*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<lendaSettings*,allocator<lendaSettings*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LendaDict_641_0_2, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaSettings), G__defined_typename("vector<lendaSettings*,allocator<lendaSettings*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<lendaSettings*,allocator<lendaSettings*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LendaDict_641_0_3, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LendaDict_641_0_4, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LendaDict_641_0_5, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<lendaSettings*,allocator<lendaSettings*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LendaDict_641_0_6, 117, G__get_linked_tagnum(&G__LendaDictLN_reverse_iteratorlEvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<lendaSettings*,allocator<lendaSettings*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LendaDict_641_0_7, 107, -1, G__defined_typename("vector<lendaSettings*,allocator<lendaSettings*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LendaDict_641_0_8, 107, -1, G__defined_typename("vector<lendaSettings*,allocator<lendaSettings*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_641_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<lendaSettings*,allocator<lendaSettings*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LendaDict_641_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<lendaSettings*,allocator<lendaSettings*> >::size_type' 0 - sz U 'lendaSettings' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LendaDict_641_0_11, 107, -1, G__defined_typename("vector<lendaSettings*,allocator<lendaSettings*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LendaDict_641_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_641_0_13, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaSettings), G__defined_typename("vector<lendaSettings*,allocator<lendaSettings*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<lendaSettings*,allocator<lendaSettings*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LendaDict_641_0_14, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaSettings), G__defined_typename("vector<lendaSettings*,allocator<lendaSettings*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<lendaSettings*,allocator<lendaSettings*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaSettings*,allocator<lendaSettings*> >",4754,G__LendaDict_641_0_15, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaSettings*,allocator<lendaSettings*> >",4754,G__LendaDict_641_0_16, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<lendaSettings*,allocator<lendaSettings*> >::size_type' 0 - n U 'lendaSettings' - 41 '(lendaSettings*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaSettings*,allocator<lendaSettings*> >",4754,G__LendaDict_641_0_17, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<lendaSettings*,allocator<lendaSettings*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<lendaSettings*,allocator<lendaSettings*> >",4754,G__LendaDict_641_0_18, 105, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaSettings*,allocator<lendaSettings*> >::iterator' 'vector<lendaSettings*,allocator<lendaSettings*> >::const_iterator' 10 - first u 'vector<lendaSettings*,allocator<lendaSettings*> >::iterator' 'vector<lendaSettings*,allocator<lendaSettings*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LendaDict_641_0_19, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<lendaSettings*,allocator<lendaSettings*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LendaDict_641_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<lendaSettings*,allocator<lendaSettings*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LendaDict_641_0_21, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaSettings), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LendaDict_641_0_22, 85, G__get_linked_tagnum(&G__LendaDictLN_lendaSettings), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LendaDict_641_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'lendaSettings' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LendaDict_641_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<lendaSettings*,allocator<lendaSettings*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_641_0_25, 117, G__get_linked_tagnum(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaSettings*,allocator<lendaSettings*> >::iterator' - 0 - position U 'lendaSettings' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_641_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<lendaSettings*,allocator<lendaSettings*> >::iterator' - 0 - position u 'vector<lendaSettings*,allocator<lendaSettings*> >::iterator' 'vector<lendaSettings*,allocator<lendaSettings*> >::const_iterator' 10 - first "
"u 'vector<lendaSettings*,allocator<lendaSettings*> >::iterator' 'vector<lendaSettings*,allocator<lendaSettings*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LendaDict_641_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<lendaSettings*,allocator<lendaSettings*> >::iterator' - 0 - position k - 'vector<lendaSettings*,allocator<lendaSettings*> >::size_type' 0 - n "
"U 'lendaSettings' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LendaDict_641_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_641_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<lendaSettings*,allocator<lendaSettings*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LendaDict_641_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<lendaSettings*,allocator<lendaSettings*> >::iterator' - 0 - first u 'vector<lendaSettings*,allocator<lendaSettings*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LendaDict_641_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<lendaSettings*,allocator<lendaSettings*> >", 4880, G__LendaDict_641_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncLendaDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalLendaDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcLendaDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__LendaDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__LendaDictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR = { "map<unsigned int,pair<double,double>,less<unsigned int>,allocator<pair<const unsigned int,pair<double,double> > > >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_ddasChannel = { "ddasChannel" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_ddasEvent = { "ddasEvent" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR = { "vector<ddasChannel*,allocator<ddasChannel*> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiterator = { "vector<ddasChannel*,allocator<ddasChannel*> >::iterator" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_reverse_iteratorlEvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ddasChannel*,allocator<ddasChannel*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_lendaChannel = { "lendaChannel" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_lendaBar = { "lendaBar" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR = { "vector<lendaChannel,allocator<lendaChannel> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiterator = { "vector<lendaChannel,allocator<lendaChannel> >::iterator" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<lendaChannel,allocator<lendaChannel> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_lendaEvent = { "lendaEvent" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR = { "vector<lendaBar,allocator<lendaBar> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiterator = { "vector<lendaBar,allocator<lendaBar> >::iterator" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_reverse_iteratorlEvectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiteratorgR = { "reverse_iterator<vector<lendaBar,allocator<lendaBar> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_lendaFilter = { "lendaFilter" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_lendaSettings = { "lendaSettings" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR = { "map<int,string,less<int>,allocator<pair<const int,string> > >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_mapInfo = { "mapInfo" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_lendaPacker = { "lendaPacker" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_maplEintcOmapInfocOlesslEintgRcOallocatorlEpairlEconstsPintcOmapInfogRsPgRsPgR = { "map<int,mapInfo,less<int>,allocator<pair<const int,mapInfo> > >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_maplEstringcOlendaBarcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlendaBargRsPgRsPgR = { "map<string,lendaBar,less<string>,allocator<pair<const string,lendaBar> > >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_multimaplEintcOrefTimeContainercOlesslEintgRcOallocatorlEpairlEconstsPintcOrefTimeContainergRsPgRsPgR = { "multimap<int,refTimeContainer,less<int>,allocator<pair<const int,refTimeContainer> > >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR = { "vector<lendaChannel*,allocator<lendaChannel*> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiterator = { "vector<lendaChannel*,allocator<lendaChannel*> >::iterator" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<lendaChannel*,allocator<lendaChannel*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR = { "vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_lesslEvectorlEintcOallocatorlEintgRsPgRsPgR = { "less<vector<int,allocator<int> > >" , 115 , -1 };
G__linked_taginfo G__LendaDictLN_allocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgR = { "allocator<pair<const vector<int,allocator<int> >,double> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR = { "map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_pairlEvectorlEintcOallocatorlEintgRsPgRcOdoublegR = { "pair<vector<int,allocator<int> >,double>" , 115 , -1 };
G__linked_taginfo G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiterator = { "map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLreverse_iterator = { "map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_pairlEmaplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR = { "vector<lendaBar*,allocator<lendaBar*> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiterator = { "vector<lendaBar*,allocator<lendaBar*> >::iterator" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_reverse_iteratorlEvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<lendaBar*,allocator<lendaBar*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR = { "vector<lendaSettings*,allocator<lendaSettings*> >" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiterator = { "vector<lendaSettings*,allocator<lendaSettings*> >::iterator" , 99 , -1 };
G__linked_taginfo G__LendaDictLN_reverse_iteratorlEvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<lendaSettings*,allocator<lendaSettings*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableLendaDict() {
  G__LendaDictLN_TClass.tagnum = -1 ;
  G__LendaDictLN_TBuffer.tagnum = -1 ;
  G__LendaDictLN_TMemberInspector.tagnum = -1 ;
  G__LendaDictLN_TObject.tagnum = -1 ;
  G__LendaDictLN_TNamed.tagnum = -1 ;
  G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__LendaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__LendaDictLN_string.tagnum = -1 ;
  G__LendaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__LendaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LendaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__LendaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LendaDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__LendaDictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__LendaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__LendaDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__LendaDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__LendaDictLN_ddasChannel.tagnum = -1 ;
  G__LendaDictLN_ddasEvent.tagnum = -1 ;
  G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR.tagnum = -1 ;
  G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__LendaDictLN_reverse_iteratorlEvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LendaDictLN_lendaChannel.tagnum = -1 ;
  G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__LendaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LendaDictLN_lendaBar.tagnum = -1 ;
  G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR.tagnum = -1 ;
  G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiterator.tagnum = -1 ;
  G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LendaDictLN_lendaEvent.tagnum = -1 ;
  G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR.tagnum = -1 ;
  G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiterator.tagnum = -1 ;
  G__LendaDictLN_reverse_iteratorlEvectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LendaDictLN_lendaFilter.tagnum = -1 ;
  G__LendaDictLN_lendaSettings.tagnum = -1 ;
  G__LendaDictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_mapInfo.tagnum = -1 ;
  G__LendaDictLN_lendaPacker.tagnum = -1 ;
  G__LendaDictLN_maplEintcOmapInfocOlesslEintgRcOallocatorlEpairlEconstsPintcOmapInfogRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_maplEstringcOlendaBarcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlendaBargRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_multimaplEintcOrefTimeContainercOlesslEintgRcOallocatorlEpairlEconstsPintcOrefTimeContainergRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR.tagnum = -1 ;
  G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LendaDictLN_lesslEvectorlEintcOallocatorlEintgRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_allocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgR.tagnum = -1 ;
  G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__LendaDictLN_pairlEvectorlEintcOallocatorlEintgRsPgRcOdoublegR.tagnum = -1 ;
  G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__LendaDictLN_pairlEmaplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR.tagnum = -1 ;
  G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__LendaDictLN_reverse_iteratorlEvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR.tagnum = -1 ;
  G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__LendaDictLN_reverse_iteratorlEvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableLendaDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_string);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_maplEunsignedsPintcOpairlEdoublecOdoublegRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOpairlEdoublecOdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_ddasChannel),sizeof(ddasChannel),-1,294656,(char*)NULL,G__setup_memvarddasChannel,G__setup_memfuncddasChannel);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_ddasEvent),sizeof(ddasEvent),-1,294656,(char*)NULL,G__setup_memvarddasEvent,G__setup_memfuncddasEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR),sizeof(vector<ddasChannel*,allocator<ddasChannel*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR,G__setup_memfuncvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_reverse_iteratorlEvectorlEddasChannelmUcOallocatorlEddasChannelmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_lendaChannel),sizeof(lendaChannel),-1,292096,(char*)NULL,G__setup_memvarlendaChannel,G__setup_memfunclendaChannel);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_lendaBar),sizeof(lendaBar),-1,324864,(char*)NULL,G__setup_memvarlendaBar,G__setup_memfunclendaBar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgR),sizeof(vector<lendaChannel,allocator<lendaChannel> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElendaChannelcOallocatorlElendaChannelgRsPgR,G__setup_memfuncvectorlElendaChannelcOallocatorlElendaChannelgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelcOallocatorlElendaChannelgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_lendaEvent),sizeof(lendaEvent),-1,291072,(char*)NULL,G__setup_memvarlendaEvent,G__setup_memfunclendaEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgR),sizeof(vector<lendaBar,allocator<lendaBar> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElendaBarcOallocatorlElendaBargRsPgR,G__setup_memfuncvectorlElendaBarcOallocatorlElendaBargRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarcOallocatorlElendaBargRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_lendaFilter),sizeof(lendaFilter),-1,292096,(char*)NULL,G__setup_memvarlendaFilter,G__setup_memfunclendaFilter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_lendaSettings),sizeof(lendaSettings),-1,324864,(char*)NULL,G__setup_memvarlendaSettings,G__setup_memfunclendaSettings);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_mapInfo),sizeof(mapInfo),-1,262400,(char*)NULL,G__setup_memvarmapInfo,G__setup_memfuncmapInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_lendaPacker),sizeof(lendaPacker),-1,296192,(char*)NULL,G__setup_memvarlendaPacker,G__setup_memfunclendaPacker);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_maplEintcOmapInfocOlesslEintgRcOallocatorlEpairlEconstsPintcOmapInfogRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_maplEstringcOlendaBarcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlendaBargRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_multimaplEintcOrefTimeContainercOlesslEintgRcOallocatorlEpairlEconstsPintcOrefTimeContainergRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR),sizeof(vector<lendaChannel*,allocator<lendaChannel*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR,G__setup_memfuncvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_reverse_iteratorlEvectorlElendaChannelmUcOallocatorlElendaChannelmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),sizeof(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),sizeof(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_lesslEvectorlEintcOallocatorlEintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_allocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR),sizeof(map<vector<int,allocator<int> >,double,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,double> > >),-1,298752,(char*)NULL,G__setup_memvarmaplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR,G__setup_memfuncmaplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_pairlEvectorlEintcOallocatorlEintgRsPgRcOdoublegR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_pairlEmaplEvectorlEintcOallocatorlEintgRsPgRcOdoublecOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOdoublegRsPgRsPgRcLcLiteratorcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR),sizeof(vector<lendaBar*,allocator<lendaBar*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR,G__setup_memfuncvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_reverse_iteratorlEvectorlElendaBarmUcOallocatorlElendaBarmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR),sizeof(vector<lendaSettings*,allocator<lendaSettings*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR,G__setup_memfuncvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_vectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LendaDictLN_reverse_iteratorlEvectorlElendaSettingsmUcOallocatorlElendaSettingsmUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupLendaDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupLendaDict()");
  G__set_cpp_environmentLendaDict();
  G__cpp_setup_tagtableLendaDict();

  G__cpp_setup_inheritanceLendaDict();

  G__cpp_setup_typetableLendaDict();

  G__cpp_setup_memvarLendaDict();

  G__cpp_setup_memfuncLendaDict();
  G__cpp_setup_globalLendaDict();
  G__cpp_setup_funcLendaDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncLendaDict();
  return;
}
class G__cpp_setup_initLendaDict {
  public:
    G__cpp_setup_initLendaDict() { G__add_setup_func("LendaDict",(G__incsetup)(&G__cpp_setupLendaDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initLendaDict() { G__remove_setup_func("LendaDict"); }
};
G__cpp_setup_initLendaDict G__cpp_setup_initializerLendaDict;

