//
// File generated by rootcint at Thu Sep  8 12:06:27 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIphosWallDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "phosWallDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Coeffs Coeffs;
      #else
      class Coeffs  {
         public:
         //friend XX;
         int up; //
         int dn; //
         int lf; //
         int rt; //
         int uL; //
         int uR; //
         int dL; //
         int dR; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Pars Pars;
      #else
      class Pars  {
         public:
         //friend XX;
         float axL; //
         float bxL; //
         float axR; //
         float bxR; //
         float ayD; //
         float byD; //
         float ayU; //
         float byU; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Coeff Coeff;
      #else
      class Coeff  {
         public:
         //friend XX;
         float x1; //Slope */
         float x0; //Offset */
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::hitEvent hitEvent;
      #else
      class hitEvent  {
         public:
         //friend XX;
         int pixel; //
         int det; //
         int A; //
         int B; //
         int C; //
         int T; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::calEvent calEvent;
      #else
      class calEvent  {
         public:
         //friend XX;
         int pixel; //
         float A; //
         float B; //
         float C; //
         float T; //
         ::TVector3 Vec; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::auxHit auxHit;
      #else
      class auxHit  {
         public:
         //friend XX;
         int channel; //
         int value; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void phosWallFull_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_phosWallFull(void *p = 0);
   static void *newArray_phosWallFull(Long_t size, void *p);
   static void delete_phosWallFull(void *p);
   static void deleteArray_phosWallFull(void *p);
   static void destruct_phosWallFull(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::phosWallFull*)
   {
      ::phosWallFull *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::phosWallFull >(0);
      static ::ROOT::TGenericClassInfo 
         instance("phosWallFull", ::phosWallFull::Class_Version(), "./src/PhosWall.h", 191,
                  typeid(::phosWallFull), DefineBehavior(ptr, ptr),
                  &::phosWallFull::Dictionary, isa_proxy, 4,
                  sizeof(::phosWallFull) );
      instance.SetNew(&new_phosWallFull);
      instance.SetNewArray(&newArray_phosWallFull);
      instance.SetDelete(&delete_phosWallFull);
      instance.SetDeleteArray(&deleteArray_phosWallFull);
      instance.SetDestructor(&destruct_phosWallFull);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::phosWallFull*)
   {
      return GenerateInitInstanceLocal((::phosWallFull*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::phosWallFull*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Coeffs_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Coeffs_Dictionary();
   static void *new_Coeffs(void *p = 0);
   static void *newArray_Coeffs(Long_t size, void *p);
   static void delete_Coeffs(void *p);
   static void deleteArray_Coeffs(void *p);
   static void destruct_Coeffs(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Coeffs*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Coeffs) == sizeof(::ROOT::Shadow::Coeffs));
      ::Coeffs *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Coeffs),0);
      static ::ROOT::TGenericClassInfo 
         instance("Coeffs", "./src/PhosWall.h", 32,
                  typeid(::Coeffs), DefineBehavior(ptr, ptr),
                  &Coeffs_ShowMembers, &Coeffs_Dictionary, isa_proxy, 4,
                  sizeof(::Coeffs) );
      instance.SetNew(&new_Coeffs);
      instance.SetNewArray(&newArray_Coeffs);
      instance.SetDelete(&delete_Coeffs);
      instance.SetDeleteArray(&deleteArray_Coeffs);
      instance.SetDestructor(&destruct_Coeffs);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Coeffs*)
   {
      return GenerateInitInstanceLocal((::Coeffs*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Coeffs*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Coeffs_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::Coeffs*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void Pars_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Pars_Dictionary();
   static void *new_Pars(void *p = 0);
   static void *newArray_Pars(Long_t size, void *p);
   static void delete_Pars(void *p);
   static void deleteArray_Pars(void *p);
   static void destruct_Pars(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Pars*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Pars) == sizeof(::ROOT::Shadow::Pars));
      ::Pars *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Pars),0);
      static ::ROOT::TGenericClassInfo 
         instance("Pars", "./src/PhosWall.h", 38,
                  typeid(::Pars), DefineBehavior(ptr, ptr),
                  &Pars_ShowMembers, &Pars_Dictionary, isa_proxy, 4,
                  sizeof(::Pars) );
      instance.SetNew(&new_Pars);
      instance.SetNewArray(&newArray_Pars);
      instance.SetDelete(&delete_Pars);
      instance.SetDeleteArray(&deleteArray_Pars);
      instance.SetDestructor(&destruct_Pars);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Pars*)
   {
      return GenerateInitInstanceLocal((::Pars*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Pars*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Pars_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::Pars*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void Coordinates_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Coordinates(void *p = 0);
   static void *newArray_Coordinates(Long_t size, void *p);
   static void delete_Coordinates(void *p);
   static void deleteArray_Coordinates(void *p);
   static void destruct_Coordinates(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Coordinates*)
   {
      ::Coordinates *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Coordinates >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Coordinates", ::Coordinates::Class_Version(), "./src/PhosWall.h", 42,
                  typeid(::Coordinates), DefineBehavior(ptr, ptr),
                  &::Coordinates::Dictionary, isa_proxy, 4,
                  sizeof(::Coordinates) );
      instance.SetNew(&new_Coordinates);
      instance.SetNewArray(&newArray_Coordinates);
      instance.SetDelete(&delete_Coordinates);
      instance.SetDeleteArray(&deleteArray_Coordinates);
      instance.SetDestructor(&destruct_Coordinates);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Coordinates*)
   {
      return GenerateInitInstanceLocal((::Coordinates*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Coordinates*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Neighbours_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Neighbours(void *p = 0);
   static void *newArray_Neighbours(Long_t size, void *p);
   static void delete_Neighbours(void *p);
   static void deleteArray_Neighbours(void *p);
   static void destruct_Neighbours(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Neighbours*)
   {
      ::Neighbours *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Neighbours >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Neighbours", ::Neighbours::Class_Version(), "./src/PhosWall.h", 59,
                  typeid(::Neighbours), DefineBehavior(ptr, ptr),
                  &::Neighbours::Dictionary, isa_proxy, 4,
                  sizeof(::Neighbours) );
      instance.SetNew(&new_Neighbours);
      instance.SetNewArray(&newArray_Neighbours);
      instance.SetDelete(&delete_Neighbours);
      instance.SetDeleteArray(&deleteArray_Neighbours);
      instance.SetDestructor(&destruct_Neighbours);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Neighbours*)
   {
      return GenerateInitInstanceLocal((::Neighbours*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Neighbours*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Coeff_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Coeff_Dictionary();
   static void *new_Coeff(void *p = 0);
   static void *newArray_Coeff(Long_t size, void *p);
   static void delete_Coeff(void *p);
   static void deleteArray_Coeff(void *p);
   static void destruct_Coeff(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Coeff*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Coeff) == sizeof(::ROOT::Shadow::Coeff));
      ::Coeff *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Coeff),0);
      static ::ROOT::TGenericClassInfo 
         instance("Coeff", "./src/PhosWall.h", 78,
                  typeid(::Coeff), DefineBehavior(ptr, ptr),
                  &Coeff_ShowMembers, &Coeff_Dictionary, isa_proxy, 4,
                  sizeof(::Coeff) );
      instance.SetNew(&new_Coeff);
      instance.SetNewArray(&newArray_Coeff);
      instance.SetDelete(&delete_Coeff);
      instance.SetDeleteArray(&deleteArray_Coeff);
      instance.SetDestructor(&destruct_Coeff);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Coeff*)
   {
      return GenerateInitInstanceLocal((::Coeff*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Coeff*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Coeff_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::Coeff*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void Calibrate_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Calibrate(void *p = 0);
   static void *newArray_Calibrate(Long_t size, void *p);
   static void delete_Calibrate(void *p);
   static void deleteArray_Calibrate(void *p);
   static void destruct_Calibrate(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Calibrate*)
   {
      ::Calibrate *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Calibrate >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Calibrate", ::Calibrate::Class_Version(), "./src/PhosWall.h", 83,
                  typeid(::Calibrate), DefineBehavior(ptr, ptr),
                  &::Calibrate::Dictionary, isa_proxy, 4,
                  sizeof(::Calibrate) );
      instance.SetNew(&new_Calibrate);
      instance.SetNewArray(&newArray_Calibrate);
      instance.SetDelete(&delete_Calibrate);
      instance.SetDeleteArray(&deleteArray_Calibrate);
      instance.SetDestructor(&destruct_Calibrate);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Calibrate*)
   {
      return GenerateInitInstanceLocal((::Calibrate*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Calibrate*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void GainMatch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GainMatch(void *p = 0);
   static void *newArray_GainMatch(Long_t size, void *p);
   static void delete_GainMatch(void *p);
   static void deleteArray_GainMatch(void *p);
   static void destruct_GainMatch(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GainMatch*)
   {
      ::GainMatch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GainMatch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GainMatch", ::GainMatch::Class_Version(), "./src/PhosWall.h", 99,
                  typeid(::GainMatch), DefineBehavior(ptr, ptr),
                  &::GainMatch::Dictionary, isa_proxy, 4,
                  sizeof(::GainMatch) );
      instance.SetNew(&new_GainMatch);
      instance.SetNewArray(&newArray_GainMatch);
      instance.SetDelete(&delete_GainMatch);
      instance.SetDeleteArray(&deleteArray_GainMatch);
      instance.SetDestructor(&destruct_GainMatch);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GainMatch*)
   {
      return GenerateInitInstanceLocal((::GainMatch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GainMatch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void hitEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void hitEvent_Dictionary();
   static void *new_hitEvent(void *p = 0);
   static void *newArray_hitEvent(Long_t size, void *p);
   static void delete_hitEvent(void *p);
   static void deleteArray_hitEvent(void *p);
   static void destruct_hitEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::hitEvent*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::hitEvent) == sizeof(::ROOT::Shadow::hitEvent));
      ::hitEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::hitEvent),0);
      static ::ROOT::TGenericClassInfo 
         instance("hitEvent", "./src/PhosWall.h", 115,
                  typeid(::hitEvent), DefineBehavior(ptr, ptr),
                  &hitEvent_ShowMembers, &hitEvent_Dictionary, isa_proxy, 4,
                  sizeof(::hitEvent) );
      instance.SetNew(&new_hitEvent);
      instance.SetNewArray(&newArray_hitEvent);
      instance.SetDelete(&delete_hitEvent);
      instance.SetDeleteArray(&deleteArray_hitEvent);
      instance.SetDestructor(&destruct_hitEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::hitEvent*)
   {
      return GenerateInitInstanceLocal((::hitEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::hitEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void hitEvent_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::hitEvent*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void phosWallRaw_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_phosWallRaw(void *p = 0);
   static void *newArray_phosWallRaw(Long_t size, void *p);
   static void delete_phosWallRaw(void *p);
   static void deleteArray_phosWallRaw(void *p);
   static void destruct_phosWallRaw(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::phosWallRaw*)
   {
      ::phosWallRaw *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::phosWallRaw >(0);
      static ::ROOT::TGenericClassInfo 
         instance("phosWallRaw", ::phosWallRaw::Class_Version(), "./src/PhosWall.h", 121,
                  typeid(::phosWallRaw), DefineBehavior(ptr, ptr),
                  &::phosWallRaw::Dictionary, isa_proxy, 4,
                  sizeof(::phosWallRaw) );
      instance.SetNew(&new_phosWallRaw);
      instance.SetNewArray(&newArray_phosWallRaw);
      instance.SetDelete(&delete_phosWallRaw);
      instance.SetDeleteArray(&deleteArray_phosWallRaw);
      instance.SetDestructor(&destruct_phosWallRaw);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::phosWallRaw*)
   {
      return GenerateInitInstanceLocal((::phosWallRaw*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::phosWallRaw*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void calEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void calEvent_Dictionary();
   static void *new_calEvent(void *p = 0);
   static void *newArray_calEvent(Long_t size, void *p);
   static void delete_calEvent(void *p);
   static void deleteArray_calEvent(void *p);
   static void destruct_calEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::calEvent*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::calEvent) == sizeof(::ROOT::Shadow::calEvent));
      ::calEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::calEvent),0);
      static ::ROOT::TGenericClassInfo 
         instance("calEvent", "./src/PhosWall.h", 135,
                  typeid(::calEvent), DefineBehavior(ptr, ptr),
                  &calEvent_ShowMembers, &calEvent_Dictionary, isa_proxy, 4,
                  sizeof(::calEvent) );
      instance.SetNew(&new_calEvent);
      instance.SetNewArray(&newArray_calEvent);
      instance.SetDelete(&delete_calEvent);
      instance.SetDeleteArray(&deleteArray_calEvent);
      instance.SetDestructor(&destruct_calEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::calEvent*)
   {
      return GenerateInitInstanceLocal((::calEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::calEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void calEvent_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::calEvent*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void phosWallCalc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_phosWallCalc(void *p = 0);
   static void *newArray_phosWallCalc(Long_t size, void *p);
   static void delete_phosWallCalc(void *p);
   static void deleteArray_phosWallCalc(void *p);
   static void destruct_phosWallCalc(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::phosWallCalc*)
   {
      ::phosWallCalc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::phosWallCalc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("phosWallCalc", ::phosWallCalc::Class_Version(), "./src/PhosWall.h", 141,
                  typeid(::phosWallCalc), DefineBehavior(ptr, ptr),
                  &::phosWallCalc::Dictionary, isa_proxy, 4,
                  sizeof(::phosWallCalc) );
      instance.SetNew(&new_phosWallCalc);
      instance.SetNewArray(&newArray_phosWallCalc);
      instance.SetDelete(&delete_phosWallCalc);
      instance.SetDeleteArray(&deleteArray_phosWallCalc);
      instance.SetDestructor(&destruct_phosWallCalc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::phosWallCalc*)
   {
      return GenerateInitInstanceLocal((::phosWallCalc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::phosWallCalc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void auxHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void auxHit_Dictionary();
   static void *new_auxHit(void *p = 0);
   static void *newArray_auxHit(Long_t size, void *p);
   static void delete_auxHit(void *p);
   static void deleteArray_auxHit(void *p);
   static void destruct_auxHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::auxHit*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::auxHit) == sizeof(::ROOT::Shadow::auxHit));
      ::auxHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::auxHit),0);
      static ::ROOT::TGenericClassInfo 
         instance("auxHit", "./src/PhosWall.h", 173,
                  typeid(::auxHit), DefineBehavior(ptr, ptr),
                  &auxHit_ShowMembers, &auxHit_Dictionary, isa_proxy, 4,
                  sizeof(::auxHit) );
      instance.SetNew(&new_auxHit);
      instance.SetNewArray(&newArray_auxHit);
      instance.SetDelete(&delete_auxHit);
      instance.SetDeleteArray(&deleteArray_auxHit);
      instance.SetDestructor(&destruct_auxHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::auxHit*)
   {
      return GenerateInitInstanceLocal((::auxHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::auxHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void auxHit_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::auxHit*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void phosWallAux_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_phosWallAux(void *p = 0);
   static void *newArray_phosWallAux(Long_t size, void *p);
   static void delete_phosWallAux(void *p);
   static void deleteArray_phosWallAux(void *p);
   static void destruct_phosWallAux(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::phosWallAux*)
   {
      ::phosWallAux *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::phosWallAux >(0);
      static ::ROOT::TGenericClassInfo 
         instance("phosWallAux", ::phosWallAux::Class_Version(), "./src/PhosWall.h", 178,
                  typeid(::phosWallAux), DefineBehavior(ptr, ptr),
                  &::phosWallAux::Dictionary, isa_proxy, 4,
                  sizeof(::phosWallAux) );
      instance.SetNew(&new_phosWallAux);
      instance.SetNewArray(&newArray_phosWallAux);
      instance.SetDelete(&delete_phosWallAux);
      instance.SetDeleteArray(&deleteArray_phosWallAux);
      instance.SetDestructor(&destruct_phosWallAux);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::phosWallAux*)
   {
      return GenerateInitInstanceLocal((::phosWallAux*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::phosWallAux*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *phosWallFull::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *phosWallFull::Class_Name()
{
   return "phosWallFull";
}

//______________________________________________________________________________
const char *phosWallFull::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::phosWallFull*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int phosWallFull::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::phosWallFull*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void phosWallFull::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::phosWallFull*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *phosWallFull::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::phosWallFull*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Coordinates::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Coordinates::Class_Name()
{
   return "Coordinates";
}

//______________________________________________________________________________
const char *Coordinates::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Coordinates*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Coordinates::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Coordinates*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Coordinates::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Coordinates*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Coordinates::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Coordinates*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Neighbours::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Neighbours::Class_Name()
{
   return "Neighbours";
}

//______________________________________________________________________________
const char *Neighbours::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Neighbours*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Neighbours::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Neighbours*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Neighbours::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Neighbours*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Neighbours::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Neighbours*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Calibrate::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Calibrate::Class_Name()
{
   return "Calibrate";
}

//______________________________________________________________________________
const char *Calibrate::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Calibrate*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Calibrate::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Calibrate*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Calibrate::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Calibrate*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Calibrate::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Calibrate*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *GainMatch::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GainMatch::Class_Name()
{
   return "GainMatch";
}

//______________________________________________________________________________
const char *GainMatch::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GainMatch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GainMatch::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GainMatch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GainMatch::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GainMatch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GainMatch::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GainMatch*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *phosWallRaw::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *phosWallRaw::Class_Name()
{
   return "phosWallRaw";
}

//______________________________________________________________________________
const char *phosWallRaw::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::phosWallRaw*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int phosWallRaw::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::phosWallRaw*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void phosWallRaw::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::phosWallRaw*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *phosWallRaw::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::phosWallRaw*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *phosWallCalc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *phosWallCalc::Class_Name()
{
   return "phosWallCalc";
}

//______________________________________________________________________________
const char *phosWallCalc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::phosWallCalc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int phosWallCalc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::phosWallCalc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void phosWallCalc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::phosWallCalc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *phosWallCalc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::phosWallCalc*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *phosWallAux::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *phosWallAux::Class_Name()
{
   return "phosWallAux";
}

//______________________________________________________________________________
const char *phosWallAux::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::phosWallAux*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int phosWallAux::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::phosWallAux*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void phosWallAux::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::phosWallAux*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *phosWallAux::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::phosWallAux*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Coordinates::Streamer(TBuffer &R__b)
{
   // Stream an object of class Coordinates.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Coordinates::Class(),this);
   } else {
      R__b.WriteClassBuffer(Coordinates::Class(),this);
   }
}

//______________________________________________________________________________
void Coordinates::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Coordinates.
      TClass *R__cl = ::Coordinates::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CM", &CM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cm", &cm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a", &a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b", &b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c", &c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pars", &pars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTele", &nTele);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPix", &nPix);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Coordinates(void *p) {
      return  p ? new(p) ::Coordinates : new ::Coordinates;
   }
   static void *newArray_Coordinates(Long_t nElements, void *p) {
      return p ? new(p) ::Coordinates[nElements] : new ::Coordinates[nElements];
   }
   // Wrapper around operator delete
   static void delete_Coordinates(void *p) {
      delete ((::Coordinates*)p);
   }
   static void deleteArray_Coordinates(void *p) {
      delete [] ((::Coordinates*)p);
   }
   static void destruct_Coordinates(void *p) {
      typedef ::Coordinates current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Coordinates

//______________________________________________________________________________
void Neighbours::Streamer(TBuffer &R__b)
{
   // Stream an object of class Neighbours.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Neighbours::Class(),this);
   } else {
      R__b.WriteClassBuffer(Neighbours::Class(),this);
   }
}

//______________________________________________________________________________
void Neighbours::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Neighbours.
      TClass *R__cl = ::Neighbours::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPix", &nPix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTele", &nTele);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*coeffs", &coeffs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*coor", &coor);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Neighbours(void *p) {
      return  p ? new(p) ::Neighbours : new ::Neighbours;
   }
   static void *newArray_Neighbours(Long_t nElements, void *p) {
      return p ? new(p) ::Neighbours[nElements] : new ::Neighbours[nElements];
   }
   // Wrapper around operator delete
   static void delete_Neighbours(void *p) {
      delete ((::Neighbours*)p);
   }
   static void deleteArray_Neighbours(void *p) {
      delete [] ((::Neighbours*)p);
   }
   static void destruct_Neighbours(void *p) {
      typedef ::Neighbours current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Neighbours

//______________________________________________________________________________
void Calibrate::Streamer(TBuffer &R__b)
{
   // Stream an object of class Calibrate.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Calibrate::Class(),this);
   } else {
      R__b.WriteClassBuffer(Calibrate::Class(),this);
   }
}

//______________________________________________________________________________
void Calibrate::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Calibrate.
      TClass *R__cl = ::Calibrate::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTele", &nTele);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPix", &nPix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*coeff", &coeff);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Calibrate(void *p) {
      return  p ? new(p) ::Calibrate : new ::Calibrate;
   }
   static void *newArray_Calibrate(Long_t nElements, void *p) {
      return p ? new(p) ::Calibrate[nElements] : new ::Calibrate[nElements];
   }
   // Wrapper around operator delete
   static void delete_Calibrate(void *p) {
      delete ((::Calibrate*)p);
   }
   static void deleteArray_Calibrate(void *p) {
      delete [] ((::Calibrate*)p);
   }
   static void destruct_Calibrate(void *p) {
      typedef ::Calibrate current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Calibrate

//______________________________________________________________________________
void GainMatch::Streamer(TBuffer &R__b)
{
   // Stream an object of class GainMatch.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GainMatch::Class(),this);
   } else {
      R__b.WriteClassBuffer(GainMatch::Class(),this);
   }
}

//______________________________________________________________________________
void GainMatch::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GainMatch.
      TClass *R__cl = ::GainMatch::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTele", &nTele);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPix", &nPix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*coeff", &coeff);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GainMatch(void *p) {
      return  p ? new(p) ::GainMatch : new ::GainMatch;
   }
   static void *newArray_GainMatch(Long_t nElements, void *p) {
      return p ? new(p) ::GainMatch[nElements] : new ::GainMatch[nElements];
   }
   // Wrapper around operator delete
   static void delete_GainMatch(void *p) {
      delete ((::GainMatch*)p);
   }
   static void deleteArray_GainMatch(void *p) {
      delete [] ((::GainMatch*)p);
   }
   static void destruct_GainMatch(void *p) {
      typedef ::GainMatch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GainMatch

//______________________________________________________________________________
void phosWallRaw::Streamer(TBuffer &R__b)
{
   // Stream an object of class phosWallRaw.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(phosWallRaw::Class(),this);
   } else {
      R__b.WriteClassBuffer(phosWallRaw::Class(),this);
   }
}

//______________________________________________________________________________
void phosWallRaw::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class phosWallRaw.
      TClass *R__cl = ::phosWallRaw::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hit", (void*)&hit);
      R__insp.InspectMember("vector<hitEvent>", (void*)&hit, "hit.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_phosWallRaw(void *p) {
      return  p ? new(p) ::phosWallRaw : new ::phosWallRaw;
   }
   static void *newArray_phosWallRaw(Long_t nElements, void *p) {
      return p ? new(p) ::phosWallRaw[nElements] : new ::phosWallRaw[nElements];
   }
   // Wrapper around operator delete
   static void delete_phosWallRaw(void *p) {
      delete ((::phosWallRaw*)p);
   }
   static void deleteArray_phosWallRaw(void *p) {
      delete [] ((::phosWallRaw*)p);
   }
   static void destruct_phosWallRaw(void *p) {
      typedef ::phosWallRaw current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::phosWallRaw

//______________________________________________________________________________
void phosWallCalc::Streamer(TBuffer &R__b)
{
   // Stream an object of class phosWallCalc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(phosWallCalc::Class(),this);
   } else {
      R__b.WriteClassBuffer(phosWallCalc::Class(),this);
   }
}

//______________________________________________________________________________
void phosWallCalc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class phosWallCalc.
      TClass *R__cl = ::phosWallCalc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hit", (void*)&hit);
      R__insp.InspectMember("vector<calEvent>", (void*)&hit, "hit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hugeA", &hugeA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hugeB", &hugeB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hugeC", &hugeC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uA", &uA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dA", &dA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lA", &lA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rA", &rA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uF", &uF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dF", &dF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lF", &lF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rF", &rF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ulA", &ulA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "urA", &urA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dlA", &dlA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "drA", &drA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ulF", &ulF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "urF", &urF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dlF", &dlF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "drF", &drF);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_phosWallCalc(void *p) {
      return  p ? new(p) ::phosWallCalc : new ::phosWallCalc;
   }
   static void *newArray_phosWallCalc(Long_t nElements, void *p) {
      return p ? new(p) ::phosWallCalc[nElements] : new ::phosWallCalc[nElements];
   }
   // Wrapper around operator delete
   static void delete_phosWallCalc(void *p) {
      delete ((::phosWallCalc*)p);
   }
   static void deleteArray_phosWallCalc(void *p) {
      delete [] ((::phosWallCalc*)p);
   }
   static void destruct_phosWallCalc(void *p) {
      typedef ::phosWallCalc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::phosWallCalc

//______________________________________________________________________________
void phosWallAux::Streamer(TBuffer &R__b)
{
   // Stream an object of class phosWallAux.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(phosWallAux::Class(),this);
   } else {
      R__b.WriteClassBuffer(phosWallAux::Class(),this);
   }
}

//______________________________________________________________________________
void phosWallAux::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class phosWallAux.
      TClass *R__cl = ::phosWallAux::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qdc", (void*)&qdc);
      R__insp.InspectMember("vector<auxHit>", (void*)&qdc, "qdc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc", (void*)&tdc);
      R__insp.InspectMember("vector<auxHit>", (void*)&tdc, "tdc.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_phosWallAux(void *p) {
      return  p ? new(p) ::phosWallAux : new ::phosWallAux;
   }
   static void *newArray_phosWallAux(Long_t nElements, void *p) {
      return p ? new(p) ::phosWallAux[nElements] : new ::phosWallAux[nElements];
   }
   // Wrapper around operator delete
   static void delete_phosWallAux(void *p) {
      delete ((::phosWallAux*)p);
   }
   static void deleteArray_phosWallAux(void *p) {
      delete [] ((::phosWallAux*)p);
   }
   static void destruct_phosWallAux(void *p) {
      typedef ::phosWallAux current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::phosWallAux

//______________________________________________________________________________
void phosWallFull::Streamer(TBuffer &R__b)
{
   // Stream an object of class phosWallFull.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(phosWallFull::Class(),this);
   } else {
      R__b.WriteClassBuffer(phosWallFull::Class(),this);
   }
}

//______________________________________________________________________________
void phosWallFull::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class phosWallFull.
      TClass *R__cl = ::phosWallFull::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "buf[2048]", buf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "raw", &raw);
      R__insp.InspectMember(raw, "raw.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calc", &calc);
      R__insp.InspectMember(calc, "calc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "aux", &aux);
      R__insp.InspectMember(aux, "aux.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dataType", &dataType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "showSetup", &showSetup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doPrinting", &doPrinting);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deBug", &deBug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LRDU", &LRDU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pixOrder", &pixOrder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minNeighbours", &minNeighbours);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tLow", &tLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tHigh", &tHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "noTimes", &noTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxCheck", &maxCheck);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coefFileA", &coefFileA);
      R__insp.InspectMember(coefFileA, "coefFileA.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coefFileB", &coefFileB);
      R__insp.InspectMember(coefFileB, "coefFileB.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coefFileC", &coefFileC);
      R__insp.InspectMember(coefFileC, "coefFileC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coefFileT", &coefFileT);
      R__insp.InspectMember(coefFileT, "coefFileT.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coefFileAg", &coefFileAg);
      R__insp.InspectMember(coefFileAg, "coefFileAg.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coefFileBg", &coefFileBg);
      R__insp.InspectMember(coefFileBg, "coefFileBg.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coefFileCg", &coefFileCg);
      R__insp.InspectMember(coefFileCg, "coefFileCg.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coordFile", &coordFile);
      R__insp.InspectMember(coordFile, "coordFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neighbourFile", &neighbourFile);
      R__insp.InspectMember(neighbourFile, "neighbourFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "failCount", &failCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Am", &Am);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Bm", &Bm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Cm", &Cm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Tm", &Tm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Ag", &Ag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Bg", &Bg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Cg", &Cg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myCoor", &myCoor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventNum", &eventNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "oobEvents", &oobEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "oneEvents", &oneEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "badEvents", &badEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neighbourhood[256][9]", neighbourhood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeGates[256][3]", timeGates);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pWallPositions", (void*)&pWallPositions);
      R__insp.InspectMember("map<int,TVector3*>", (void*)&pWallPositions, "pWallPositions.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_phosWallFull(void *p) {
      return  p ? new(p) ::phosWallFull : new ::phosWallFull;
   }
   static void *newArray_phosWallFull(Long_t nElements, void *p) {
      return p ? new(p) ::phosWallFull[nElements] : new ::phosWallFull[nElements];
   }
   // Wrapper around operator delete
   static void delete_phosWallFull(void *p) {
      delete ((::phosWallFull*)p);
   }
   static void deleteArray_phosWallFull(void *p) {
      delete [] ((::phosWallFull*)p);
   }
   static void destruct_phosWallFull(void *p) {
      typedef ::phosWallFull current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::phosWallFull

//______________________________________________________________________________
namespace ROOT {
   void Coeffs_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Coeffs.
      typedef ::ROOT::Shadow::Coeffs ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::Coeffs*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up", &sobj->up);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dn", &sobj->dn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lf", &sobj->lf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rt", &sobj->rt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uL", &sobj->uL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "uR", &sobj->uR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dL", &sobj->dL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dR", &sobj->dR);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Coeffs(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Coeffs : new ::Coeffs;
   }
   static void *newArray_Coeffs(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Coeffs[nElements] : new ::Coeffs[nElements];
   }
   // Wrapper around operator delete
   static void delete_Coeffs(void *p) {
      delete ((::Coeffs*)p);
   }
   static void deleteArray_Coeffs(void *p) {
      delete [] ((::Coeffs*)p);
   }
   static void destruct_Coeffs(void *p) {
      typedef ::Coeffs current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Coeffs

//______________________________________________________________________________
namespace ROOT {
   void Pars_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Pars.
      typedef ::ROOT::Shadow::Pars ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::Pars*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "axL", &sobj->axL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bxL", &sobj->bxL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "axR", &sobj->axR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bxR", &sobj->bxR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ayD", &sobj->ayD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byD", &sobj->byD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ayU", &sobj->ayU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byU", &sobj->byU);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Pars(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pars : new ::Pars;
   }
   static void *newArray_Pars(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Pars[nElements] : new ::Pars[nElements];
   }
   // Wrapper around operator delete
   static void delete_Pars(void *p) {
      delete ((::Pars*)p);
   }
   static void deleteArray_Pars(void *p) {
      delete [] ((::Pars*)p);
   }
   static void destruct_Pars(void *p) {
      typedef ::Pars current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Pars

//______________________________________________________________________________
namespace ROOT {
   void Coeff_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Coeff.
      typedef ::ROOT::Shadow::Coeff ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::Coeff*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x1", &sobj->x1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x0", &sobj->x0);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Coeff(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Coeff : new ::Coeff;
   }
   static void *newArray_Coeff(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Coeff[nElements] : new ::Coeff[nElements];
   }
   // Wrapper around operator delete
   static void delete_Coeff(void *p) {
      delete ((::Coeff*)p);
   }
   static void deleteArray_Coeff(void *p) {
      delete [] ((::Coeff*)p);
   }
   static void destruct_Coeff(void *p) {
      typedef ::Coeff current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Coeff

//______________________________________________________________________________
namespace ROOT {
   void hitEvent_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class hitEvent.
      typedef ::ROOT::Shadow::hitEvent ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::hitEvent*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pixel", &sobj->pixel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det", &sobj->det);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "A", &sobj->A);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "B", &sobj->B);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "C", &sobj->C);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T", &sobj->T);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_hitEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::hitEvent : new ::hitEvent;
   }
   static void *newArray_hitEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::hitEvent[nElements] : new ::hitEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_hitEvent(void *p) {
      delete ((::hitEvent*)p);
   }
   static void deleteArray_hitEvent(void *p) {
      delete [] ((::hitEvent*)p);
   }
   static void destruct_hitEvent(void *p) {
      typedef ::hitEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::hitEvent

//______________________________________________________________________________
namespace ROOT {
   void calEvent_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class calEvent.
      typedef ::ROOT::Shadow::calEvent ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::calEvent*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pixel", &sobj->pixel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "A", &sobj->A);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "B", &sobj->B);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "C", &sobj->C);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T", &sobj->T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vec", &sobj->Vec);
      R__insp.InspectMember(sobj->Vec, "Vec.");
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_calEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::calEvent : new ::calEvent;
   }
   static void *newArray_calEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::calEvent[nElements] : new ::calEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_calEvent(void *p) {
      delete ((::calEvent*)p);
   }
   static void deleteArray_calEvent(void *p) {
      delete [] ((::calEvent*)p);
   }
   static void destruct_calEvent(void *p) {
      typedef ::calEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::calEvent

//______________________________________________________________________________
namespace ROOT {
   void auxHit_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class auxHit.
      typedef ::ROOT::Shadow::auxHit ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::auxHit*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &sobj->channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "value", &sobj->value);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_auxHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::auxHit : new ::auxHit;
   }
   static void *newArray_auxHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::auxHit[nElements] : new ::auxHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_auxHit(void *p) {
      delete ((::auxHit*)p);
   }
   static void deleteArray_auxHit(void *p) {
      delete [] ((::auxHit*)p);
   }
   static void destruct_auxHit(void *p) {
      typedef ::auxHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::auxHit

namespace ROOT {
   void maplEintcOTVector3mUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOTVector3mUgR_Dictionary();
   static void *new_maplEintcOTVector3mUgR(void *p = 0);
   static void *newArray_maplEintcOTVector3mUgR(Long_t size, void *p);
   static void delete_maplEintcOTVector3mUgR(void *p);
   static void deleteArray_maplEintcOTVector3mUgR(void *p);
   static void destruct_maplEintcOTVector3mUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,TVector3*>*)
   {
      map<int,TVector3*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,TVector3*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,TVector3*>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<int,TVector3*>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOTVector3mUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,TVector3*>) );
      instance.SetNew(&new_maplEintcOTVector3mUgR);
      instance.SetNewArray(&newArray_maplEintcOTVector3mUgR);
      instance.SetDelete(&delete_maplEintcOTVector3mUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOTVector3mUgR);
      instance.SetDestructor(&destruct_maplEintcOTVector3mUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,TVector3*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,TVector3*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOTVector3mUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,TVector3*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOTVector3mUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TVector3*> : new map<int,TVector3*>;
   }
   static void *newArray_maplEintcOTVector3mUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TVector3*>[nElements] : new map<int,TVector3*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOTVector3mUgR(void *p) {
      delete ((map<int,TVector3*>*)p);
   }
   static void deleteArray_maplEintcOTVector3mUgR(void *p) {
      delete [] ((map<int,TVector3*>*)p);
   }
   static void destruct_maplEintcOTVector3mUgR(void *p) {
      typedef map<int,TVector3*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,TVector3*>

namespace ROOT {
   void vectorlEauxHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEauxHitgR_Dictionary();
   static void *new_vectorlEauxHitgR(void *p = 0);
   static void *newArray_vectorlEauxHitgR(Long_t size, void *p);
   static void delete_vectorlEauxHitgR(void *p);
   static void deleteArray_vectorlEauxHitgR(void *p);
   static void destruct_vectorlEauxHitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<auxHit>*)
   {
      vector<auxHit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<auxHit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<auxHit>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<auxHit>), DefineBehavior(ptr, ptr),
                  0, &vectorlEauxHitgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<auxHit>) );
      instance.SetNew(&new_vectorlEauxHitgR);
      instance.SetNewArray(&newArray_vectorlEauxHitgR);
      instance.SetDelete(&delete_vectorlEauxHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlEauxHitgR);
      instance.SetDestructor(&destruct_vectorlEauxHitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<auxHit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<auxHit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEauxHitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<auxHit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEauxHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<auxHit> : new vector<auxHit>;
   }
   static void *newArray_vectorlEauxHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<auxHit>[nElements] : new vector<auxHit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEauxHitgR(void *p) {
      delete ((vector<auxHit>*)p);
   }
   static void deleteArray_vectorlEauxHitgR(void *p) {
      delete [] ((vector<auxHit>*)p);
   }
   static void destruct_vectorlEauxHitgR(void *p) {
      typedef vector<auxHit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<auxHit>

namespace ROOT {
   void vectorlEcalEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEcalEventgR_Dictionary();
   static void *new_vectorlEcalEventgR(void *p = 0);
   static void *newArray_vectorlEcalEventgR(Long_t size, void *p);
   static void delete_vectorlEcalEventgR(void *p);
   static void deleteArray_vectorlEcalEventgR(void *p);
   static void destruct_vectorlEcalEventgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<calEvent>*)
   {
      vector<calEvent> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<calEvent>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<calEvent>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<calEvent>), DefineBehavior(ptr, ptr),
                  0, &vectorlEcalEventgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<calEvent>) );
      instance.SetNew(&new_vectorlEcalEventgR);
      instance.SetNewArray(&newArray_vectorlEcalEventgR);
      instance.SetDelete(&delete_vectorlEcalEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlEcalEventgR);
      instance.SetDestructor(&destruct_vectorlEcalEventgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<calEvent> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<calEvent>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEcalEventgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<calEvent>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEcalEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<calEvent> : new vector<calEvent>;
   }
   static void *newArray_vectorlEcalEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<calEvent>[nElements] : new vector<calEvent>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEcalEventgR(void *p) {
      delete ((vector<calEvent>*)p);
   }
   static void deleteArray_vectorlEcalEventgR(void *p) {
      delete [] ((vector<calEvent>*)p);
   }
   static void destruct_vectorlEcalEventgR(void *p) {
      typedef vector<calEvent> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<calEvent>

namespace ROOT {
   void vectorlEhitEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEhitEventgR_Dictionary();
   static void *new_vectorlEhitEventgR(void *p = 0);
   static void *newArray_vectorlEhitEventgR(Long_t size, void *p);
   static void delete_vectorlEhitEventgR(void *p);
   static void deleteArray_vectorlEhitEventgR(void *p);
   static void destruct_vectorlEhitEventgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<hitEvent>*)
   {
      vector<hitEvent> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<hitEvent>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<hitEvent>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<hitEvent>), DefineBehavior(ptr, ptr),
                  0, &vectorlEhitEventgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<hitEvent>) );
      instance.SetNew(&new_vectorlEhitEventgR);
      instance.SetNewArray(&newArray_vectorlEhitEventgR);
      instance.SetDelete(&delete_vectorlEhitEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlEhitEventgR);
      instance.SetDestructor(&destruct_vectorlEhitEventgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<hitEvent> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<hitEvent>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEhitEventgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<hitEvent>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEhitEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<hitEvent> : new vector<hitEvent>;
   }
   static void *newArray_vectorlEhitEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<hitEvent>[nElements] : new vector<hitEvent>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEhitEventgR(void *p) {
      delete ((vector<hitEvent>*)p);
   }
   static void deleteArray_vectorlEhitEventgR(void *p) {
      delete [] ((vector<hitEvent>*)p);
   }
   static void destruct_vectorlEhitEventgR(void *p) {
      typedef vector<hitEvent> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<hitEvent>

/********************************************************
* src/phosWallDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablephosWallDict();

extern "C" void G__set_cpp_environmentphosWallDict() {
  G__cpp_reset_tagtablephosWallDict();
}
#include <new>
extern "C" int G__cpp_dllrevphosWallDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* phosWallFull */
static int G__phosWallDict_455_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   phosWallFull* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new phosWallFull[n];
     } else {
       p = new((void*) gvp) phosWallFull[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new phosWallFull;
     } else {
       p = new((void*) gvp) phosWallFull;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_phosWallFull));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallFull*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((phosWallFull*) G__getstructoffset())->InitializeParameters(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallFull*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((phosWallFull*) G__getstructoffset())->getAndUnpackPhosWall((FILE*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((phosWallFull*) G__getstructoffset())->getAndUnpackPhosWallAux((FILE*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallFull*) G__getstructoffset())->ProcessPhosWall();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallFull*) G__getstructoffset())->ProcessPhosWallAux();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((phosWallFull*) G__getstructoffset())->ifExists(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallFull*) G__getstructoffset())->ReadNeighbours(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallFull*) G__getstructoffset())->ReadTimeGates(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((phosWallFull*) G__getstructoffset())->isNeighbour((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((phosWallFull*) G__getstructoffset())->correctNeighbours((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallFull*) G__getstructoffset())->SetPwallPositions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((phosWallFull*) G__getstructoffset())->DetermineNParticles((Float_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) phosWallFull::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) phosWallFull::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) phosWallFull::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      phosWallFull::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallFull*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) phosWallFull::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) phosWallFull::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) phosWallFull::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_455_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) phosWallFull::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_455_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   phosWallFull* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new phosWallFull(*(phosWallFull*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_phosWallFull));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef phosWallFull G__TphosWallFull;
static int G__phosWallDict_455_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (phosWallFull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((phosWallFull*) (soff+(sizeof(phosWallFull)*i)))->~G__TphosWallFull();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (phosWallFull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((phosWallFull*) (soff))->~G__TphosWallFull();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_455_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   phosWallFull* dest = (phosWallFull*) G__getstructoffset();
   *dest = *(phosWallFull*) libp->para[0].ref;
   const phosWallFull& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Coeffs */
// automatic default constructor
static int G__phosWallDict_456_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Coeffs *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Coeffs[n];
     } else {
       p = new((void*) gvp) Coeffs[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Coeffs;
     } else {
       p = new((void*) gvp) Coeffs;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Coeffs));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_456_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Coeffs* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Coeffs(*(Coeffs*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Coeffs));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Coeffs G__TCoeffs;
static int G__phosWallDict_456_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Coeffs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Coeffs*) (soff+(sizeof(Coeffs)*i)))->~G__TCoeffs();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Coeffs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Coeffs*) (soff))->~G__TCoeffs();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_456_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Coeffs* dest = (Coeffs*) G__getstructoffset();
   *dest = *(Coeffs*) libp->para[0].ref;
   const Coeffs& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Pars */
// automatic default constructor
static int G__phosWallDict_457_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pars *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pars[n];
     } else {
       p = new((void*) gvp) Pars[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Pars;
     } else {
       p = new((void*) gvp) Pars;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Pars));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_457_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Pars* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Pars(*(Pars*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Pars));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Pars G__TPars;
static int G__phosWallDict_457_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Pars*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Pars*) (soff+(sizeof(Pars)*i)))->~G__TPars();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Pars*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Pars*) (soff))->~G__TPars();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_457_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Pars* dest = (Pars*) G__getstructoffset();
   *dest = *(Pars*) libp->para[0].ref;
   const Pars& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Coordinates */
static int G__phosWallDict_458_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Coordinates* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Coordinates[n];
     } else {
       p = new((void*) gvp) Coordinates[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Coordinates;
     } else {
       p = new((void*) gvp) Coordinates;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Coordinates));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_458_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Coordinates* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Coordinates(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) Coordinates(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Coordinates));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_458_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Coordinates*) G__getstructoffset())->algo((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_458_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Coordinates::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_458_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Coordinates::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_458_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Coordinates::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_458_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Coordinates::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_458_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Coordinates*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_458_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Coordinates::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_458_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Coordinates::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_458_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Coordinates::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_458_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Coordinates::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_458_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Coordinates* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Coordinates(*(Coordinates*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Coordinates));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Coordinates G__TCoordinates;
static int G__phosWallDict_458_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Coordinates*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Coordinates*) (soff+(sizeof(Coordinates)*i)))->~G__TCoordinates();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Coordinates*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Coordinates*) (soff))->~G__TCoordinates();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_458_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Coordinates* dest = (Coordinates*) G__getstructoffset();
   *dest = *(Coordinates*) libp->para[0].ref;
   const Coordinates& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Neighbours */
static int G__phosWallDict_459_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Neighbours* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Neighbours[n];
     } else {
       p = new((void*) gvp) Neighbours[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Neighbours;
     } else {
       p = new((void*) gvp) Neighbours;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Neighbours));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_459_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Neighbours* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Neighbours(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), (Coordinates*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) Neighbours(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), (Coordinates*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Neighbours));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_459_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Neighbours*) G__getstructoffset())->getBigOne(
(Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Float_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t*) G__int(libp->para[4]), (Float_t*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_459_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Neighbours::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_459_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Neighbours::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_459_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Neighbours::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_459_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Neighbours::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_459_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Neighbours*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_459_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Neighbours::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_459_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Neighbours::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_459_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Neighbours::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_459_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Neighbours::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_459_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Neighbours* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Neighbours(*(Neighbours*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Neighbours));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Neighbours G__TNeighbours;
static int G__phosWallDict_459_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Neighbours*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Neighbours*) (soff+(sizeof(Neighbours)*i)))->~G__TNeighbours();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Neighbours*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Neighbours*) (soff))->~G__TNeighbours();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_459_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Neighbours* dest = (Neighbours*) G__getstructoffset();
   *dest = *(Neighbours*) libp->para[0].ref;
   const Neighbours& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Coeff */
// automatic default constructor
static int G__phosWallDict_460_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Coeff *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Coeff[n];
     } else {
       p = new((void*) gvp) Coeff[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Coeff;
     } else {
       p = new((void*) gvp) Coeff;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Coeff));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_460_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Coeff* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Coeff(*(Coeff*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Coeff));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Coeff G__TCoeff;
static int G__phosWallDict_460_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Coeff*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Coeff*) (soff+(sizeof(Coeff)*i)))->~G__TCoeff();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Coeff*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Coeff*) (soff))->~G__TCoeff();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_460_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Coeff* dest = (Coeff*) G__getstructoffset();
   *dest = *(Coeff*) libp->para[0].ref;
   const Coeff& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Calibrate */
static int G__phosWallDict_461_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Calibrate* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Calibrate[n];
     } else {
       p = new((void*) gvp) Calibrate[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Calibrate;
     } else {
       p = new((void*) gvp) Calibrate;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Calibrate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_461_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Calibrate* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Calibrate(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) Calibrate(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Calibrate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_461_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Calibrate*) G__getstructoffset())->getEnergy((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_461_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Calibrate::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_461_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Calibrate::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_461_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Calibrate::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_461_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Calibrate::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_461_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Calibrate*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_461_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Calibrate::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_461_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Calibrate::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_461_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Calibrate::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_461_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Calibrate::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_461_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Calibrate* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Calibrate(*(Calibrate*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_Calibrate));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Calibrate G__TCalibrate;
static int G__phosWallDict_461_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Calibrate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Calibrate*) (soff+(sizeof(Calibrate)*i)))->~G__TCalibrate();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Calibrate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Calibrate*) (soff))->~G__TCalibrate();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_461_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Calibrate* dest = (Calibrate*) G__getstructoffset();
   *dest = *(Calibrate*) libp->para[0].ref;
   const Calibrate& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GainMatch */
static int G__phosWallDict_462_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GainMatch* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GainMatch[n];
     } else {
       p = new((void*) gvp) GainMatch[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GainMatch;
     } else {
       p = new((void*) gvp) GainMatch;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_GainMatch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_462_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GainMatch* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GainMatch(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) GainMatch(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_GainMatch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_462_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((GainMatch*) G__getstructoffset())->GetGainEnergy((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_462_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GainMatch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_462_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GainMatch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_462_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GainMatch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_462_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GainMatch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_462_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GainMatch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_462_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GainMatch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_462_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GainMatch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_462_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GainMatch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_462_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GainMatch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_462_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GainMatch* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GainMatch(*(GainMatch*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_GainMatch));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GainMatch G__TGainMatch;
static int G__phosWallDict_462_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GainMatch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GainMatch*) (soff+(sizeof(GainMatch)*i)))->~G__TGainMatch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GainMatch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GainMatch*) (soff))->~G__TGainMatch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_462_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GainMatch* dest = (GainMatch*) G__getstructoffset();
   *dest = *(GainMatch*) libp->para[0].ref;
   const GainMatch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* hitEvent */
// automatic default constructor
static int G__phosWallDict_463_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hitEvent *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hitEvent[n];
     } else {
       p = new((void*) gvp) hitEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hitEvent;
     } else {
       p = new((void*) gvp) hitEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_hitEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_463_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   hitEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new hitEvent(*(hitEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_hitEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef hitEvent G__ThitEvent;
static int G__phosWallDict_463_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (hitEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((hitEvent*) (soff+(sizeof(hitEvent)*i)))->~G__ThitEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (hitEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((hitEvent*) (soff))->~G__ThitEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_463_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hitEvent* dest = (hitEvent*) G__getstructoffset();
   *dest = *(hitEvent*) libp->para[0].ref;
   const hitEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* phosWallRaw */
static int G__phosWallDict_464_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   phosWallRaw* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new phosWallRaw[n];
     } else {
       p = new((void*) gvp) phosWallRaw[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new phosWallRaw;
     } else {
       p = new((void*) gvp) phosWallRaw;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_phosWallRaw));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_464_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallRaw*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_464_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallRaw*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_464_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((phosWallRaw*) G__getstructoffset())->nHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_464_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) phosWallRaw::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_464_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) phosWallRaw::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_464_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) phosWallRaw::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_464_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      phosWallRaw::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_464_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallRaw*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_464_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) phosWallRaw::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_464_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) phosWallRaw::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_464_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) phosWallRaw::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_464_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) phosWallRaw::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_464_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   phosWallRaw* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new phosWallRaw(*(phosWallRaw*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_phosWallRaw));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef phosWallRaw G__TphosWallRaw;
static int G__phosWallDict_464_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (phosWallRaw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((phosWallRaw*) (soff+(sizeof(phosWallRaw)*i)))->~G__TphosWallRaw();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (phosWallRaw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((phosWallRaw*) (soff))->~G__TphosWallRaw();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_464_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   phosWallRaw* dest = (phosWallRaw*) G__getstructoffset();
   *dest = *(phosWallRaw*) libp->para[0].ref;
   const phosWallRaw& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<hitEvent,allocator<hitEvent> > */
static int G__phosWallDict_466_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<hitEvent,allocator<hitEvent> >::reference obj = ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->at((vector<hitEvent,allocator<hitEvent> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<hitEvent,allocator<hitEvent> >::const_reference obj = ((const vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->at((vector<hitEvent,allocator<hitEvent> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<hitEvent,allocator<hitEvent> >::iterator* pobj;
         vector<hitEvent,allocator<hitEvent> >::iterator xobj = ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->begin();
         pobj = new vector<hitEvent,allocator<hitEvent> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<hitEvent,allocator<hitEvent> >::iterator* pobj;
         vector<hitEvent,allocator<hitEvent> >::iterator xobj = ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->end();
         pobj = new vector<hitEvent,allocator<hitEvent> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<hitEvent,allocator<hitEvent> >::reverse_iterator* pobj;
         vector<hitEvent,allocator<hitEvent> >::reverse_iterator xobj = ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->rbegin();
         pobj = new vector<hitEvent,allocator<hitEvent> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<hitEvent,allocator<hitEvent> >::reverse_iterator* pobj;
         vector<hitEvent,allocator<hitEvent> >::reverse_iterator xobj = ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->rend();
         pobj = new vector<hitEvent,allocator<hitEvent> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->resize((vector<hitEvent,allocator<hitEvent> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->resize((vector<hitEvent,allocator<hitEvent> >::size_type) G__int(libp->para[0]), *((hitEvent*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<hitEvent,allocator<hitEvent> >::reference obj = ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->operator[]((vector<hitEvent,allocator<hitEvent> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<hitEvent,allocator<hitEvent> >::const_reference obj = ((const vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->operator[]((vector<hitEvent,allocator<hitEvent> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<hitEvent,allocator<hitEvent> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<hitEvent,allocator<hitEvent> >[n];
     } else {
       p = new((void*) gvp) vector<hitEvent,allocator<hitEvent> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<hitEvent,allocator<hitEvent> >;
     } else {
       p = new((void*) gvp) vector<hitEvent,allocator<hitEvent> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<hitEvent,allocator<hitEvent> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<hitEvent,allocator<hitEvent> >((vector<hitEvent,allocator<hitEvent> >::size_type) G__int(libp->para[0]), *(hitEvent*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<hitEvent,allocator<hitEvent> >((vector<hitEvent,allocator<hitEvent> >::size_type) G__int(libp->para[0]), *(hitEvent*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<hitEvent,allocator<hitEvent> >((vector<hitEvent,allocator<hitEvent> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<hitEvent,allocator<hitEvent> >((vector<hitEvent,allocator<hitEvent> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<hitEvent,allocator<hitEvent> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<hitEvent,allocator<hitEvent> >(*(vector<hitEvent,allocator<hitEvent> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<hitEvent,allocator<hitEvent> >(*(vector<hitEvent,allocator<hitEvent> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<hitEvent,allocator<hitEvent> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<hitEvent,allocator<hitEvent> >(*((vector<hitEvent,allocator<hitEvent> >::const_iterator*) G__int(libp->para[0])), *((vector<hitEvent,allocator<hitEvent> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<hitEvent,allocator<hitEvent> >(*((vector<hitEvent,allocator<hitEvent> >::const_iterator*) G__int(libp->para[0])), *((vector<hitEvent,allocator<hitEvent> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<hitEvent,allocator<hitEvent> >& obj = ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->operator=(*(vector<hitEvent,allocator<hitEvent> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->reserve((vector<hitEvent,allocator<hitEvent> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const hitEvent& obj = ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const hitEvent& obj = ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->push_back(*(hitEvent*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->swap(*(vector<hitEvent,allocator<hitEvent> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<hitEvent,allocator<hitEvent> >::iterator* pobj;
         vector<hitEvent,allocator<hitEvent> >::iterator xobj = ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->insert(*((vector<hitEvent,allocator<hitEvent> >::iterator*) G__int(libp->para[0])), *(hitEvent*) libp->para[1].ref);
         pobj = new vector<hitEvent,allocator<hitEvent> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->insert(*((vector<hitEvent,allocator<hitEvent> >::iterator*) G__int(libp->para[0])), *((vector<hitEvent,allocator<hitEvent> >::const_iterator*) G__int(libp->para[1]))
, *((vector<hitEvent,allocator<hitEvent> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->insert(*((vector<hitEvent,allocator<hitEvent> >::iterator*) G__int(libp->para[0])), (vector<hitEvent,allocator<hitEvent> >::size_type) G__int(libp->para[1])
, *(hitEvent*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->erase(*((vector<hitEvent,allocator<hitEvent> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->erase(*((vector<hitEvent,allocator<hitEvent> >::iterator*) G__int(libp->para[0])), *((vector<hitEvent,allocator<hitEvent> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_466_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<hitEvent,allocator<hitEvent> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<hitEvent,allocator<hitEvent> > G__TvectorlEhitEventcOallocatorlEhitEventgRsPgR;
static int G__phosWallDict_466_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<hitEvent,allocator<hitEvent> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<hitEvent,allocator<hitEvent> >*) (soff+(sizeof(vector<hitEvent,allocator<hitEvent> >)*i)))->~G__TvectorlEhitEventcOallocatorlEhitEventgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<hitEvent,allocator<hitEvent> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<hitEvent,allocator<hitEvent> >*) (soff))->~G__TvectorlEhitEventcOallocatorlEhitEventgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* calEvent */
// automatic default constructor
static int G__phosWallDict_469_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   calEvent *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new calEvent[n];
     } else {
       p = new((void*) gvp) calEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new calEvent;
     } else {
       p = new((void*) gvp) calEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_calEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_469_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   calEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new calEvent(*(calEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_calEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef calEvent G__TcalEvent;
static int G__phosWallDict_469_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (calEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((calEvent*) (soff+(sizeof(calEvent)*i)))->~G__TcalEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (calEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((calEvent*) (soff))->~G__TcalEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_469_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   calEvent* dest = (calEvent*) G__getstructoffset();
   *dest = *(calEvent*) libp->para[0].ref;
   const calEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* phosWallCalc */
static int G__phosWallDict_470_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   phosWallCalc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new phosWallCalc[n];
     } else {
       p = new((void*) gvp) phosWallCalc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new phosWallCalc;
     } else {
       p = new((void*) gvp) phosWallCalc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_phosWallCalc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallCalc*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallCalc*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((phosWallCalc*) G__getstructoffset())->biggestA(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((phosWallCalc*) G__getstructoffset())->biggestB(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((phosWallCalc*) G__getstructoffset())->biggestC(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((phosWallCalc*) G__getstructoffset())->biggestT(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((phosWallCalc*) G__getstructoffset())->biggestPixel(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((phosWallCalc*) G__getstructoffset())->biggestPixelPosition(*((TString*) G__int(libp->para[0])));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((phosWallCalc*) G__getstructoffset())->biggestHit(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((phosWallCalc*) G__getstructoffset())->secondBiggestA(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((phosWallCalc*) G__getstructoffset())->secondBiggestB(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((phosWallCalc*) G__getstructoffset())->secondBiggestC(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((phosWallCalc*) G__getstructoffset())->secondBiggestT(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((phosWallCalc*) G__getstructoffset())->secondBiggestPixel(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((phosWallCalc*) G__getstructoffset())->secondBiggestHit(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((phosWallCalc*) G__getstructoffset())->distanceBetweenParticles(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) phosWallCalc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) phosWallCalc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) phosWallCalc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      phosWallCalc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallCalc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) phosWallCalc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) phosWallCalc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) phosWallCalc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_470_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) phosWallCalc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_470_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   phosWallCalc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new phosWallCalc(*(phosWallCalc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_phosWallCalc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef phosWallCalc G__TphosWallCalc;
static int G__phosWallDict_470_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (phosWallCalc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((phosWallCalc*) (soff+(sizeof(phosWallCalc)*i)))->~G__TphosWallCalc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (phosWallCalc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((phosWallCalc*) (soff))->~G__TphosWallCalc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_470_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   phosWallCalc* dest = (phosWallCalc*) G__getstructoffset();
   *dest = *(phosWallCalc*) libp->para[0].ref;
   const phosWallCalc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<calEvent,allocator<calEvent> > */
static int G__phosWallDict_472_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<calEvent,allocator<calEvent> >::reference obj = ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->at((vector<calEvent,allocator<calEvent> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<calEvent,allocator<calEvent> >::const_reference obj = ((const vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->at((vector<calEvent,allocator<calEvent> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<calEvent,allocator<calEvent> >::iterator* pobj;
         vector<calEvent,allocator<calEvent> >::iterator xobj = ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->begin();
         pobj = new vector<calEvent,allocator<calEvent> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<calEvent,allocator<calEvent> >::iterator* pobj;
         vector<calEvent,allocator<calEvent> >::iterator xobj = ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->end();
         pobj = new vector<calEvent,allocator<calEvent> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<calEvent,allocator<calEvent> >::reverse_iterator* pobj;
         vector<calEvent,allocator<calEvent> >::reverse_iterator xobj = ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->rbegin();
         pobj = new vector<calEvent,allocator<calEvent> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<calEvent,allocator<calEvent> >::reverse_iterator* pobj;
         vector<calEvent,allocator<calEvent> >::reverse_iterator xobj = ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->rend();
         pobj = new vector<calEvent,allocator<calEvent> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->resize((vector<calEvent,allocator<calEvent> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->resize((vector<calEvent,allocator<calEvent> >::size_type) G__int(libp->para[0]), *((calEvent*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<calEvent,allocator<calEvent> >::reference obj = ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->operator[]((vector<calEvent,allocator<calEvent> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<calEvent,allocator<calEvent> >::const_reference obj = ((const vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->operator[]((vector<calEvent,allocator<calEvent> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<calEvent,allocator<calEvent> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<calEvent,allocator<calEvent> >[n];
     } else {
       p = new((void*) gvp) vector<calEvent,allocator<calEvent> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<calEvent,allocator<calEvent> >;
     } else {
       p = new((void*) gvp) vector<calEvent,allocator<calEvent> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<calEvent,allocator<calEvent> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<calEvent,allocator<calEvent> >((vector<calEvent,allocator<calEvent> >::size_type) G__int(libp->para[0]), *(calEvent*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<calEvent,allocator<calEvent> >((vector<calEvent,allocator<calEvent> >::size_type) G__int(libp->para[0]), *(calEvent*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<calEvent,allocator<calEvent> >((vector<calEvent,allocator<calEvent> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<calEvent,allocator<calEvent> >((vector<calEvent,allocator<calEvent> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<calEvent,allocator<calEvent> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<calEvent,allocator<calEvent> >(*(vector<calEvent,allocator<calEvent> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<calEvent,allocator<calEvent> >(*(vector<calEvent,allocator<calEvent> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<calEvent,allocator<calEvent> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<calEvent,allocator<calEvent> >(*((vector<calEvent,allocator<calEvent> >::const_iterator*) G__int(libp->para[0])), *((vector<calEvent,allocator<calEvent> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<calEvent,allocator<calEvent> >(*((vector<calEvent,allocator<calEvent> >::const_iterator*) G__int(libp->para[0])), *((vector<calEvent,allocator<calEvent> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<calEvent,allocator<calEvent> >& obj = ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->operator=(*(vector<calEvent,allocator<calEvent> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->reserve((vector<calEvent,allocator<calEvent> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const calEvent& obj = ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const calEvent& obj = ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->push_back(*(calEvent*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->swap(*(vector<calEvent,allocator<calEvent> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<calEvent,allocator<calEvent> >::iterator* pobj;
         vector<calEvent,allocator<calEvent> >::iterator xobj = ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->insert(*((vector<calEvent,allocator<calEvent> >::iterator*) G__int(libp->para[0])), *(calEvent*) libp->para[1].ref);
         pobj = new vector<calEvent,allocator<calEvent> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->insert(*((vector<calEvent,allocator<calEvent> >::iterator*) G__int(libp->para[0])), *((vector<calEvent,allocator<calEvent> >::const_iterator*) G__int(libp->para[1]))
, *((vector<calEvent,allocator<calEvent> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->insert(*((vector<calEvent,allocator<calEvent> >::iterator*) G__int(libp->para[0])), (vector<calEvent,allocator<calEvent> >::size_type) G__int(libp->para[1])
, *(calEvent*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->erase(*((vector<calEvent,allocator<calEvent> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->erase(*((vector<calEvent,allocator<calEvent> >::iterator*) G__int(libp->para[0])), *((vector<calEvent,allocator<calEvent> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_472_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<calEvent,allocator<calEvent> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<calEvent,allocator<calEvent> > G__TvectorlEcalEventcOallocatorlEcalEventgRsPgR;
static int G__phosWallDict_472_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<calEvent,allocator<calEvent> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<calEvent,allocator<calEvent> >*) (soff+(sizeof(vector<calEvent,allocator<calEvent> >)*i)))->~G__TvectorlEcalEventcOallocatorlEcalEventgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<calEvent,allocator<calEvent> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<calEvent,allocator<calEvent> >*) (soff))->~G__TvectorlEcalEventcOallocatorlEcalEventgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* auxHit */
// automatic default constructor
static int G__phosWallDict_475_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   auxHit *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new auxHit[n];
     } else {
       p = new((void*) gvp) auxHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new auxHit;
     } else {
       p = new((void*) gvp) auxHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_auxHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_475_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   auxHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new auxHit(*(auxHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_auxHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef auxHit G__TauxHit;
static int G__phosWallDict_475_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (auxHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((auxHit*) (soff+(sizeof(auxHit)*i)))->~G__TauxHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (auxHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((auxHit*) (soff))->~G__TauxHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_475_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   auxHit* dest = (auxHit*) G__getstructoffset();
   *dest = *(auxHit*) libp->para[0].ref;
   const auxHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* phosWallAux */
static int G__phosWallDict_476_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   phosWallAux* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new phosWallAux[n];
     } else {
       p = new((void*) gvp) phosWallAux[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new phosWallAux;
     } else {
       p = new((void*) gvp) phosWallAux;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_phosWallAux));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_476_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallAux*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_476_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) phosWallAux::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_476_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) phosWallAux::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_476_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) phosWallAux::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_476_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      phosWallAux::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_476_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((phosWallAux*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_476_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) phosWallAux::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_476_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) phosWallAux::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_476_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) phosWallAux::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_476_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) phosWallAux::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__phosWallDict_476_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   phosWallAux* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new phosWallAux(*(phosWallAux*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_phosWallAux));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef phosWallAux G__TphosWallAux;
static int G__phosWallDict_476_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (phosWallAux*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((phosWallAux*) (soff+(sizeof(phosWallAux)*i)))->~G__TphosWallAux();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (phosWallAux*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((phosWallAux*) (soff))->~G__TphosWallAux();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__phosWallDict_476_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   phosWallAux* dest = (phosWallAux*) G__getstructoffset();
   *dest = *(phosWallAux*) libp->para[0].ref;
   const phosWallAux& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<auxHit,allocator<auxHit> > */
static int G__phosWallDict_478_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<auxHit,allocator<auxHit> >::reference obj = ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->at((vector<auxHit,allocator<auxHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<auxHit,allocator<auxHit> >::const_reference obj = ((const vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->at((vector<auxHit,allocator<auxHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<auxHit,allocator<auxHit> >::iterator* pobj;
         vector<auxHit,allocator<auxHit> >::iterator xobj = ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->begin();
         pobj = new vector<auxHit,allocator<auxHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<auxHit,allocator<auxHit> >::iterator* pobj;
         vector<auxHit,allocator<auxHit> >::iterator xobj = ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->end();
         pobj = new vector<auxHit,allocator<auxHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<auxHit,allocator<auxHit> >::reverse_iterator* pobj;
         vector<auxHit,allocator<auxHit> >::reverse_iterator xobj = ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->rbegin();
         pobj = new vector<auxHit,allocator<auxHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<auxHit,allocator<auxHit> >::reverse_iterator* pobj;
         vector<auxHit,allocator<auxHit> >::reverse_iterator xobj = ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->rend();
         pobj = new vector<auxHit,allocator<auxHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->resize((vector<auxHit,allocator<auxHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->resize((vector<auxHit,allocator<auxHit> >::size_type) G__int(libp->para[0]), *((auxHit*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<auxHit,allocator<auxHit> >::reference obj = ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->operator[]((vector<auxHit,allocator<auxHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<auxHit,allocator<auxHit> >::const_reference obj = ((const vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->operator[]((vector<auxHit,allocator<auxHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<auxHit,allocator<auxHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<auxHit,allocator<auxHit> >[n];
     } else {
       p = new((void*) gvp) vector<auxHit,allocator<auxHit> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<auxHit,allocator<auxHit> >;
     } else {
       p = new((void*) gvp) vector<auxHit,allocator<auxHit> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<auxHit,allocator<auxHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<auxHit,allocator<auxHit> >((vector<auxHit,allocator<auxHit> >::size_type) G__int(libp->para[0]), *(auxHit*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<auxHit,allocator<auxHit> >((vector<auxHit,allocator<auxHit> >::size_type) G__int(libp->para[0]), *(auxHit*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<auxHit,allocator<auxHit> >((vector<auxHit,allocator<auxHit> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<auxHit,allocator<auxHit> >((vector<auxHit,allocator<auxHit> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<auxHit,allocator<auxHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<auxHit,allocator<auxHit> >(*(vector<auxHit,allocator<auxHit> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<auxHit,allocator<auxHit> >(*(vector<auxHit,allocator<auxHit> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<auxHit,allocator<auxHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<auxHit,allocator<auxHit> >(*((vector<auxHit,allocator<auxHit> >::const_iterator*) G__int(libp->para[0])), *((vector<auxHit,allocator<auxHit> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<auxHit,allocator<auxHit> >(*((vector<auxHit,allocator<auxHit> >::const_iterator*) G__int(libp->para[0])), *((vector<auxHit,allocator<auxHit> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<auxHit,allocator<auxHit> >& obj = ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->operator=(*(vector<auxHit,allocator<auxHit> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->reserve((vector<auxHit,allocator<auxHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const auxHit& obj = ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const auxHit& obj = ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->push_back(*(auxHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->swap(*(vector<auxHit,allocator<auxHit> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<auxHit,allocator<auxHit> >::iterator* pobj;
         vector<auxHit,allocator<auxHit> >::iterator xobj = ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->insert(*((vector<auxHit,allocator<auxHit> >::iterator*) G__int(libp->para[0])), *(auxHit*) libp->para[1].ref);
         pobj = new vector<auxHit,allocator<auxHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->insert(*((vector<auxHit,allocator<auxHit> >::iterator*) G__int(libp->para[0])), *((vector<auxHit,allocator<auxHit> >::const_iterator*) G__int(libp->para[1]))
, *((vector<auxHit,allocator<auxHit> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->insert(*((vector<auxHit,allocator<auxHit> >::iterator*) G__int(libp->para[0])), (vector<auxHit,allocator<auxHit> >::size_type) G__int(libp->para[1])
, *(auxHit*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->erase(*((vector<auxHit,allocator<auxHit> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->erase(*((vector<auxHit,allocator<auxHit> >::iterator*) G__int(libp->para[0])), *((vector<auxHit,allocator<auxHit> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__phosWallDict_478_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<auxHit,allocator<auxHit> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<auxHit,allocator<auxHit> > G__TvectorlEauxHitcOallocatorlEauxHitgRsPgR;
static int G__phosWallDict_478_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<auxHit,allocator<auxHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<auxHit,allocator<auxHit> >*) (soff+(sizeof(vector<auxHit,allocator<auxHit> >)*i)))->~G__TvectorlEauxHitcOallocatorlEauxHitgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<auxHit,allocator<auxHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<auxHit,allocator<auxHit> >*) (soff))->~G__TvectorlEauxHitcOallocatorlEauxHitgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* phosWallFull */

/* Coeffs */

/* Pars */

/* Coordinates */

/* Neighbours */

/* Coeff */

/* Calibrate */

/* GainMatch */

/* hitEvent */

/* phosWallRaw */

/* vector<hitEvent,allocator<hitEvent> > */

/* calEvent */

/* phosWallCalc */

/* vector<calEvent,allocator<calEvent> > */

/* auxHit */

/* phosWallAux */

/* vector<auxHit,allocator<auxHit> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncphosWallDict {
 public:
  G__Sizep2memfuncphosWallDict(): p(&G__Sizep2memfuncphosWallDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncphosWallDict::*p)();
};

size_t G__get_sizep2memfuncphosWallDict()
{
  G__Sizep2memfuncphosWallDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancephosWallDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__phosWallDictLN_phosWallFull))) {
     phosWallFull *G__Lderived;
     G__Lderived=(phosWallFull*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__phosWallDictLN_phosWallFull),G__get_linked_tagnum(&G__phosWallDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__phosWallDictLN_Coordinates))) {
     Coordinates *G__Lderived;
     G__Lderived=(Coordinates*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__phosWallDictLN_Coordinates),G__get_linked_tagnum(&G__phosWallDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__phosWallDictLN_Neighbours))) {
     Neighbours *G__Lderived;
     G__Lderived=(Neighbours*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__phosWallDictLN_Neighbours),G__get_linked_tagnum(&G__phosWallDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__phosWallDictLN_Calibrate))) {
     Calibrate *G__Lderived;
     G__Lderived=(Calibrate*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__phosWallDictLN_Calibrate),G__get_linked_tagnum(&G__phosWallDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__phosWallDictLN_GainMatch))) {
     GainMatch *G__Lderived;
     G__Lderived=(GainMatch*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__phosWallDictLN_GainMatch),G__get_linked_tagnum(&G__phosWallDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__phosWallDictLN_phosWallRaw))) {
     phosWallRaw *G__Lderived;
     G__Lderived=(phosWallRaw*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__phosWallDictLN_phosWallRaw),G__get_linked_tagnum(&G__phosWallDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__phosWallDictLN_phosWallCalc))) {
     phosWallCalc *G__Lderived;
     G__Lderived=(phosWallCalc*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__phosWallDictLN_phosWallCalc),G__get_linked_tagnum(&G__phosWallDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__phosWallDictLN_phosWallAux))) {
     phosWallAux *G__Lderived;
     G__Lderived=(phosWallAux*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__phosWallDictLN_phosWallAux),G__get_linked_tagnum(&G__phosWallDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablephosWallDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__phosWallDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__phosWallDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<hitEvent>",117,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__phosWallDictLN_hitEvent),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__phosWallDictLN_hitEvent),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__phosWallDictLN_hitEvent),256,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__phosWallDictLN_hitEvent),1,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__phosWallDictLN_hitEvent),257,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<calEvent>",117,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__phosWallDictLN_calEvent),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__phosWallDictLN_calEvent),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__phosWallDictLN_calEvent),256,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__phosWallDictLN_calEvent),1,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__phosWallDictLN_calEvent),257,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<auxHit>",117,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__phosWallDictLN_auxHit),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__phosWallDictLN_auxHit),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__phosWallDictLN_auxHit),256,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__phosWallDictLN_auxHit),1,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__phosWallDictLN_auxHit),257,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TVector3*>",117,G__get_linked_tagnum(&G__phosWallDictLN_maplEintcOTVector3mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTVector3mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TVector3*,less<int> >",117,G__get_linked_tagnum(&G__phosWallDictLN_maplEintcOTVector3mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTVector3mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* phosWallFull */
static void G__setup_memvarphosWallFull(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_phosWallFull));
   { phosWallFull *p; p=(phosWallFull*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->buf)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"buf[2048]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->raw)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_phosWallRaw),-1,-1,1,"raw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->calc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_phosWallCalc),-1,-1,1,"calc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->aux)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_phosWallAux),-1,-1,1,"aux=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp)-(long)(p)),110,0,0,-1,-1,-1,1,"timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dataType)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dataType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->showSetup)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"showSetup=",0,"Show setup details with printing flag */");
   G__memvar_setup((void*)((long)(&p->doPrinting)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"doPrinting=",0,"Print details about events */");
   G__memvar_setup((void*)((long)(&p->deBug)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"deBug=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LRDU)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"LRDU=",0,"For CsI, 2: LR, 4: DU; for plastic, 1: LR, 3: DU */");
   G__memvar_setup((void*)((long)(&p->pixOrder)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pixOrder=",0,"Should be 1 (horizontal banks of 8 from LR, DU) */");
   G__memvar_setup((void*)((long)(&p->minNeighbours)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"minNeighbours=",0,"Don't include events with fewer than this");
   G__memvar_setup((void*)((long)(&p->tLow)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tLow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tHigh)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tHigh=",0,"Time gates applied to bigA, bigB, bigC */");
   G__memvar_setup((void*)((long)(&p->noTimes)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"noTimes=",0,"Flag to enable or ignore time gates. */");
   G__memvar_setup((void*)((long)(&p->maxCheck)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"maxCheck=",0,"4 for no corners, 8 with corners for neighbour sums */");
   G__memvar_setup((void*)((long)(&p->coefFileA)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TString),-1,-1,1,"coefFileA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->coefFileB)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TString),-1,-1,1,"coefFileB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->coefFileC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TString),-1,-1,1,"coefFileC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->coefFileT)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TString),-1,-1,1,"coefFileT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->coefFileAg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TString),-1,-1,1,"coefFileAg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->coefFileBg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TString),-1,-1,1,"coefFileBg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->coefFileCg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TString),-1,-1,1,"coefFileCg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->coordFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TString),-1,-1,1,"coordFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neighbourFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TString),-1,-1,1,"neighbourFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->failCount)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"failCount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Am)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_Calibrate),-1,-1,1,"Am=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Bm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_Calibrate),-1,-1,1,"Bm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_Calibrate),-1,-1,1,"Cm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_Calibrate),-1,-1,1,"Tm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ag)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_GainMatch),-1,-1,1,"Ag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Bg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_GainMatch),-1,-1,1,"Bg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Cg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_GainMatch),-1,-1,1,"Cg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->myCoor)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_Coordinates),-1,-1,1,"myCoor=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventNum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eventNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->oobEvents)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"oobEvents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->oneEvents)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"oneEvents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->badEvents)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"badEvents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neighbourhood)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"neighbourhood[256][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeGates)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"timeGates[256][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pWallPositions)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_maplEintcOTVector3mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTVector3mUgRsPgRsPgR),G__defined_typename("map<int,TVector3*>"),-1,1,"pWallPositions=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Coeffs */
static void G__setup_memvarCoeffs(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_Coeffs));
   { Coeffs *p; p=(Coeffs*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->up)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"up=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dn)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lf)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"lf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"rt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uL)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"uL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uR)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"uR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dL)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dR)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dR=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Pars */
static void G__setup_memvarPars(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_Pars));
   { Pars *p; p=(Pars*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->axL)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"axL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bxL)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"bxL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->axR)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"axR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bxR)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"bxR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ayD)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ayD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byD)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"byD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ayU)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ayU=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byU)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"byU=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Coordinates */
static void G__setup_memvarCoordinates(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_Coordinates));
   { Coordinates *p; p=(Coordinates*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->CM)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"CM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"a=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"b=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"c=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pars)-(long)(p)),85,2,0,G__get_linked_tagnum(&G__phosWallDictLN_Pars),-1,-1,1,"pars=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nTele=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nPix=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Neighbours */
static void G__setup_memvarNeighbours(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_Neighbours));
   { Neighbours *p; p=(Neighbours*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->nPix)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nPix=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nTele=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__phosWallDictLN_Coeffs),-1,-1,4,"coeffs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_Coordinates),-1,-1,4,"coor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Coeff */
static void G__setup_memvarCoeff(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_Coeff));
   { Coeff *p; p=(Coeff*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->x1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"x1=",0,"Slope */");
   G__memvar_setup((void*)((long)(&p->x0)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"x0=",0,"Offset */");
   }
   G__tag_memvar_reset();
}


   /* Calibrate */
static void G__setup_memvarCalibrate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_Calibrate));
   { Calibrate *p; p=(Calibrate*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nTele=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nPix=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__phosWallDictLN_Coeff),-1,-1,4,"coeff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GainMatch */
static void G__setup_memvarGainMatch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_GainMatch));
   { GainMatch *p; p=(GainMatch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nTele=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nPix=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__phosWallDictLN_Coeff),-1,-1,4,"coeff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* hitEvent */
static void G__setup_memvarhitEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_hitEvent));
   { hitEvent *p; p=(hitEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->pixel)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pixel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->det)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"det=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->A)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"A=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->B)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"B=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->C)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"C=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"T=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* phosWallRaw */
static void G__setup_memvarphosWallRaw(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_phosWallRaw));
   { phosWallRaw *p; p=(phosWallRaw*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR),G__defined_typename("vector<hitEvent>"),-1,1,"hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<hitEvent,allocator<hitEvent> > */
static void G__setup_memvarvectorlEhitEventcOallocatorlEhitEventgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   { vector<hitEvent,allocator<hitEvent> > *p; p=(vector<hitEvent,allocator<hitEvent> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* calEvent */
static void G__setup_memvarcalEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_calEvent));
   { calEvent *p; p=(calEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->pixel)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pixel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->A)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"A=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->B)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"B=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->C)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"C=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TVector3),-1,-1,1,"Vec=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* phosWallCalc */
static void G__setup_memvarphosWallCalc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_phosWallCalc));
   { phosWallCalc *p; p=(phosWallCalc*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR),G__defined_typename("vector<calEvent>"),-1,1,"hit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hugeA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"hugeA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hugeB)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"hugeB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hugeC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"hugeC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"uA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"lA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"rA=",0,"Neighbour amplitudes */");
   G__memvar_setup((void*)((long)(&p->uF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"uF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"lF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"rF=",0,"Neighbour fractions */");
   G__memvar_setup((void*)((long)(&p->ulA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ulA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->urA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"urA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dlA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dlA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->drA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"drA=",0,"Corner amplitudes */");
   G__memvar_setup((void*)((long)(&p->ulF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ulF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->urF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"urF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dlF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dlF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->drF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"drF=",0,"Corner fractions */");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<calEvent,allocator<calEvent> > */
static void G__setup_memvarvectorlEcalEventcOallocatorlEcalEventgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   { vector<calEvent,allocator<calEvent> > *p; p=(vector<calEvent,allocator<calEvent> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* auxHit */
static void G__setup_memvarauxHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_auxHit));
   { auxHit *p; p=(auxHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->channel)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"channel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->value)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"value=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* phosWallAux */
static void G__setup_memvarphosWallAux(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_phosWallAux));
   { phosWallAux *p; p=(phosWallAux*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->qdc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR),G__defined_typename("vector<auxHit>"),-1,1,"qdc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR),G__defined_typename("vector<auxHit>"),-1,1,"tdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__phosWallDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<auxHit,allocator<auxHit> > */
static void G__setup_memvarvectorlEauxHitcOallocatorlEauxHitgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   { vector<auxHit,allocator<auxHit> > *p; p=(vector<auxHit,allocator<auxHit> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarphosWallDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncphosWallFull(void) {
   /* phosWallFull */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_phosWallFull));
   G__memfunc_setup("phosWallFull",1245,G__phosWallDict_455_0_1, 105, G__get_linked_tagnum(&G__phosWallDictLN_phosWallFull), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__phosWallDict_455_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeParameters",2086,G__phosWallDict_455_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__phosWallDict_455_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAndUnpackPhosWall",2015,G__phosWallDict_455_0_5, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"E - - 0 - inf i - 'Int_t' 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAndUnpackPhosWallAux",2317,G__phosWallDict_455_0_6, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"E - - 0 - inf i - 'Int_t' 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessPhosWall",1545,G__phosWallDict_455_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessPhosWallAux",1847,G__phosWallDict_455_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ifExists",847,G__phosWallDict_455_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadNeighbours",1426,G__phosWallDict_455_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTimeGates",1279,G__phosWallDict_455_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isNeighbour",1151,G__phosWallDict_455_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - first i - 'Int_t' 0 - second", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("correctNeighbours",1800,G__phosWallDict_455_0_13, 102, -1, G__defined_typename("Float_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - pixel i - 'Int_t' 0 - type "
"i - 'Int_t' 0 - iHist f - 'Float_t' 0 - input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPwallPositions",1780,G__phosWallDict_455_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetermineNParticles",1938,G__phosWallDict_455_0_15, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - radius i - 'Int_t' 0 - biggestHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__phosWallDict_455_0_16, 85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&phosWallFull::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__phosWallDict_455_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&phosWallFull::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__phosWallDict_455_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&phosWallFull::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__phosWallDict_455_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&phosWallFull::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__phosWallDict_455_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__phosWallDict_455_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&phosWallFull::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__phosWallDict_455_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&phosWallFull::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__phosWallDict_455_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&phosWallFull::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__phosWallDict_455_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&phosWallFull::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("phosWallFull", 1245, G__phosWallDict_455_0_28, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_phosWallFull), -1, 0, 1, 1, 1, 0, "u 'phosWallFull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~phosWallFull", 1371, G__phosWallDict_455_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_455_0_30, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_phosWallFull), -1, 1, 1, 1, 1, 0, "u 'phosWallFull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCoeffs(void) {
   /* Coeffs */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_Coeffs));
   // automatic default constructor
   G__memfunc_setup("Coeffs", 598, G__phosWallDict_456_0_1, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_Coeffs), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Coeffs", 598, G__phosWallDict_456_0_2, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_Coeffs), -1, 0, 1, 1, 1, 0, "u 'Coeffs' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Coeffs", 724, G__phosWallDict_456_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_456_0_4, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_Coeffs), -1, 1, 1, 1, 1, 0, "u 'Coeffs' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPars(void) {
   /* Pars */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_Pars));
   // automatic default constructor
   G__memfunc_setup("Pars", 406, G__phosWallDict_457_0_1, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_Pars), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Pars", 406, G__phosWallDict_457_0_2, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_Pars), -1, 0, 1, 1, 1, 0, "u 'Pars' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Pars", 532, G__phosWallDict_457_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_457_0_4, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_Pars), -1, 1, 1, 1, 1, 0, "u 'Pars' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCoordinates(void) {
   /* Coordinates */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_Coordinates));
   G__memfunc_setup("Coordinates",1147,G__phosWallDict_458_0_1, 105, G__get_linked_tagnum(&G__phosWallDictLN_Coordinates), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Coordinates",1147,G__phosWallDict_458_0_2, 105, G__get_linked_tagnum(&G__phosWallDictLN_Coordinates), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - nTele0 i - 'Int_t' 0 - nPix0 "
"u 'TString' - 0 - fName g - 'Bool_t' 0 - printErrors", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("algo",419,G__phosWallDict_458_0_3, 102, -1, G__defined_typename("Float_t"), 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - iTele i - 'Int_t' 0 - pixel "
"i - 'Int_t' 0 - ipat f - 'Float_t' 0 - f "
"f - 'Float_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__phosWallDict_458_0_4, 85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Coordinates::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__phosWallDict_458_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Coordinates::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__phosWallDict_458_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Coordinates::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__phosWallDict_458_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Coordinates::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__phosWallDict_458_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__phosWallDict_458_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Coordinates::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__phosWallDict_458_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Coordinates::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__phosWallDict_458_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Coordinates::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__phosWallDict_458_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Coordinates::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Coordinates", 1147, G__phosWallDict_458_0_16, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_Coordinates), -1, 0, 1, 1, 1, 0, "u 'Coordinates' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Coordinates", 1273, G__phosWallDict_458_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_458_0_18, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_Coordinates), -1, 1, 1, 1, 1, 0, "u 'Coordinates' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNeighbours(void) {
   /* Neighbours */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_Neighbours));
   G__memfunc_setup("Neighbours",1046,G__phosWallDict_459_0_1, 105, G__get_linked_tagnum(&G__phosWallDictLN_Neighbours), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Neighbours",1046,G__phosWallDict_459_0_2, 105, G__get_linked_tagnum(&G__phosWallDictLN_Neighbours), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - nTele0 i - 'Int_t' 0 - nPix0 "
"u 'TString' - 0 - fileName U 'Coordinates' - 0 - corr0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBigOne",884,G__phosWallDict_459_0_3, 102, -1, G__defined_typename("Float_t"), 0, 10, 1, 1, 0, 
"i - 'Int_t' 0 - iTele I - 'Int_t' 0 - pPix "
"F - 'Float_t' 0 - phA i - 'Int_t' 0 - size "
"I - 'Int_t' 0 - pBigA F - 'Float_t' 0 - bigA "
"i - 'Int_t' 0 - maxIndex i - 'Int_t' 0 - abc "
"i - 'Int_t' 0 - iHist i - 'Int_t' 0 - LRDU", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__phosWallDict_459_0_4, 85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Neighbours::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__phosWallDict_459_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Neighbours::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__phosWallDict_459_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Neighbours::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__phosWallDict_459_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Neighbours::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__phosWallDict_459_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__phosWallDict_459_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Neighbours::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__phosWallDict_459_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Neighbours::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__phosWallDict_459_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Neighbours::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__phosWallDict_459_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Neighbours::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Neighbours", 1046, G__phosWallDict_459_0_16, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_Neighbours), -1, 0, 1, 1, 1, 0, "u 'Neighbours' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Neighbours", 1172, G__phosWallDict_459_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_459_0_18, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_Neighbours), -1, 1, 1, 1, 1, 0, "u 'Neighbours' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCoeff(void) {
   /* Coeff */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_Coeff));
   // automatic default constructor
   G__memfunc_setup("Coeff", 483, G__phosWallDict_460_0_1, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_Coeff), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Coeff", 483, G__phosWallDict_460_0_2, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_Coeff), -1, 0, 1, 1, 1, 0, "u 'Coeff' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Coeff", 609, G__phosWallDict_460_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_460_0_4, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_Coeff), -1, 1, 1, 1, 1, 0, "u 'Coeff' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalibrate(void) {
   /* Calibrate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_Calibrate));
   G__memfunc_setup("Calibrate",903,G__phosWallDict_461_0_1, 105, G__get_linked_tagnum(&G__phosWallDictLN_Calibrate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calibrate",903,G__phosWallDict_461_0_2, 105, G__get_linked_tagnum(&G__phosWallDictLN_Calibrate), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - nTele0 i - 'Int_t' 0 - nPix0 "
"u 'TString' - 0 - fname g - 'Bool_t' 0 - printErrors", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergy",938,G__phosWallDict_461_0_3, 102, -1, G__defined_typename("Float_t"), 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - iTele i - 'Int_t' 0 - iPix "
"f - 'Float_t' 0 - channel i - 'Int_t' 0 - type "
"i - 'Int_t' 0 - check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__phosWallDict_461_0_4, 85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Calibrate::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__phosWallDict_461_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Calibrate::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__phosWallDict_461_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Calibrate::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__phosWallDict_461_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Calibrate::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__phosWallDict_461_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__phosWallDict_461_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Calibrate::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__phosWallDict_461_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Calibrate::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__phosWallDict_461_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Calibrate::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__phosWallDict_461_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Calibrate::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Calibrate", 903, G__phosWallDict_461_0_16, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_Calibrate), -1, 0, 1, 1, 1, 0, "u 'Calibrate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Calibrate", 1029, G__phosWallDict_461_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_461_0_18, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_Calibrate), -1, 1, 1, 1, 1, 0, "u 'Calibrate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGainMatch(void) {
   /* GainMatch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_GainMatch));
   G__memfunc_setup("GainMatch",876,G__phosWallDict_462_0_1, 105, G__get_linked_tagnum(&G__phosWallDictLN_GainMatch), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GainMatch",876,G__phosWallDict_462_0_2, 105, G__get_linked_tagnum(&G__phosWallDictLN_GainMatch), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - nTele0 i - 'Int_t' 0 - nPix0 "
"u 'TString' - 0 - fname g - 'Bool_t' 0 - printErrors", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGainEnergy",1289,G__phosWallDict_462_0_3, 102, -1, G__defined_typename("Float_t"), 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - iTele i - 'Int_t' 0 - iPix "
"f - 'Float_t' 0 - channel i - 'Int_t' 0 - type "
"i - 'Int_t' 0 - check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__phosWallDict_462_0_4, 85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GainMatch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__phosWallDict_462_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GainMatch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__phosWallDict_462_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GainMatch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__phosWallDict_462_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GainMatch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__phosWallDict_462_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__phosWallDict_462_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GainMatch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__phosWallDict_462_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GainMatch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__phosWallDict_462_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GainMatch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__phosWallDict_462_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GainMatch::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GainMatch", 876, G__phosWallDict_462_0_16, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_GainMatch), -1, 0, 1, 1, 1, 0, "u 'GainMatch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GainMatch", 1002, G__phosWallDict_462_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_462_0_18, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_GainMatch), -1, 1, 1, 1, 1, 0, "u 'GainMatch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunchitEvent(void) {
   /* hitEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_hitEvent));
   // automatic default constructor
   G__memfunc_setup("hitEvent", 839, G__phosWallDict_463_0_1, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_hitEvent), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("hitEvent", 839, G__phosWallDict_463_0_2, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_hitEvent), -1, 0, 1, 1, 1, 0, "u 'hitEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~hitEvent", 965, G__phosWallDict_463_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_463_0_4, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_hitEvent), -1, 1, 1, 1, 1, 0, "u 'hitEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncphosWallRaw(void) {
   /* phosWallRaw */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_phosWallRaw));
   G__memfunc_setup("phosWallRaw",1140,G__phosWallDict_464_0_1, 105, G__get_linked_tagnum(&G__phosWallDictLN_phosWallRaw), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__phosWallDict_464_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__phosWallDict_464_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHits",518,G__phosWallDict_464_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__phosWallDict_464_0_5, 85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&phosWallRaw::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__phosWallDict_464_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&phosWallRaw::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__phosWallDict_464_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&phosWallRaw::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__phosWallDict_464_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&phosWallRaw::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__phosWallDict_464_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__phosWallDict_464_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&phosWallRaw::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__phosWallDict_464_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&phosWallRaw::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__phosWallDict_464_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&phosWallRaw::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__phosWallDict_464_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&phosWallRaw::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("phosWallRaw", 1140, G__phosWallDict_464_0_17, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_phosWallRaw), -1, 0, 1, 1, 1, 0, "u 'phosWallRaw' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~phosWallRaw", 1266, G__phosWallDict_464_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_464_0_19, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_phosWallRaw), -1, 1, 1, 1, 1, 0, "u 'phosWallRaw' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEhitEventcOallocatorlEhitEventgRsPgR(void) {
   /* vector<hitEvent,allocator<hitEvent> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR));
   G__memfunc_setup("at",213,G__phosWallDict_466_0_1, 117, G__get_linked_tagnum(&G__phosWallDictLN_hitEvent), G__defined_typename("vector<hitEvent,allocator<hitEvent> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<hitEvent,allocator<hitEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__phosWallDict_466_0_2, 117, G__get_linked_tagnum(&G__phosWallDictLN_hitEvent), G__defined_typename("vector<hitEvent,allocator<hitEvent> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<hitEvent,allocator<hitEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__phosWallDict_466_0_3, 117, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__phosWallDict_466_0_4, 117, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__phosWallDict_466_0_5, 117, G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiteratorgR), G__defined_typename("vector<hitEvent,allocator<hitEvent> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__phosWallDict_466_0_6, 117, G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiteratorgR), G__defined_typename("vector<hitEvent,allocator<hitEvent> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__phosWallDict_466_0_7, 107, -1, G__defined_typename("vector<hitEvent,allocator<hitEvent> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__phosWallDict_466_0_8, 107, -1, G__defined_typename("vector<hitEvent,allocator<hitEvent> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__phosWallDict_466_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<hitEvent,allocator<hitEvent> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__phosWallDict_466_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<hitEvent,allocator<hitEvent> >::size_type' 0 - sz u 'hitEvent' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__phosWallDict_466_0_11, 107, -1, G__defined_typename("vector<hitEvent,allocator<hitEvent> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__phosWallDict_466_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__phosWallDict_466_0_13, 117, G__get_linked_tagnum(&G__phosWallDictLN_hitEvent), G__defined_typename("vector<hitEvent,allocator<hitEvent> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<hitEvent,allocator<hitEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__phosWallDict_466_0_14, 117, G__get_linked_tagnum(&G__phosWallDictLN_hitEvent), G__defined_typename("vector<hitEvent,allocator<hitEvent> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<hitEvent,allocator<hitEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<hitEvent,allocator<hitEvent> >",3618,G__phosWallDict_466_0_15, 105, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<hitEvent,allocator<hitEvent> >",3618,G__phosWallDict_466_0_16, 105, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<hitEvent,allocator<hitEvent> >::size_type' 0 - n u 'hitEvent' - 11 'hitEvent()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<hitEvent,allocator<hitEvent> >",3618,G__phosWallDict_466_0_17, 105, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<hitEvent,allocator<hitEvent> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<hitEvent,allocator<hitEvent> >",3618,G__phosWallDict_466_0_18, 105, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<hitEvent,allocator<hitEvent> >::iterator' 'vector<hitEvent,allocator<hitEvent> >::const_iterator' 10 - first u 'vector<hitEvent,allocator<hitEvent> >::iterator' 'vector<hitEvent,allocator<hitEvent> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__phosWallDict_466_0_19, 117, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<hitEvent,allocator<hitEvent> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__phosWallDict_466_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<hitEvent,allocator<hitEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__phosWallDict_466_0_21, 117, G__get_linked_tagnum(&G__phosWallDictLN_hitEvent), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__phosWallDict_466_0_22, 117, G__get_linked_tagnum(&G__phosWallDictLN_hitEvent), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__phosWallDict_466_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'hitEvent' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__phosWallDict_466_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<hitEvent,allocator<hitEvent> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__phosWallDict_466_0_25, 117, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<hitEvent,allocator<hitEvent> >::iterator' - 0 - position u 'hitEvent' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__phosWallDict_466_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<hitEvent,allocator<hitEvent> >::iterator' - 0 - position u 'vector<hitEvent,allocator<hitEvent> >::iterator' 'vector<hitEvent,allocator<hitEvent> >::const_iterator' 10 - first "
"u 'vector<hitEvent,allocator<hitEvent> >::iterator' 'vector<hitEvent,allocator<hitEvent> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__phosWallDict_466_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<hitEvent,allocator<hitEvent> >::iterator' - 0 - position k - 'vector<hitEvent,allocator<hitEvent> >::size_type' 0 - n "
"u 'hitEvent' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__phosWallDict_466_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__phosWallDict_466_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<hitEvent,allocator<hitEvent> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__phosWallDict_466_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<hitEvent,allocator<hitEvent> >::iterator' - 0 - first u 'vector<hitEvent,allocator<hitEvent> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__phosWallDict_466_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<hitEvent,allocator<hitEvent> >", 3744, G__phosWallDict_466_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunccalEvent(void) {
   /* calEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_calEvent));
   // automatic default constructor
   G__memfunc_setup("calEvent", 818, G__phosWallDict_469_0_1, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_calEvent), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("calEvent", 818, G__phosWallDict_469_0_2, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_calEvent), -1, 0, 1, 1, 1, 0, "u 'calEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~calEvent", 944, G__phosWallDict_469_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_469_0_4, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_calEvent), -1, 1, 1, 1, 1, 0, "u 'calEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncphosWallCalc(void) {
   /* phosWallCalc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_phosWallCalc));
   G__memfunc_setup("phosWallCalc",1213,G__phosWallDict_470_0_1, 105, G__get_linked_tagnum(&G__phosWallDictLN_phosWallCalc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__phosWallDict_470_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__phosWallDict_470_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("biggestA",806,G__phosWallDict_470_0_4, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("biggestB",807,G__phosWallDict_470_0_5, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("biggestC",808,G__phosWallDict_470_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("biggestT",825,G__phosWallDict_470_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("biggestPixel",1255,G__phosWallDict_470_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("biggestPixelPosition",2108,G__phosWallDict_470_0_9, 117, G__get_linked_tagnum(&G__phosWallDictLN_TVector3), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("biggestHit",1034,G__phosWallDict_470_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("secondBiggestA",1410,G__phosWallDict_470_0_11, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("secondBiggestB",1411,G__phosWallDict_470_0_12, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("secondBiggestC",1412,G__phosWallDict_470_0_13, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("secondBiggestT",1429,G__phosWallDict_470_0_14, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("secondBiggestPixel",1859,G__phosWallDict_470_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("secondBiggestHit",1638,G__phosWallDict_470_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("distanceBetweenParticles",2492,G__phosWallDict_470_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__phosWallDict_470_0_18, 85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&phosWallCalc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__phosWallDict_470_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&phosWallCalc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__phosWallDict_470_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&phosWallCalc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__phosWallDict_470_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&phosWallCalc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__phosWallDict_470_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__phosWallDict_470_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&phosWallCalc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__phosWallDict_470_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&phosWallCalc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__phosWallDict_470_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&phosWallCalc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__phosWallDict_470_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&phosWallCalc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("phosWallCalc", 1213, G__phosWallDict_470_0_30, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_phosWallCalc), -1, 0, 1, 1, 1, 0, "u 'phosWallCalc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~phosWallCalc", 1339, G__phosWallDict_470_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_470_0_32, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_phosWallCalc), -1, 1, 1, 1, 1, 0, "u 'phosWallCalc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEcalEventcOallocatorlEcalEventgRsPgR(void) {
   /* vector<calEvent,allocator<calEvent> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR));
   G__memfunc_setup("at",213,G__phosWallDict_472_0_1, 117, G__get_linked_tagnum(&G__phosWallDictLN_calEvent), G__defined_typename("vector<calEvent,allocator<calEvent> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<calEvent,allocator<calEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__phosWallDict_472_0_2, 117, G__get_linked_tagnum(&G__phosWallDictLN_calEvent), G__defined_typename("vector<calEvent,allocator<calEvent> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<calEvent,allocator<calEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__phosWallDict_472_0_3, 117, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__phosWallDict_472_0_4, 117, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__phosWallDict_472_0_5, 117, G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiteratorgR), G__defined_typename("vector<calEvent,allocator<calEvent> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__phosWallDict_472_0_6, 117, G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiteratorgR), G__defined_typename("vector<calEvent,allocator<calEvent> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__phosWallDict_472_0_7, 107, -1, G__defined_typename("vector<calEvent,allocator<calEvent> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__phosWallDict_472_0_8, 107, -1, G__defined_typename("vector<calEvent,allocator<calEvent> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__phosWallDict_472_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<calEvent,allocator<calEvent> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__phosWallDict_472_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<calEvent,allocator<calEvent> >::size_type' 0 - sz u 'calEvent' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__phosWallDict_472_0_11, 107, -1, G__defined_typename("vector<calEvent,allocator<calEvent> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__phosWallDict_472_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__phosWallDict_472_0_13, 117, G__get_linked_tagnum(&G__phosWallDictLN_calEvent), G__defined_typename("vector<calEvent,allocator<calEvent> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<calEvent,allocator<calEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__phosWallDict_472_0_14, 117, G__get_linked_tagnum(&G__phosWallDictLN_calEvent), G__defined_typename("vector<calEvent,allocator<calEvent> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<calEvent,allocator<calEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<calEvent,allocator<calEvent> >",3576,G__phosWallDict_472_0_15, 105, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<calEvent,allocator<calEvent> >",3576,G__phosWallDict_472_0_16, 105, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<calEvent,allocator<calEvent> >::size_type' 0 - n u 'calEvent' - 11 'calEvent()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<calEvent,allocator<calEvent> >",3576,G__phosWallDict_472_0_17, 105, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<calEvent,allocator<calEvent> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<calEvent,allocator<calEvent> >",3576,G__phosWallDict_472_0_18, 105, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<calEvent,allocator<calEvent> >::iterator' 'vector<calEvent,allocator<calEvent> >::const_iterator' 10 - first u 'vector<calEvent,allocator<calEvent> >::iterator' 'vector<calEvent,allocator<calEvent> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__phosWallDict_472_0_19, 117, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<calEvent,allocator<calEvent> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__phosWallDict_472_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<calEvent,allocator<calEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__phosWallDict_472_0_21, 117, G__get_linked_tagnum(&G__phosWallDictLN_calEvent), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__phosWallDict_472_0_22, 117, G__get_linked_tagnum(&G__phosWallDictLN_calEvent), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__phosWallDict_472_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'calEvent' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__phosWallDict_472_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<calEvent,allocator<calEvent> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__phosWallDict_472_0_25, 117, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<calEvent,allocator<calEvent> >::iterator' - 0 - position u 'calEvent' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__phosWallDict_472_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<calEvent,allocator<calEvent> >::iterator' - 0 - position u 'vector<calEvent,allocator<calEvent> >::iterator' 'vector<calEvent,allocator<calEvent> >::const_iterator' 10 - first "
"u 'vector<calEvent,allocator<calEvent> >::iterator' 'vector<calEvent,allocator<calEvent> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__phosWallDict_472_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<calEvent,allocator<calEvent> >::iterator' - 0 - position k - 'vector<calEvent,allocator<calEvent> >::size_type' 0 - n "
"u 'calEvent' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__phosWallDict_472_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__phosWallDict_472_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<calEvent,allocator<calEvent> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__phosWallDict_472_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<calEvent,allocator<calEvent> >::iterator' - 0 - first u 'vector<calEvent,allocator<calEvent> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__phosWallDict_472_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<calEvent,allocator<calEvent> >", 3702, G__phosWallDict_472_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncauxHit(void) {
   /* auxHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_auxHit));
   // automatic default constructor
   G__memfunc_setup("auxHit", 627, G__phosWallDict_475_0_1, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_auxHit), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("auxHit", 627, G__phosWallDict_475_0_2, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_auxHit), -1, 0, 1, 1, 1, 0, "u 'auxHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~auxHit", 753, G__phosWallDict_475_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_475_0_4, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_auxHit), -1, 1, 1, 1, 1, 0, "u 'auxHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncphosWallAux(void) {
   /* phosWallAux */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_phosWallAux));
   G__memfunc_setup("phosWallAux",1144,G__phosWallDict_476_0_1, 105, G__get_linked_tagnum(&G__phosWallDictLN_phosWallAux), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__phosWallDict_476_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__phosWallDict_476_0_3, 85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&phosWallAux::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__phosWallDict_476_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&phosWallAux::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__phosWallDict_476_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&phosWallAux::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__phosWallDict_476_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&phosWallAux::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__phosWallDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__phosWallDict_476_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__phosWallDict_476_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&phosWallAux::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__phosWallDict_476_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&phosWallAux::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__phosWallDict_476_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&phosWallAux::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__phosWallDict_476_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&phosWallAux::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("phosWallAux", 1144, G__phosWallDict_476_0_15, (int) ('i'), G__get_linked_tagnum(&G__phosWallDictLN_phosWallAux), -1, 0, 1, 1, 1, 0, "u 'phosWallAux' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~phosWallAux", 1270, G__phosWallDict_476_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__phosWallDict_476_0_17, (int) ('u'), G__get_linked_tagnum(&G__phosWallDictLN_phosWallAux), -1, 1, 1, 1, 1, 0, "u 'phosWallAux' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEauxHitcOallocatorlEauxHitgRsPgR(void) {
   /* vector<auxHit,allocator<auxHit> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR));
   G__memfunc_setup("at",213,G__phosWallDict_478_0_1, 117, G__get_linked_tagnum(&G__phosWallDictLN_auxHit), G__defined_typename("vector<auxHit,allocator<auxHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<auxHit,allocator<auxHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__phosWallDict_478_0_2, 117, G__get_linked_tagnum(&G__phosWallDictLN_auxHit), G__defined_typename("vector<auxHit,allocator<auxHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<auxHit,allocator<auxHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__phosWallDict_478_0_3, 117, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__phosWallDict_478_0_4, 117, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__phosWallDict_478_0_5, 117, G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<auxHit,allocator<auxHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__phosWallDict_478_0_6, 117, G__get_linked_tagnum(&G__phosWallDictLN_reverse_iteratorlEvectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<auxHit,allocator<auxHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__phosWallDict_478_0_7, 107, -1, G__defined_typename("vector<auxHit,allocator<auxHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__phosWallDict_478_0_8, 107, -1, G__defined_typename("vector<auxHit,allocator<auxHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__phosWallDict_478_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<auxHit,allocator<auxHit> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__phosWallDict_478_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<auxHit,allocator<auxHit> >::size_type' 0 - sz u 'auxHit' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__phosWallDict_478_0_11, 107, -1, G__defined_typename("vector<auxHit,allocator<auxHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__phosWallDict_478_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__phosWallDict_478_0_13, 117, G__get_linked_tagnum(&G__phosWallDictLN_auxHit), G__defined_typename("vector<auxHit,allocator<auxHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<auxHit,allocator<auxHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__phosWallDict_478_0_14, 117, G__get_linked_tagnum(&G__phosWallDictLN_auxHit), G__defined_typename("vector<auxHit,allocator<auxHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<auxHit,allocator<auxHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<auxHit,allocator<auxHit> >",3194,G__phosWallDict_478_0_15, 105, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<auxHit,allocator<auxHit> >",3194,G__phosWallDict_478_0_16, 105, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<auxHit,allocator<auxHit> >::size_type' 0 - n u 'auxHit' - 11 'auxHit()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<auxHit,allocator<auxHit> >",3194,G__phosWallDict_478_0_17, 105, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<auxHit,allocator<auxHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<auxHit,allocator<auxHit> >",3194,G__phosWallDict_478_0_18, 105, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<auxHit,allocator<auxHit> >::iterator' 'vector<auxHit,allocator<auxHit> >::const_iterator' 10 - first u 'vector<auxHit,allocator<auxHit> >::iterator' 'vector<auxHit,allocator<auxHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__phosWallDict_478_0_19, 117, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<auxHit,allocator<auxHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__phosWallDict_478_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<auxHit,allocator<auxHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__phosWallDict_478_0_21, 117, G__get_linked_tagnum(&G__phosWallDictLN_auxHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__phosWallDict_478_0_22, 117, G__get_linked_tagnum(&G__phosWallDictLN_auxHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__phosWallDict_478_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'auxHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__phosWallDict_478_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<auxHit,allocator<auxHit> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__phosWallDict_478_0_25, 117, G__get_linked_tagnum(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<auxHit,allocator<auxHit> >::iterator' - 0 - position u 'auxHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__phosWallDict_478_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<auxHit,allocator<auxHit> >::iterator' - 0 - position u 'vector<auxHit,allocator<auxHit> >::iterator' 'vector<auxHit,allocator<auxHit> >::const_iterator' 10 - first "
"u 'vector<auxHit,allocator<auxHit> >::iterator' 'vector<auxHit,allocator<auxHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__phosWallDict_478_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<auxHit,allocator<auxHit> >::iterator' - 0 - position k - 'vector<auxHit,allocator<auxHit> >::size_type' 0 - n "
"u 'auxHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__phosWallDict_478_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__phosWallDict_478_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<auxHit,allocator<auxHit> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__phosWallDict_478_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<auxHit,allocator<auxHit> >::iterator' - 0 - first u 'vector<auxHit,allocator<auxHit> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__phosWallDict_478_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<auxHit,allocator<auxHit> >", 3320, G__phosWallDict_478_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncphosWallDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalphosWallDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcphosWallDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__phosWallDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_phosWallFull = { "phosWallFull" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_Coeffs = { "Coeffs" , 115 , -1 };
G__linked_taginfo G__phosWallDictLN_Pars = { "Pars" , 115 , -1 };
G__linked_taginfo G__phosWallDictLN_Coordinates = { "Coordinates" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_Neighbours = { "Neighbours" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_Coeff = { "Coeff" , 115 , -1 };
G__linked_taginfo G__phosWallDictLN_Calibrate = { "Calibrate" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_GainMatch = { "GainMatch" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_hitEvent = { "hitEvent" , 115 , -1 };
G__linked_taginfo G__phosWallDictLN_phosWallRaw = { "phosWallRaw" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR = { "vector<hitEvent,allocator<hitEvent> >" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiterator = { "vector<hitEvent,allocator<hitEvent> >::iterator" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_reverse_iteratorlEvectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<hitEvent,allocator<hitEvent> >::iterator>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_calEvent = { "calEvent" , 115 , -1 };
G__linked_taginfo G__phosWallDictLN_phosWallCalc = { "phosWallCalc" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR = { "vector<calEvent,allocator<calEvent> >" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiterator = { "vector<calEvent,allocator<calEvent> >::iterator" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_reverse_iteratorlEvectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<calEvent,allocator<calEvent> >::iterator>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_auxHit = { "auxHit" , 115 , -1 };
G__linked_taginfo G__phosWallDictLN_phosWallAux = { "phosWallAux" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR = { "vector<auxHit,allocator<auxHit> >" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiterator = { "vector<auxHit,allocator<auxHit> >::iterator" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_reverse_iteratorlEvectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<auxHit,allocator<auxHit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__phosWallDictLN_maplEintcOTVector3mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTVector3mUgRsPgRsPgR = { "map<int,TVector3*,less<int>,allocator<pair<const int,TVector3*> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablephosWallDict() {
  G__phosWallDictLN_TClass.tagnum = -1 ;
  G__phosWallDictLN_TBuffer.tagnum = -1 ;
  G__phosWallDictLN_TMemberInspector.tagnum = -1 ;
  G__phosWallDictLN_TObject.tagnum = -1 ;
  G__phosWallDictLN_TString.tagnum = -1 ;
  G__phosWallDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__phosWallDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__phosWallDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__phosWallDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__phosWallDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__phosWallDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__phosWallDictLN_TVector3.tagnum = -1 ;
  G__phosWallDictLN_phosWallFull.tagnum = -1 ;
  G__phosWallDictLN_Coeffs.tagnum = -1 ;
  G__phosWallDictLN_Pars.tagnum = -1 ;
  G__phosWallDictLN_Coordinates.tagnum = -1 ;
  G__phosWallDictLN_Neighbours.tagnum = -1 ;
  G__phosWallDictLN_Coeff.tagnum = -1 ;
  G__phosWallDictLN_Calibrate.tagnum = -1 ;
  G__phosWallDictLN_GainMatch.tagnum = -1 ;
  G__phosWallDictLN_hitEvent.tagnum = -1 ;
  G__phosWallDictLN_phosWallRaw.tagnum = -1 ;
  G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR.tagnum = -1 ;
  G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiterator.tagnum = -1 ;
  G__phosWallDictLN_reverse_iteratorlEvectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__phosWallDictLN_calEvent.tagnum = -1 ;
  G__phosWallDictLN_phosWallCalc.tagnum = -1 ;
  G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR.tagnum = -1 ;
  G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiterator.tagnum = -1 ;
  G__phosWallDictLN_reverse_iteratorlEvectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__phosWallDictLN_auxHit.tagnum = -1 ;
  G__phosWallDictLN_phosWallAux.tagnum = -1 ;
  G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR.tagnum = -1 ;
  G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiterator.tagnum = -1 ;
  G__phosWallDictLN_reverse_iteratorlEvectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__phosWallDictLN_maplEintcOTVector3mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTVector3mUgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablephosWallDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TString);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_phosWallFull),sizeof(phosWallFull),-1,292096,(char*)NULL,G__setup_memvarphosWallFull,G__setup_memfuncphosWallFull);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_Coeffs),sizeof(Coeffs),-1,262144,(char*)NULL,G__setup_memvarCoeffs,G__setup_memfuncCoeffs);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_Pars),sizeof(Pars),-1,262144,(char*)NULL,G__setup_memvarPars,G__setup_memfuncPars);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_Coordinates),sizeof(Coordinates),-1,324864,(char*)NULL,G__setup_memvarCoordinates,G__setup_memfuncCoordinates);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_Neighbours),sizeof(Neighbours),-1,324864,(char*)NULL,G__setup_memvarNeighbours,G__setup_memfuncNeighbours);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_Coeff),sizeof(Coeff),-1,262144,(char*)NULL,G__setup_memvarCoeff,G__setup_memfuncCoeff);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_Calibrate),sizeof(Calibrate),-1,324864,(char*)NULL,G__setup_memvarCalibrate,G__setup_memfuncCalibrate);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_GainMatch),sizeof(GainMatch),-1,324864,(char*)NULL,G__setup_memvarGainMatch,G__setup_memfuncGainMatch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_hitEvent),sizeof(hitEvent),-1,262144,(char*)NULL,G__setup_memvarhitEvent,G__setup_memfunchitEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_phosWallRaw),sizeof(phosWallRaw),-1,292096,(char*)NULL,G__setup_memvarphosWallRaw,G__setup_memfuncphosWallRaw);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgR),sizeof(vector<hitEvent,allocator<hitEvent> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEhitEventcOallocatorlEhitEventgRsPgR,G__setup_memfuncvectorlEhitEventcOallocatorlEhitEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_vectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_reverse_iteratorlEvectorlEhitEventcOallocatorlEhitEventgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_calEvent),sizeof(calEvent),-1,262144,(char*)NULL,G__setup_memvarcalEvent,G__setup_memfunccalEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_phosWallCalc),sizeof(phosWallCalc),-1,292096,(char*)NULL,G__setup_memvarphosWallCalc,G__setup_memfuncphosWallCalc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgR),sizeof(vector<calEvent,allocator<calEvent> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEcalEventcOallocatorlEcalEventgRsPgR,G__setup_memfuncvectorlEcalEventcOallocatorlEcalEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_vectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_reverse_iteratorlEvectorlEcalEventcOallocatorlEcalEventgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_auxHit),sizeof(auxHit),-1,262144,(char*)NULL,G__setup_memvarauxHit,G__setup_memfuncauxHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_phosWallAux),sizeof(phosWallAux),-1,292096,(char*)NULL,G__setup_memvarphosWallAux,G__setup_memfuncphosWallAux);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgR),sizeof(vector<auxHit,allocator<auxHit> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEauxHitcOallocatorlEauxHitgRsPgR,G__setup_memfuncvectorlEauxHitcOallocatorlEauxHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_vectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_reverse_iteratorlEvectorlEauxHitcOallocatorlEauxHitgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__phosWallDictLN_maplEintcOTVector3mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTVector3mUgRsPgRsPgR);
}
extern "C" void G__cpp_setupphosWallDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupphosWallDict()");
  G__set_cpp_environmentphosWallDict();
  G__cpp_setup_tagtablephosWallDict();

  G__cpp_setup_inheritancephosWallDict();

  G__cpp_setup_typetablephosWallDict();

  G__cpp_setup_memvarphosWallDict();

  G__cpp_setup_memfuncphosWallDict();
  G__cpp_setup_globalphosWallDict();
  G__cpp_setup_funcphosWallDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncphosWallDict();
  return;
}
class G__cpp_setup_initphosWallDict {
  public:
    G__cpp_setup_initphosWallDict() { G__add_setup_func("phosWallDict",(G__incsetup)(&G__cpp_setupphosWallDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initphosWallDict() { G__remove_setup_func("phosWallDict"); }
};
G__cpp_setup_initphosWallDict G__cpp_setup_initializerphosWallDict;

